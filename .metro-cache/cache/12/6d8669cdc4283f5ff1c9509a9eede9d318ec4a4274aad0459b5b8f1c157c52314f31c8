{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":8,"column":27,"index":154}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Share","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"paYWbT2KXBPB3KP1hDE47z0MUe8=","exportNames":["*"],"imports":1}},{"name":"./ExpoContacts","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":223},"end":{"line":11,"column":42,"index":265}}],"key":"NtnYQavOUZOyiy5kNPkiCtYHiOA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"onContactsChangeEventName\", {\n    enumerable: true,\n    get: function () {\n      return onContactsChangeEventName;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionResponse\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionResponse;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionExpiration\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionExpiration;\n    }\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.shareContactAsync = shareContactAsync;\n  exports.getContactsAsync = getContactsAsync;\n  exports.getPagedContactsAsync = getPagedContactsAsync;\n  exports.getContactByIdAsync = getContactByIdAsync;\n  exports.addContactAsync = addContactAsync;\n  exports.updateContactAsync = updateContactAsync;\n  exports.removeContactAsync = removeContactAsync;\n  exports.writeContactToFileAsync = writeContactToFileAsync;\n  exports.presentFormAsync = presentFormAsync;\n  exports.addExistingGroupToContainerAsync = addExistingGroupToContainerAsync;\n  exports.createGroupAsync = createGroupAsync;\n  exports.updateGroupNameAsync = updateGroupNameAsync;\n  exports.removeGroupAsync = removeGroupAsync;\n  exports.addExistingContactToGroupAsync = addExistingContactToGroupAsync;\n  exports.removeContactFromGroupAsync = removeContactFromGroupAsync;\n  exports.getGroupsAsync = getGroupsAsync;\n  exports.presentContactPickerAsync = presentContactPickerAsync;\n  exports.getDefaultContainerIdAsync = getDefaultContainerIdAsync;\n  exports.getContainersAsync = getContainersAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.presentAccessPickerAsync = presentAccessPickerAsync;\n  exports.addContactsChangeListener = addContactsChangeListener;\n  Object.defineProperty(exports, \"Fields\", {\n    enumerable: true,\n    get: function () {\n      return Fields;\n    }\n  });\n  Object.defineProperty(exports, \"CalendarFormats\", {\n    enumerable: true,\n    get: function () {\n      return CalendarFormats;\n    }\n  });\n  Object.defineProperty(exports, \"ContainerTypes\", {\n    enumerable: true,\n    get: function () {\n      return ContainerTypes;\n    }\n  });\n  Object.defineProperty(exports, \"SortTypes\", {\n    enumerable: true,\n    get: function () {\n      return SortTypes;\n    }\n  });\n  Object.defineProperty(exports, \"ContactTypes\", {\n    enumerable: true,\n    get: function () {\n      return ContactTypes;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsShare = require(_dependencyMap[2], \"react-native-web/dist/exports/Share\");\n  var Share = _interopDefault(_reactNativeWebDistExportsShare);\n  var _ExpoContacts = require(_dependencyMap[3], \"./ExpoContacts\");\n  var ExpoContacts = _interopDefault(_ExpoContacts);\n  const onContactsChangeEventName = 'onContactsChange';\n\n  /**\n   * @platform ios\n   */\n\n  // @needs-audit\n  /**\n   * Information regarding thumbnail images.\n   * > On Android you can get dimensions using [`Image.getSize`](https://reactnative.dev/docs/image#getsize) method.\n   */\n\n  /**\n   * Base contact type without ID. For better type safety, consider using:\n   * - `Contact` when creating new contacts (no ID needed)\n   * - `ExistingContact` when working with contacts returned from the system (ID guaranteed)\n   */\n\n  /**\n   * Type for existing contacts returned from the system - guarantees the id field is present.\n   */\n\n  /**\n   * The return value for queried contact operations like `getContactsAsync`.\n   */\n\n  /**\n   * Used to query contacts from the user's device.\n   */\n\n  /**\n   * Denotes the functionality of a native contact form.\n   * @platform ios\n   */\n\n  /**\n   * Used to query native contact groups.\n   * @platform ios\n   */\n\n  /**\n   * A parent to contacts. A contact can belong to multiple groups. Here are some query operations you can perform:\n   * - Child Contacts: `getContactsAsync({ groupId })`\n   * - Groups From Container: `getGroupsAsync({ containerId })`\n   * - Groups Named: `getContainersAsync({ groupName })`\n   * @platform ios\n   */\n\n  /**\n   * Used to query native contact containers.\n   * @platform ios\n   */\n\n  /**\n   * Returns whether the Contacts API is enabled on the current device. This method does not check the app permissions.\n   * @returns A promise that fulfills with a `boolean`, indicating whether the Contacts API is available on the current device. It always resolves to `false` on web.\n   */\n  async function isAvailableAsync() {\n    return !!ExpoContacts.default.getContactsAsync;\n  }\n\n  // @docsMissing\n  async function shareContactAsync(contactId, message, shareOptions = {}) {\n    if (Platform.default.OS === 'ios') {\n      const url = await writeContactToFileAsync({\n        id: contactId\n      });\n      return await Share.default.share({\n        url,\n        message\n      }, shareOptions);\n    } else if (!ExpoContacts.default.shareContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'shareContactAsync');\n    }\n    return await ExpoContacts.default.shareContactAsync(contactId, message);\n  }\n\n  /**\n   * Return a list of contacts that fit a given criteria. You can get all of the contacts by passing no criteria.\n   * @param contactQuery Object used to query contacts.\n   * @return A promise that fulfills with `ContactResponse` object returned from the query.\n   * @example\n   * ```js\n   * const { data } = await Contacts.getContactsAsync({\n   *   fields: [Contacts.Fields.Emails],\n   * });\n   *\n   * if (data.length > 0) {\n   *   const contact = data[0];\n   *   console.log(contact);\n   * }\n   * ```\n   */\n  async function getContactsAsync(contactQuery = {}) {\n    if (!ExpoContacts.default.getContactsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContactsAsync');\n    }\n    return await ExpoContacts.default.getContactsAsync(contactQuery);\n  }\n  async function getPagedContactsAsync(contactQuery = {}) {\n    const {\n      pageSize,\n      ...nOptions\n    } = contactQuery;\n    if (pageSize && pageSize <= 0) {\n      throw new Error('Error: Contacts.getPagedContactsAsync: `pageSize` must be greater than 0');\n    }\n    return await getContactsAsync({\n      ...nOptions,\n      pageSize\n    });\n  }\n\n  /**\n   * Used for gathering precise data about a contact. Returns a contact matching the given `id`.\n   * @param id The ID of a system contact.\n   * @param fields If specified, the fields defined will be returned. When skipped, all fields will be returned.\n   * @return A promise that fulfills with `Contact` object with ID matching the input ID, or `undefined` if there is no match.\n   * @example\n   * ```js\n   * const contact = await Contacts.getContactByIdAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * if (contact) {\n   *   console.log(contact);\n   * }\n   * ```\n   */\n  async function getContactByIdAsync(id, fields) {\n    if (!ExpoContacts.default.getContactsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContactsAsync');\n    }\n    if (id == null) {\n      throw new Error('Error: Contacts.getContactByIdAsync: id is required');\n    } else {\n      const results = await ExpoContacts.default.getContactsAsync({\n        pageSize: 1,\n        pageOffset: 0,\n        fields,\n        id\n      });\n      if (results && results.data && results.data.length > 0) {\n        return results.data[0];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates a new contact and adds it to the system.\n   * > **Note**: For Android users, the Expo Go app does not have the required `WRITE_CONTACTS` permission to write to Contacts.\n   * > You will need to create a [development build](/develop/development-builds/create-a-build/) and add permission in there manually to use this method.\n   * @param contact A contact with the changes you wish to persist. The `id` parameter will not be used.\n   * @param containerId @tag-ios The container that will parent the contact.\n   * @return A promise that fulfills with ID of the new system contact.\n   * @example\n   * ```js\n   * const contact = {\n   *   [Contacts.Fields.FirstName]: 'Bird',\n   *   [Contacts.Fields.LastName]: 'Man',\n   *   [Contacts.Fields.Company]: 'Young Money',\n   * };\n   * const contactId = await Contacts.addContactAsync(contact);\n   * ```\n   */\n  async function addContactAsync(contact, containerId) {\n    if (!ExpoContacts.default.addContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addContactAsync');\n    }\n    return await ExpoContacts.default.addContactAsync(contact, containerId);\n  }\n\n  /**\n   * Mutate the information of an existing contact. Due to an iOS bug, `nonGregorianBirthday` field cannot be modified.\n   * @param contact A contact object including the wanted changes. Contact `id` is required.\n   * @return A promise that fulfills with ID of the updated system contact if mutation was successful.\n   * @example\n   * ```js\n   * const contact = {\n   *   id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   *   [Contacts.Fields.FirstName]: 'Drake',\n   *   [Contacts.Fields.Company]: 'Young Money',\n   * };\n   * await Contacts.updateContactAsync(contact);\n   * ```\n   */\n  async function updateContactAsync(contact) {\n    if (!ExpoContacts.default.updateContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'updateContactAsync');\n    }\n    return await ExpoContacts.default.updateContactAsync(contact);\n  }\n\n  // @needs-audit\n  /**\n   * Delete a contact from the system.\n   * @param contactId ID of the contact you want to delete.\n   * @example\n   * ```js\n   * await Contacts.removeContactAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function removeContactAsync(contactId) {\n    if (!ExpoContacts.default.removeContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeContactAsync');\n    }\n    return await ExpoContacts.default.removeContactAsync(contactId);\n  }\n\n  /**\n   * Query a set of contacts and write them to a local URI that can be used for sharing.\n   * @param contactQuery Used to query contact you want to write.\n   * @return A promise that fulfills with shareable local URI, or `undefined` if there was no match.\n   * @example\n   * ```js\n   * const localUri = await Contacts.writeContactToFileAsync({\n   *   id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   * });\n   * Share.share({ url: localUri, message: 'Call me!' });\n   * ```\n   */\n  async function writeContactToFileAsync(contactQuery = {}) {\n    if (!ExpoContacts.default.writeContactToFileAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'writeContactToFileAsync');\n    }\n    return await ExpoContacts.default.writeContactToFileAsync(contactQuery);\n  }\n\n  // @needs-audit\n  /**\n   * Present a native form for manipulating contacts.\n   * @param contactId The ID of a system contact.\n   * @param contact A contact with the changes you want to persist.\n   * @param formOptions Options for the native editor.\n   * @example\n   * ```js\n   * await Contacts.presentFormAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   */\n  async function presentFormAsync(contactId, contact, formOptions = {}) {\n    if (!ExpoContacts.default.presentFormAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'presentFormAsync');\n    }\n    if (Platform.default.OS === 'ios') {\n      const adjustedOptions = formOptions;\n      if (contactId) {\n        if (contact) {\n          contact = undefined;\n          console.log('Expo.Contacts.presentFormAsync: You should define either a `contact` or a `contactId` but not both.');\n        }\n        if (adjustedOptions.isNew !== undefined) {\n          console.log('Expo.Contacts.presentFormAsync: `formOptions.isNew` is not supported with `contactId`');\n        }\n      }\n      return await ExpoContacts.default.presentFormAsync(contactId, contact, adjustedOptions);\n    } else {\n      return await ExpoContacts.default.presentFormAsync(contactId, contact, formOptions);\n    }\n  }\n\n  // iOS Only\n\n  /**\n   * Add a group to a container.\n   * @param groupId The group you want to target.\n   * @param containerId The container you want to add membership to.\n   * @example\n   * ```js\n   * await Contacts.addExistingGroupToContainerAsync(\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function addExistingGroupToContainerAsync(groupId, containerId) {\n    if (!ExpoContacts.default.addExistingGroupToContainerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addExistingGroupToContainerAsync');\n    }\n    return await ExpoContacts.default.addExistingGroupToContainerAsync(groupId, containerId);\n  }\n\n  /**\n   * Create a group with a name, and add it to a container. If the container is `undefined`, the default container will be targeted.\n   * @param name Name of the new group.\n   * @param containerId The container you to add membership to.\n   * @return A promise that fulfills with ID of the new group.\n   * @example\n   * ```js\n   * const groupId = await Contacts.createGroupAsync('Sailor Moon');\n   * ```\n   * @platform ios\n   */\n  async function createGroupAsync(name, containerId) {\n    if (!ExpoContacts.default.createGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'createGroupAsync');\n    }\n    name = name || _expoModulesCore.uuid.v4();\n    if (!containerId) {\n      containerId = await getDefaultContainerIdAsync();\n    }\n    return await ExpoContacts.default.createGroupAsync(name, containerId);\n  }\n\n  /**\n   * Change the name of an existing group.\n   * @param groupName New name for an existing group.\n   * @param groupId ID of the group you want to edit.\n   * @example\n   * ```js\n   * await Contacts.updateGroupName('Expo Friends', '161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function updateGroupNameAsync(groupName, groupId) {\n    if (!ExpoContacts.default.updateGroupNameAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'updateGroupNameAsync');\n    }\n    return await ExpoContacts.default.updateGroupNameAsync(groupName, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Delete a group from the device.\n   * @param groupId ID of the group you want to remove.\n   * @example\n   * ```js\n   * await Contacts.removeGroupAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function removeGroupAsync(groupId) {\n    if (!ExpoContacts.default.removeGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeGroupAsync');\n    }\n    return await ExpoContacts.default.removeGroupAsync(groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Add a contact as a member to a group. A contact can be a member of multiple groups.\n   * @param contactId ID of the contact you want to edit.\n   * @param groupId ID for the group you want to add membership to.\n   * @example\n   * ```js\n   * await Contacts.addExistingContactToGroupAsync(\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function addExistingContactToGroupAsync(contactId, groupId) {\n    if (!ExpoContacts.default.addExistingContactToGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addExistingContactToGroupAsync');\n    }\n    return await ExpoContacts.default.addExistingContactToGroupAsync(contactId, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Remove a contact's membership from a given group. This will not delete the contact.\n   * @param contactId ID of the contact you want to remove.\n   * @param groupId ID for the group you want to remove membership of.\n   * @example\n   * ```js\n   * await Contacts.removeContactFromGroupAsync(\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function removeContactFromGroupAsync(contactId, groupId) {\n    if (!ExpoContacts.default.removeContactFromGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeContactFromGroupAsync');\n    }\n    return await ExpoContacts.default.removeContactFromGroupAsync(contactId, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Query and return a list of system groups.\n   * @param groupQuery Information regarding which groups you want to get.\n   * @example\n   * ```js\n   * const groups = await Contacts.getGroupsAsync({ groupName: 'sailor moon' });\n   * const allGroups = await Contacts.getGroupsAsync({});\n   * ```\n   * @return A promise that fulfills with array of groups that fit the query.\n   * @platform ios\n   */\n  async function getGroupsAsync(groupQuery) {\n    if (!ExpoContacts.default.getGroupsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getGroupsAsync');\n    }\n    return await ExpoContacts.default.getGroupsAsync(groupQuery);\n  }\n\n  /**\n   * Presents a native contact picker to select a single contact from the system. On Android, the `READ_CONTACTS` permission is required. You can\n   * obtain this permission by calling the [`Contacts.requestPermissionsAsync()`](#contactsrequestpermissionsasync) method. On iOS, no permissions are\n   * required to use this method.\n   * @return A promise that fulfills with a single `Contact` object if a contact is selected or `null` if no contact is selected (when selection is canceled).\n   */\n  async function presentContactPickerAsync() {\n    if (!ExpoContacts.default.presentContactPickerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'presentContactPickerAsync');\n    }\n    return await ExpoContacts.default.presentContactPickerAsync();\n  }\n\n  /**\n   * Get the default container's ID.\n   * @return A promise that fulfills with default container ID.\n   * @example\n   * ```js\n   * const containerId = await Contacts.getDefaultContainerIdAsync();\n   * ```\n   * @platform ios\n   */\n  async function getDefaultContainerIdAsync() {\n    if (!ExpoContacts.default.getDefaultContainerIdentifierAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getDefaultContainerIdentifierAsync');\n    }\n    return await ExpoContacts.default.getDefaultContainerIdentifierAsync();\n  }\n\n  /**\n   * Query a list of system containers.\n   * @param containerQuery Information used to gather containers.\n   * @return A promise that fulfills with array of containers that fit the query.\n   * @example\n   * ```js\n   * const allContainers = await Contacts.getContainersAsync({\n   *   contactId: '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   * });\n   * ```\n   * @platform ios\n   */\n  async function getContainersAsync(containerQuery) {\n    if (!ExpoContacts.default.getContainersAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContainersAsync');\n    }\n    return await ExpoContacts.default.getContainersAsync(containerQuery);\n  }\n\n  /**\n   * Checks user's permissions for accessing contacts data.\n   * @return A promise that resolves to a [ContactsPermissionResponse](#contactspermissionresponse) object.\n   */\n  async function getPermissionsAsync() {\n    if (!ExpoContacts.default.getPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getPermissionsAsync');\n    }\n    return await ExpoContacts.default.getPermissionsAsync();\n  }\n\n  /**\n   * Asks the user to grant permissions for accessing contacts data.\n   * @return A promise that resolves to a [ContactsPermissionResponse](#contactspermissionresponse) object.\n   */\n  async function requestPermissionsAsync() {\n    if (!ExpoContacts.default.requestPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'requestPermissionsAsync');\n    }\n    return await ExpoContacts.default.requestPermissionsAsync();\n  }\n\n  /**\n   * Presents a modal which allows the user to select which contacts the app has access to.\n   * Using this function is reasonable only when the app has \"limited\" permissions.\n   * @return A promise that resolves with an array of contact identifiers that were newly granted to the app.\n   * Contacts which the app lost access to are not listed. On platforms other than iOS and below 18.0, the promise rejects immediately.\n   * @platform ios 18.0+\n   */\n  async function presentAccessPickerAsync() {\n    return await ExpoContacts.default.presentAccessPickerAsync();\n  }\n\n  /**\n   * Adds a listener for contact changes. The listener will be called whenever contacts are added, updated, or deleted.\n   *\n   * **Platform differences:**\n   * - **Android**: 5-7 second delay - uses `ContentObserver` with inherent system delays\n   * - **iOS**: Immediate response - uses `CNContactStoreDidChangeNotification`\n   *\n   * The Android delay is a system limitation that affects all apps using `ContentObserver` for contacts.\n   * This delay is by design to batch notifications for better performance and battery life.\n   * For more immediate updates, you can also listen to app state changes and refresh\n   * contacts when the app comes to the foreground. This ensures users see the latest contacts when\n   * returning from the native Contacts app.\n   *\n   * @param listener The function that will be executed when contacts change.\n   * This function accepts no arguments.\n   *\n   * @returns A subscription object with a `remove` method to stop listening.\n   * @example\n   * ```jsx\n   * const subscription = Contacts.addContactChangeListener(() => {\n   *   console.log('Contacts changed - refreshing contact list');\n   *   // Refresh your contact list when changes are detected\n   *   loadContacts();\n   * });\n   *\n   * // Later, remove the listener\n   * subscription.remove();\n   * ```\n   */\n  function addContactsChangeListener(listener) {\n    if (!ExpoContacts.default.addListener) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addContactChangeListener');\n    }\n    const eventSubscription = ExpoContacts.default.addListener(onContactsChangeEventName, listener);\n    return {\n      remove: () => {\n        eventSubscription?.remove();\n      }\n    };\n  }\n\n  /**\n   * Possible fields to retrieve for a contact.\n   */\n  let Fields = /*#__PURE__*/function (Fields) {\n    Fields[\"ID\"] = \"id\";\n    Fields[\"ContactType\"] = \"contactType\";\n    Fields[\"Name\"] = \"name\";\n    Fields[\"FirstName\"] = \"firstName\";\n    Fields[\"MiddleName\"] = \"middleName\";\n    Fields[\"LastName\"] = \"lastName\";\n    Fields[\"MaidenName\"] = \"maidenName\";\n    Fields[\"NamePrefix\"] = \"namePrefix\";\n    Fields[\"NameSuffix\"] = \"nameSuffix\";\n    Fields[\"Nickname\"] = \"nickname\";\n    Fields[\"PhoneticFirstName\"] = \"phoneticFirstName\";\n    Fields[\"PhoneticMiddleName\"] = \"phoneticMiddleName\";\n    Fields[\"PhoneticLastName\"] = \"phoneticLastName\";\n    Fields[\"Birthday\"] = \"birthday\";\n    /**\n     * @platform ios\n     */\n    Fields[\"NonGregorianBirthday\"] = \"nonGregorianBirthday\";\n    Fields[\"Emails\"] = \"emails\";\n    Fields[\"PhoneNumbers\"] = \"phoneNumbers\";\n    Fields[\"Addresses\"] = \"addresses\";\n    /**\n     * @platform ios\n     */\n    Fields[\"SocialProfiles\"] = \"socialProfiles\";\n    Fields[\"InstantMessageAddresses\"] = \"instantMessageAddresses\";\n    Fields[\"UrlAddresses\"] = \"urlAddresses\";\n    Fields[\"Company\"] = \"company\";\n    Fields[\"JobTitle\"] = \"jobTitle\";\n    Fields[\"Department\"] = \"department\";\n    Fields[\"ImageAvailable\"] = \"imageAvailable\";\n    Fields[\"Image\"] = \"image\";\n    Fields[\"RawImage\"] = \"rawImage\";\n    Fields[\"ExtraNames\"] = \"extraNames\";\n    Fields[\"Note\"] = \"note\";\n    Fields[\"Dates\"] = \"dates\";\n    Fields[\"Relationships\"] = \"relationships\";\n    /**\n     * @platform android\n     */\n    Fields[\"IsFavorite\"] = \"isFavorite\";\n    return Fields;\n  }({});\n  /**\n   * This format denotes the common calendar format used to specify how a date is calculated in `nonGregorianBirthday` fields.\n   */\n  let CalendarFormats = /*#__PURE__*/function (CalendarFormats) {\n    CalendarFormats[\"Gregorian\"] = \"gregorian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Buddhist\"] = \"buddhist\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Chinese\"] = \"chinese\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Coptic\"] = \"coptic\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"EthiopicAmeteMihret\"] = \"ethiopicAmeteMihret\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"EthiopicAmeteAlem\"] = \"ethiopicAmeteAlem\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Hebrew\"] = \"hebrew\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"ISO8601\"] = \"iso8601\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Indian\"] = \"indian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Islamic\"] = \"islamic\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicCivil\"] = \"islamicCivil\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Japanese\"] = \"japanese\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Persian\"] = \"persian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"RepublicOfChina\"] = \"republicOfChina\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicTabular\"] = \"islamicTabular\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicUmmAlQura\"] = \"islamicUmmAlQura\";\n    return CalendarFormats;\n  }({});\n  /**\n   * @platform ios\n   */\n  let ContainerTypes = /*#__PURE__*/function (ContainerTypes) {\n    /**\n     * A local non-iCloud container.\n     */\n    ContainerTypes[\"Local\"] = \"local\";\n    /**\n     * In association with email server.\n     */\n    ContainerTypes[\"Exchange\"] = \"exchange\";\n    /**\n     * With cardDAV protocol used for sharing.\n     */\n    ContainerTypes[\"CardDAV\"] = \"cardDAV\";\n    /**\n     * Unknown container.\n     */\n    ContainerTypes[\"Unassigned\"] = \"unassigned\";\n    return ContainerTypes;\n  }({});\n  let SortTypes = /*#__PURE__*/function (SortTypes) {\n    /**\n     * The user default method of sorting.\n     * @platform android\n     */\n    SortTypes[\"UserDefault\"] = \"userDefault\";\n    /**\n     * Sort by first name in ascending order.\n     */\n    SortTypes[\"FirstName\"] = \"firstName\";\n    /**\n     * Sort by last name in ascending order.\n     */\n    SortTypes[\"LastName\"] = \"lastName\";\n    /**\n     * No sorting should be applied.\n     */\n    SortTypes[\"None\"] = \"none\";\n    return SortTypes;\n  }({});\n  let ContactTypes = /*#__PURE__*/function (ContactTypes) {\n    /**\n     * Contact is a human.\n     */\n    ContactTypes[\"Person\"] = \"person\";\n    /**\n     * Contact is group or company.\n     */\n    ContactTypes[\"Company\"] = \"company\";\n    return ContactTypes;\n  }({});\n});","lineCount":784,"map":[[12,2,13,0,"Object"],[12,8,13,0],[12,9,13,0,"defineProperty"],[12,23,13,0],[12,24,13,0,"exports"],[12,31,13,0],[13,4,13,0,"enumerable"],[13,14,13,0],[14,4,13,0,"get"],[14,7,13,0],[14,18,13,0,"get"],[14,19,13,0],[15,6,13,0],[15,13,13,0,"onContactsChangeEventName"],[15,38,13,0],[16,4,13,0],[17,2,13,0],[18,2,586,0,"Object"],[18,8,586,0],[18,9,586,0,"defineProperty"],[18,23,586,0],[18,24,586,0,"exports"],[18,31,586,0],[19,4,586,0,"enumerable"],[19,14,586,0],[20,4,586,0,"get"],[20,7,586,0],[20,18,586,0,"get"],[20,19,586,0],[21,6,586,0],[21,13,586,9,"PermissionStatus"],[21,29,586,25],[21,30,586,25,"PermissionStatus"],[21,46,586,25],[22,4,586,25],[23,2,586,25],[24,2,586,0,"Object"],[24,8,586,0],[24,9,586,0,"defineProperty"],[24,23,586,0],[24,24,586,0,"exports"],[24,31,586,0],[25,4,586,0,"enumerable"],[25,14,586,0],[26,4,586,0,"get"],[26,7,586,0],[26,18,586,0,"get"],[26,19,586,0],[27,6,586,0],[27,13,586,27,"PermissionResponse"],[27,29,586,45],[27,30,586,45,"PermissionResponse"],[27,48,586,45],[28,4,586,45],[29,2,586,45],[30,2,586,0,"Object"],[30,8,586,0],[30,9,586,0,"defineProperty"],[30,23,586,0],[30,24,586,0,"exports"],[30,31,586,0],[31,4,586,0,"enumerable"],[31,14,586,0],[32,4,586,0,"get"],[32,7,586,0],[32,18,586,0,"get"],[32,19,586,0],[33,6,586,0],[33,13,586,47,"PermissionExpiration"],[33,29,586,67],[33,30,586,67,"PermissionExpiration"],[33,50,586,67],[34,4,586,67],[35,2,586,67],[36,2,592,0,"exports"],[36,9,592,0],[36,10,592,0,"isAvailableAsync"],[36,26,592,0],[36,29,592,0,"isAvailableAsync"],[36,45,592,0],[37,2,597,0,"exports"],[37,9,597,0],[37,10,597,0,"shareContactAsync"],[37,27,597,0],[37,30,597,0,"shareContactAsync"],[37,47,597,0],[38,2,635,0,"exports"],[38,9,635,0],[38,10,635,0,"getContactsAsync"],[38,26,635,0],[38,29,635,0,"getContactsAsync"],[38,45,635,0],[39,2,642,0,"exports"],[39,9,642,0],[39,10,642,0,"getPagedContactsAsync"],[39,31,642,0],[39,34,642,0,"getPagedContactsAsync"],[39,55,642,0],[40,2,670,0,"exports"],[40,9,670,0],[40,10,670,0,"getContactByIdAsync"],[40,29,670,0],[40,32,670,0,"getContactByIdAsync"],[40,51,670,0],[41,2,711,0,"exports"],[41,9,711,0],[41,10,711,0,"addContactAsync"],[41,25,711,0],[41,28,711,0,"addContactAsync"],[41,43,711,0],[42,2,733,0,"exports"],[42,9,733,0],[42,10,733,0,"updateContactAsync"],[42,28,733,0],[42,31,733,0,"updateContactAsync"],[42,49,733,0],[43,2,752,0,"exports"],[43,9,752,0],[43,10,752,0,"removeContactAsync"],[43,28,752,0],[43,31,752,0,"removeContactAsync"],[43,49,752,0],[44,2,771,0,"exports"],[44,9,771,0],[44,10,771,0,"writeContactToFileAsync"],[44,33,771,0],[44,36,771,0,"writeContactToFileAsync"],[44,59,771,0],[45,2,791,0,"exports"],[45,9,791,0],[45,10,791,0,"presentFormAsync"],[45,26,791,0],[45,29,791,0,"presentFormAsync"],[45,45,791,0],[46,2,836,0,"exports"],[46,9,836,0],[46,10,836,0,"addExistingGroupToContainerAsync"],[46,42,836,0],[46,45,836,0,"addExistingGroupToContainerAsync"],[46,77,836,0],[47,2,858,0,"exports"],[47,9,858,0],[47,10,858,0,"createGroupAsync"],[47,26,858,0],[47,29,858,0,"createGroupAsync"],[47,45,858,0],[48,2,881,0,"exports"],[48,9,881,0],[48,10,881,0,"updateGroupNameAsync"],[48,30,881,0],[48,33,881,0,"updateGroupNameAsync"],[48,53,881,0],[49,2,899,0,"exports"],[49,9,899,0],[49,10,899,0,"removeGroupAsync"],[49,26,899,0],[49,29,899,0,"removeGroupAsync"],[49,45,899,0],[50,2,921,0,"exports"],[50,9,921,0],[50,10,921,0,"addExistingContactToGroupAsync"],[50,40,921,0],[50,43,921,0,"addExistingContactToGroupAsync"],[50,73,921,0],[51,2,946,0,"exports"],[51,9,946,0],[51,10,946,0,"removeContactFromGroupAsync"],[51,37,946,0],[51,40,946,0,"removeContactFromGroupAsync"],[51,67,946,0],[52,2,969,0,"exports"],[52,9,969,0],[52,10,969,0,"getGroupsAsync"],[52,24,969,0],[52,27,969,0,"getGroupsAsync"],[52,41,969,0],[53,2,983,0,"exports"],[53,9,983,0],[53,10,983,0,"presentContactPickerAsync"],[53,35,983,0],[53,38,983,0,"presentContactPickerAsync"],[53,63,983,0],[54,2,999,0,"exports"],[54,9,999,0],[54,10,999,0,"getDefaultContainerIdAsync"],[54,36,999,0],[54,39,999,0,"getDefaultContainerIdAsync"],[54,65,999,0],[55,2,1019,0,"exports"],[55,9,1019,0],[55,10,1019,0,"getContainersAsync"],[55,28,1019,0],[55,31,1019,0,"getContainersAsync"],[55,49,1019,0],[56,2,1031,0,"exports"],[56,9,1031,0],[56,10,1031,0,"getPermissionsAsync"],[56,29,1031,0],[56,32,1031,0,"getPermissionsAsync"],[56,51,1031,0],[57,2,1043,0,"exports"],[57,9,1043,0],[57,10,1043,0,"requestPermissionsAsync"],[57,33,1043,0],[57,36,1043,0,"requestPermissionsAsync"],[57,59,1043,0],[58,2,1058,0,"exports"],[58,9,1058,0],[58,10,1058,0,"presentAccessPickerAsync"],[58,34,1058,0],[58,37,1058,0,"presentAccessPickerAsync"],[58,61,1058,0],[59,2,1091,0,"exports"],[59,9,1091,0],[59,10,1091,0,"addContactsChangeListener"],[59,35,1091,0],[59,38,1091,0,"addContactsChangeListener"],[59,63,1091,0],[60,2,1108,0,"Object"],[60,8,1108,0],[60,9,1108,0,"defineProperty"],[60,23,1108,0],[60,24,1108,0,"exports"],[60,31,1108,0],[61,4,1108,0,"enumerable"],[61,14,1108,0],[62,4,1108,0,"get"],[62,7,1108,0],[62,18,1108,0,"get"],[62,19,1108,0],[63,6,1108,0],[63,13,1108,0,"Fields"],[63,19,1108,0],[64,4,1108,0],[65,2,1108,0],[66,2,1155,0,"Object"],[66,8,1155,0],[66,9,1155,0,"defineProperty"],[66,23,1155,0],[66,24,1155,0,"exports"],[66,31,1155,0],[67,4,1155,0,"enumerable"],[67,14,1155,0],[68,4,1155,0,"get"],[68,7,1155,0],[68,18,1155,0,"get"],[68,19,1155,0],[69,6,1155,0],[69,13,1155,0,"CalendarFormats"],[69,28,1155,0],[70,4,1155,0],[71,2,1155,0],[72,2,1222,0,"Object"],[72,8,1222,0],[72,9,1222,0,"defineProperty"],[72,23,1222,0],[72,24,1222,0,"exports"],[72,31,1222,0],[73,4,1222,0,"enumerable"],[73,14,1222,0],[74,4,1222,0,"get"],[74,7,1222,0],[74,18,1222,0,"get"],[74,19,1222,0],[75,6,1222,0],[75,13,1222,0,"ContainerTypes"],[75,27,1222,0],[76,4,1222,0],[77,2,1222,0],[78,2,1241,0,"Object"],[78,8,1241,0],[78,9,1241,0,"defineProperty"],[78,23,1241,0],[78,24,1241,0,"exports"],[78,31,1241,0],[79,4,1241,0,"enumerable"],[79,14,1241,0],[80,4,1241,0,"get"],[80,7,1241,0],[80,18,1241,0,"get"],[80,19,1241,0],[81,6,1241,0],[81,13,1241,0,"SortTypes"],[81,22,1241,0],[82,4,1241,0],[83,2,1241,0],[84,2,1261,0,"Object"],[84,8,1261,0],[84,9,1261,0,"defineProperty"],[84,23,1261,0],[84,24,1261,0,"exports"],[84,31,1261,0],[85,4,1261,0,"enumerable"],[85,14,1261,0],[86,4,1261,0,"get"],[86,7,1261,0],[86,18,1261,0,"get"],[86,19,1261,0],[87,6,1261,0],[87,13,1261,0,"ContactTypes"],[87,25,1261,0],[88,4,1261,0],[89,2,1261,0],[90,2,1,0],[90,6,1,0,"_expoModulesCore"],[90,22,1,0],[90,25,1,0,"require"],[90,32,1,0],[90,33,1,0,"_dependencyMap"],[90,47,1,0],[91,2,8,27],[91,6,8,27,"_reactNativeWebDistExportsPlatform"],[91,40,8,27],[91,43,8,27,"require"],[91,50,8,27],[91,51,8,27,"_dependencyMap"],[91,65,8,27],[92,2,8,27],[92,6,8,27,"Platform"],[92,14,8,27],[92,17,8,27,"_interopDefault"],[92,32,8,27],[92,33,8,27,"_reactNativeWebDistExportsPlatform"],[92,67,8,27],[93,2,8,27],[93,6,8,27,"_reactNativeWebDistExportsShare"],[93,37,8,27],[93,40,8,27,"require"],[93,47,8,27],[93,48,8,27,"_dependencyMap"],[93,62,8,27],[94,2,8,27],[94,6,8,27,"Share"],[94,11,8,27],[94,14,8,27,"_interopDefault"],[94,29,8,27],[94,30,8,27,"_reactNativeWebDistExportsShare"],[94,61,8,27],[95,2,11,0],[95,6,11,0,"_ExpoContacts"],[95,19,11,0],[95,22,11,0,"require"],[95,29,11,0],[95,30,11,0,"_dependencyMap"],[95,44,11,0],[96,2,11,0],[96,6,11,0,"ExpoContacts"],[96,18,11,0],[96,21,11,0,"_interopDefault"],[96,36,11,0],[96,37,11,0,"_ExpoContacts"],[96,50,11,0],[97,2,13,7],[97,8,13,13,"onContactsChangeEventName"],[97,33,13,38],[97,36,13,41],[97,54,13,59],[99,2,168,0],[100,0,169,0],[101,0,170,0],[103,2,240,0],[104,2,241,0],[105,0,242,0],[106,0,243,0],[107,0,244,0],[109,2,267,0],[110,0,268,0],[111,0,269,0],[112,0,270,0],[113,0,271,0],[115,2,401,0],[116,0,402,0],[117,0,403,0],[119,2,411,0],[120,0,412,0],[121,0,413,0],[123,2,431,0],[124,0,432,0],[125,0,433,0],[127,2,477,0],[128,0,478,0],[129,0,479,0],[130,0,480,0],[132,2,524,0],[133,0,525,0],[134,0,526,0],[135,0,527,0],[137,2,543,0],[138,0,544,0],[139,0,545,0],[140,0,546,0],[141,0,547,0],[142,0,548,0],[143,0,549,0],[145,2,561,0],[146,0,562,0],[147,0,563,0],[148,0,564,0],[150,2,588,0],[151,0,589,0],[152,0,590,0],[153,0,591,0],[154,2,592,7],[154,17,592,22,"isAvailableAsync"],[154,33,592,38,"isAvailableAsync"],[154,34,592,38],[154,36,592,59],[155,4,593,2],[155,11,593,9],[155,12,593,10],[155,13,593,11,"ExpoContacts"],[155,25,593,23],[155,26,593,23,"default"],[155,33,593,23],[155,34,593,24,"getContactsAsync"],[155,50,593,40],[156,2,594,0],[158,2,596,0],[159,2,597,7],[159,17,597,22,"shareContactAsync"],[159,34,597,39,"shareContactAsync"],[159,35,598,2,"contactId"],[159,44,598,19],[159,46,599,2,"message"],[159,53,599,17],[159,55,600,2,"shareOptions"],[159,67,600,28],[159,70,600,31],[159,71,600,32],[159,72,600,33],[159,74,601,16],[160,4,602,2],[160,8,602,6,"Platform"],[160,16,602,14],[160,17,602,14,"default"],[160,24,602,14],[160,25,602,15,"OS"],[160,27,602,17],[160,32,602,22],[160,37,602,27],[160,39,602,29],[161,6,603,4],[161,12,603,10,"url"],[161,15,603,13],[161,18,603,16],[161,24,603,22,"writeContactToFileAsync"],[161,47,603,45],[161,48,603,46],[162,8,604,6,"id"],[162,10,604,8],[162,12,604,10,"contactId"],[163,6,605,4],[163,7,605,5],[163,8,605,6],[164,6,606,4],[164,13,606,11],[164,19,606,17,"Share"],[164,24,606,22],[164,25,606,22,"default"],[164,32,606,22],[164,33,606,23,"share"],[164,38,606,28],[164,39,607,6],[165,8,608,8,"url"],[165,11,608,11],[166,8,609,8,"message"],[167,6,610,6],[167,7,610,7],[167,9,611,6,"shareOptions"],[167,21,612,4],[167,22,612,5],[168,4,613,2],[168,5,613,3],[168,11,613,9],[168,15,613,13],[168,16,613,14,"ExpoContacts"],[168,28,613,26],[168,29,613,26,"default"],[168,36,613,26],[168,37,613,27,"shareContactAsync"],[168,54,613,44],[168,56,613,46],[169,6,614,4],[169,12,614,10],[169,16,614,14,"UnavailabilityError"],[169,32,614,33],[169,33,614,33,"UnavailabilityError"],[169,52,614,33],[169,53,614,34],[169,63,614,44],[169,65,614,46],[169,84,614,65],[169,85,614,66],[170,4,615,2],[171,4,616,2],[171,11,616,9],[171,17,616,15,"ExpoContacts"],[171,29,616,27],[171,30,616,27,"default"],[171,37,616,27],[171,38,616,28,"shareContactAsync"],[171,55,616,45],[171,56,616,46,"contactId"],[171,65,616,55],[171,67,616,57,"message"],[171,74,616,64],[171,75,616,65],[172,2,617,0],[174,2,619,0],[175,0,620,0],[176,0,621,0],[177,0,622,0],[178,0,623,0],[179,0,624,0],[180,0,625,0],[181,0,626,0],[182,0,627,0],[183,0,628,0],[184,0,629,0],[185,0,630,0],[186,0,631,0],[187,0,632,0],[188,0,633,0],[189,0,634,0],[190,2,635,7],[190,17,635,22,"getContactsAsync"],[190,33,635,38,"getContactsAsync"],[190,34,635,39,"contactQuery"],[190,46,635,65],[190,49,635,68],[190,50,635,69],[190,51,635,70],[190,53,635,98],[191,4,636,2],[191,8,636,6],[191,9,636,7,"ExpoContacts"],[191,21,636,19],[191,22,636,19,"default"],[191,29,636,19],[191,30,636,20,"getContactsAsync"],[191,46,636,36],[191,48,636,38],[192,6,637,4],[192,12,637,10],[192,16,637,14,"UnavailabilityError"],[192,32,637,33],[192,33,637,33,"UnavailabilityError"],[192,52,637,33],[192,53,637,34],[192,63,637,44],[192,65,637,46],[192,83,637,64],[192,84,637,65],[193,4,638,2],[194,4,639,2],[194,11,639,9],[194,17,639,15,"ExpoContacts"],[194,29,639,27],[194,30,639,27,"default"],[194,37,639,27],[194,38,639,28,"getContactsAsync"],[194,54,639,44],[194,55,639,45,"contactQuery"],[194,67,639,57],[194,68,639,58],[195,2,640,0],[196,2,642,7],[196,17,642,22,"getPagedContactsAsync"],[196,38,642,43,"getPagedContactsAsync"],[196,39,643,2,"contactQuery"],[196,51,643,28],[196,54,643,31],[196,55,643,32],[196,56,643,33],[196,58,644,28],[197,4,645,2],[197,10,645,8],[198,6,645,10,"pageSize"],[198,14,645,18],[199,6,645,20],[199,9,645,23,"nOptions"],[200,4,645,32],[200,5,645,33],[200,8,645,36,"contactQuery"],[200,20,645,48],[201,4,647,2],[201,8,647,6,"pageSize"],[201,16,647,14],[201,20,647,18,"pageSize"],[201,28,647,26],[201,32,647,30],[201,33,647,31],[201,35,647,33],[202,6,648,4],[202,12,648,10],[202,16,648,14,"Error"],[202,21,648,19],[202,22,648,20],[202,96,648,94],[202,97,648,95],[203,4,649,2],[204,4,651,2],[204,11,651,9],[204,17,651,15,"getContactsAsync"],[204,33,651,31],[204,34,651,32],[205,6,652,4],[205,9,652,7,"nOptions"],[205,17,652,15],[206,6,653,4,"pageSize"],[207,4,654,2],[207,5,654,3],[207,6,654,4],[208,2,655,0],[210,2,657,0],[211,0,658,0],[212,0,659,0],[213,0,660,0],[214,0,661,0],[215,0,662,0],[216,0,663,0],[217,0,664,0],[218,0,665,0],[219,0,666,0],[220,0,667,0],[221,0,668,0],[222,0,669,0],[223,2,670,7],[223,17,670,22,"getContactByIdAsync"],[223,36,670,41,"getContactByIdAsync"],[223,37,671,2,"id"],[223,39,671,12],[223,41,672,2,"fields"],[223,47,672,22],[223,49,673,40],[224,4,674,2],[224,8,674,6],[224,9,674,7,"ExpoContacts"],[224,21,674,19],[224,22,674,19,"default"],[224,29,674,19],[224,30,674,20,"getContactsAsync"],[224,46,674,36],[224,48,674,38],[225,6,675,4],[225,12,675,10],[225,16,675,14,"UnavailabilityError"],[225,32,675,33],[225,33,675,33,"UnavailabilityError"],[225,52,675,33],[225,53,675,34],[225,63,675,44],[225,65,675,46],[225,83,675,64],[225,84,675,65],[226,4,676,2],[227,4,678,2],[227,8,678,6,"id"],[227,10,678,8],[227,14,678,12],[227,18,678,16],[227,20,678,18],[228,6,679,4],[228,12,679,10],[228,16,679,14,"Error"],[228,21,679,19],[228,22,679,20],[228,75,679,73],[228,76,679,74],[229,4,680,2],[229,5,680,3],[229,11,680,9],[230,6,681,4],[230,12,681,10,"results"],[230,19,681,17],[230,22,681,20],[230,28,681,26,"ExpoContacts"],[230,40,681,38],[230,41,681,38,"default"],[230,48,681,38],[230,49,681,39,"getContactsAsync"],[230,65,681,55],[230,66,681,56],[231,8,682,6,"pageSize"],[231,16,682,14],[231,18,682,16],[231,19,682,17],[232,8,683,6,"pageOffset"],[232,18,683,16],[232,20,683,18],[232,21,683,19],[233,8,684,6,"fields"],[233,14,684,12],[234,8,685,6,"id"],[235,6,686,4],[235,7,686,5],[235,8,686,6],[236,6,687,4],[236,10,687,8,"results"],[236,17,687,15],[236,21,687,19,"results"],[236,28,687,26],[236,29,687,27,"data"],[236,33,687,31],[236,37,687,35,"results"],[236,44,687,42],[236,45,687,43,"data"],[236,49,687,47],[236,50,687,48,"length"],[236,56,687,54],[236,59,687,57],[236,60,687,58],[236,62,687,60],[237,8,688,6],[237,15,688,13,"results"],[237,22,688,20],[237,23,688,21,"data"],[237,27,688,25],[237,28,688,26],[237,29,688,27],[237,30,688,28],[238,6,689,4],[239,4,690,2],[240,4,691,2],[240,11,691,9,"undefined"],[240,20,691,18],[241,2,692,0],[243,2,694,0],[244,0,695,0],[245,0,696,0],[246,0,697,0],[247,0,698,0],[248,0,699,0],[249,0,700,0],[250,0,701,0],[251,0,702,0],[252,0,703,0],[253,0,704,0],[254,0,705,0],[255,0,706,0],[256,0,707,0],[257,0,708,0],[258,0,709,0],[259,0,710,0],[260,2,711,7],[260,17,711,22,"addContactAsync"],[260,32,711,37,"addContactAsync"],[260,33,711,38,"contact"],[260,40,711,54],[260,42,711,56,"containerId"],[260,53,711,76],[260,55,711,95],[261,4,712,2],[261,8,712,6],[261,9,712,7,"ExpoContacts"],[261,21,712,19],[261,22,712,19,"default"],[261,29,712,19],[261,30,712,20,"addContactAsync"],[261,45,712,35],[261,47,712,37],[262,6,713,4],[262,12,713,10],[262,16,713,14,"UnavailabilityError"],[262,32,713,33],[262,33,713,33,"UnavailabilityError"],[262,52,713,33],[262,53,713,34],[262,63,713,44],[262,65,713,46],[262,82,713,63],[262,83,713,64],[263,4,714,2],[264,4,716,2],[264,11,716,9],[264,17,716,15,"ExpoContacts"],[264,29,716,27],[264,30,716,27,"default"],[264,37,716,27],[264,38,716,28,"addContactAsync"],[264,53,716,43],[264,54,716,44,"contact"],[264,61,716,51],[264,63,716,53,"containerId"],[264,74,716,64],[264,75,716,65],[265,2,717,0],[267,2,719,0],[268,0,720,0],[269,0,721,0],[270,0,722,0],[271,0,723,0],[272,0,724,0],[273,0,725,0],[274,0,726,0],[275,0,727,0],[276,0,728,0],[277,0,729,0],[278,0,730,0],[279,0,731,0],[280,0,732,0],[281,2,733,7],[281,17,733,22,"updateContactAsync"],[281,35,733,40,"updateContactAsync"],[281,36,734,2,"contact"],[281,43,734,52],[281,45,735,19],[282,4,736,2],[282,8,736,6],[282,9,736,7,"ExpoContacts"],[282,21,736,19],[282,22,736,19,"default"],[282,29,736,19],[282,30,736,20,"updateContactAsync"],[282,48,736,38],[282,50,736,40],[283,6,737,4],[283,12,737,10],[283,16,737,14,"UnavailabilityError"],[283,32,737,33],[283,33,737,33,"UnavailabilityError"],[283,52,737,33],[283,53,737,34],[283,63,737,44],[283,65,737,46],[283,85,737,66],[283,86,737,67],[284,4,738,2],[285,4,739,2],[285,11,739,9],[285,17,739,15,"ExpoContacts"],[285,29,739,27],[285,30,739,27,"default"],[285,37,739,27],[285,38,739,28,"updateContactAsync"],[285,56,739,46],[285,57,739,47,"contact"],[285,64,739,54],[285,65,739,55],[286,2,740,0],[288,2,742,0],[289,2,743,0],[290,0,744,0],[291,0,745,0],[292,0,746,0],[293,0,747,0],[294,0,748,0],[295,0,749,0],[296,0,750,0],[297,0,751,0],[298,2,752,7],[298,17,752,22,"removeContactAsync"],[298,35,752,40,"removeContactAsync"],[298,36,752,41,"contactId"],[298,45,752,58],[298,47,752,74],[299,4,753,2],[299,8,753,6],[299,9,753,7,"ExpoContacts"],[299,21,753,19],[299,22,753,19,"default"],[299,29,753,19],[299,30,753,20,"removeContactAsync"],[299,48,753,38],[299,50,753,40],[300,6,754,4],[300,12,754,10],[300,16,754,14,"UnavailabilityError"],[300,32,754,33],[300,33,754,33,"UnavailabilityError"],[300,52,754,33],[300,53,754,34],[300,63,754,44],[300,65,754,46],[300,85,754,66],[300,86,754,67],[301,4,755,2],[302,4,756,2],[302,11,756,9],[302,17,756,15,"ExpoContacts"],[302,29,756,27],[302,30,756,27,"default"],[302,37,756,27],[302,38,756,28,"removeContactAsync"],[302,56,756,46],[302,57,756,47,"contactId"],[302,66,756,56],[302,67,756,57],[303,2,757,0],[305,2,759,0],[306,0,760,0],[307,0,761,0],[308,0,762,0],[309,0,763,0],[310,0,764,0],[311,0,765,0],[312,0,766,0],[313,0,767,0],[314,0,768,0],[315,0,769,0],[316,0,770,0],[317,2,771,7],[317,17,771,22,"writeContactToFileAsync"],[317,40,771,45,"writeContactToFileAsync"],[317,41,772,2,"contactQuery"],[317,53,772,28],[317,56,772,31],[317,57,772,32],[317,58,772,33],[317,60,773,31],[318,4,774,2],[318,8,774,6],[318,9,774,7,"ExpoContacts"],[318,21,774,19],[318,22,774,19,"default"],[318,29,774,19],[318,30,774,20,"writeContactToFileAsync"],[318,53,774,43],[318,55,774,45],[319,6,775,4],[319,12,775,10],[319,16,775,14,"UnavailabilityError"],[319,32,775,33],[319,33,775,33,"UnavailabilityError"],[319,52,775,33],[319,53,775,34],[319,63,775,44],[319,65,775,46],[319,90,775,71],[319,91,775,72],[320,4,776,2],[321,4,777,2],[321,11,777,9],[321,17,777,15,"ExpoContacts"],[321,29,777,27],[321,30,777,27,"default"],[321,37,777,27],[321,38,777,28,"writeContactToFileAsync"],[321,61,777,51],[321,62,777,52,"contactQuery"],[321,74,777,64],[321,75,777,65],[322,2,778,0],[324,2,780,0],[325,2,781,0],[326,0,782,0],[327,0,783,0],[328,0,784,0],[329,0,785,0],[330,0,786,0],[331,0,787,0],[332,0,788,0],[333,0,789,0],[334,0,790,0],[335,2,791,7],[335,17,791,22,"presentFormAsync"],[335,33,791,38,"presentFormAsync"],[335,34,792,2,"contactId"],[335,43,792,27],[335,45,793,2,"contact"],[335,52,793,26],[335,54,794,2,"formOptions"],[335,65,794,26],[335,68,794,29],[335,69,794,30],[335,70,794,31],[335,72,795,16],[336,4,796,2],[336,8,796,6],[336,9,796,7,"ExpoContacts"],[336,21,796,19],[336,22,796,19,"default"],[336,29,796,19],[336,30,796,20,"presentFormAsync"],[336,46,796,36],[336,48,796,38],[337,6,797,4],[337,12,797,10],[337,16,797,14,"UnavailabilityError"],[337,32,797,33],[337,33,797,33,"UnavailabilityError"],[337,52,797,33],[337,53,797,34],[337,63,797,44],[337,65,797,46],[337,83,797,64],[337,84,797,65],[338,4,798,2],[339,4,799,2],[339,8,799,6,"Platform"],[339,16,799,14],[339,17,799,14,"default"],[339,24,799,14],[339,25,799,15,"OS"],[339,27,799,17],[339,32,799,22],[339,37,799,27],[339,39,799,29],[340,6,800,4],[340,12,800,10,"adjustedOptions"],[340,27,800,25],[340,30,800,28,"formOptions"],[340,41,800,39],[341,6,802,4],[341,10,802,8,"contactId"],[341,19,802,17],[341,21,802,19],[342,8,803,6],[342,12,803,10,"contact"],[342,19,803,17],[342,21,803,19],[343,10,804,8,"contact"],[343,17,804,15],[343,20,804,18,"undefined"],[343,29,804,27],[344,10,805,8,"console"],[344,17,805,15],[344,18,805,16,"log"],[344,21,805,19],[344,22,806,10],[344,123,807,8],[344,124,807,9],[345,8,808,6],[346,8,809,6],[346,12,809,10,"adjustedOptions"],[346,27,809,25],[346,28,809,26,"isNew"],[346,33,809,31],[346,38,809,36,"undefined"],[346,47,809,45],[346,49,809,47],[347,10,810,8,"console"],[347,17,810,15],[347,18,810,16,"log"],[347,21,810,19],[347,22,811,10],[347,109,812,8],[347,110,812,9],[348,8,813,6],[349,6,814,4],[350,6,815,4],[350,13,815,11],[350,19,815,17,"ExpoContacts"],[350,31,815,29],[350,32,815,29,"default"],[350,39,815,29],[350,40,815,30,"presentFormAsync"],[350,56,815,46],[350,57,815,47,"contactId"],[350,66,815,56],[350,68,815,58,"contact"],[350,75,815,65],[350,77,815,67,"adjustedOptions"],[350,92,815,82],[350,93,815,83],[351,4,816,2],[351,5,816,3],[351,11,816,9],[352,6,817,4],[352,13,817,11],[352,19,817,17,"ExpoContacts"],[352,31,817,29],[352,32,817,29,"default"],[352,39,817,29],[352,40,817,30,"presentFormAsync"],[352,56,817,46],[352,57,817,47,"contactId"],[352,66,817,56],[352,68,817,58,"contact"],[352,75,817,65],[352,77,817,67,"formOptions"],[352,88,817,78],[352,89,817,79],[353,4,818,2],[354,2,819,0],[356,2,821,0],[358,2,823,0],[359,0,824,0],[360,0,825,0],[361,0,826,0],[362,0,827,0],[363,0,828,0],[364,0,829,0],[365,0,830,0],[366,0,831,0],[367,0,832,0],[368,0,833,0],[369,0,834,0],[370,0,835,0],[371,2,836,7],[371,17,836,22,"addExistingGroupToContainerAsync"],[371,49,836,54,"addExistingGroupToContainerAsync"],[371,50,837,2,"groupId"],[371,57,837,17],[371,59,838,2,"containerId"],[371,70,838,21],[371,72,839,16],[372,4,840,2],[372,8,840,6],[372,9,840,7,"ExpoContacts"],[372,21,840,19],[372,22,840,19,"default"],[372,29,840,19],[372,30,840,20,"addExistingGroupToContainerAsync"],[372,62,840,52],[372,64,840,54],[373,6,841,4],[373,12,841,10],[373,16,841,14,"UnavailabilityError"],[373,32,841,33],[373,33,841,33,"UnavailabilityError"],[373,52,841,33],[373,53,841,34],[373,63,841,44],[373,65,841,46],[373,99,841,80],[373,100,841,81],[374,4,842,2],[375,4,844,2],[375,11,844,9],[375,17,844,15,"ExpoContacts"],[375,29,844,27],[375,30,844,27,"default"],[375,37,844,27],[375,38,844,28,"addExistingGroupToContainerAsync"],[375,70,844,60],[375,71,844,61,"groupId"],[375,78,844,68],[375,80,844,70,"containerId"],[375,91,844,81],[375,92,844,82],[376,2,845,0],[378,2,847,0],[379,0,848,0],[380,0,849,0],[381,0,850,0],[382,0,851,0],[383,0,852,0],[384,0,853,0],[385,0,854,0],[386,0,855,0],[387,0,856,0],[388,0,857,0],[389,2,858,7],[389,17,858,22,"createGroupAsync"],[389,33,858,38,"createGroupAsync"],[389,34,858,39,"name"],[389,38,858,52],[389,40,858,54,"containerId"],[389,51,858,74],[389,53,858,93],[390,4,859,2],[390,8,859,6],[390,9,859,7,"ExpoContacts"],[390,21,859,19],[390,22,859,19,"default"],[390,29,859,19],[390,30,859,20,"createGroupAsync"],[390,46,859,36],[390,48,859,38],[391,6,860,4],[391,12,860,10],[391,16,860,14,"UnavailabilityError"],[391,32,860,33],[391,33,860,33,"UnavailabilityError"],[391,52,860,33],[391,53,860,34],[391,63,860,44],[391,65,860,46],[391,83,860,64],[391,84,860,65],[392,4,861,2],[393,4,863,2,"name"],[393,8,863,6],[393,11,863,9,"name"],[393,15,863,13],[393,19,863,17,"uuid"],[393,35,863,21],[393,36,863,21,"uuid"],[393,40,863,21],[393,41,863,22,"v4"],[393,43,863,24],[393,44,863,25],[393,45,863,26],[394,4,864,2],[394,8,864,6],[394,9,864,7,"containerId"],[394,20,864,18],[394,22,864,20],[395,6,865,4,"containerId"],[395,17,865,15],[395,20,865,18],[395,26,865,24,"getDefaultContainerIdAsync"],[395,52,865,50],[395,53,865,51],[395,54,865,52],[396,4,866,2],[397,4,868,2],[397,11,868,9],[397,17,868,15,"ExpoContacts"],[397,29,868,27],[397,30,868,27,"default"],[397,37,868,27],[397,38,868,28,"createGroupAsync"],[397,54,868,44],[397,55,868,45,"name"],[397,59,868,49],[397,61,868,51,"containerId"],[397,72,868,62],[397,73,868,63],[398,2,869,0],[400,2,871,0],[401,0,872,0],[402,0,873,0],[403,0,874,0],[404,0,875,0],[405,0,876,0],[406,0,877,0],[407,0,878,0],[408,0,879,0],[409,0,880,0],[410,2,881,7],[410,17,881,22,"updateGroupNameAsync"],[410,37,881,42,"updateGroupNameAsync"],[410,38,881,43,"groupName"],[410,47,881,60],[410,49,881,62,"groupId"],[410,56,881,77],[410,58,881,93],[411,4,882,2],[411,8,882,6],[411,9,882,7,"ExpoContacts"],[411,21,882,19],[411,22,882,19,"default"],[411,29,882,19],[411,30,882,20,"updateGroupNameAsync"],[411,50,882,40],[411,52,882,42],[412,6,883,4],[412,12,883,10],[412,16,883,14,"UnavailabilityError"],[412,32,883,33],[412,33,883,33,"UnavailabilityError"],[412,52,883,33],[412,53,883,34],[412,63,883,44],[412,65,883,46],[412,87,883,68],[412,88,883,69],[413,4,884,2],[414,4,886,2],[414,11,886,9],[414,17,886,15,"ExpoContacts"],[414,29,886,27],[414,30,886,27,"default"],[414,37,886,27],[414,38,886,28,"updateGroupNameAsync"],[414,58,886,48],[414,59,886,49,"groupName"],[414,68,886,58],[414,70,886,60,"groupId"],[414,77,886,67],[414,78,886,68],[415,2,887,0],[417,2,889,0],[418,2,890,0],[419,0,891,0],[420,0,892,0],[421,0,893,0],[422,0,894,0],[423,0,895,0],[424,0,896,0],[425,0,897,0],[426,0,898,0],[427,2,899,7],[427,17,899,22,"removeGroupAsync"],[427,33,899,38,"removeGroupAsync"],[427,34,899,39,"groupId"],[427,41,899,54],[427,43,899,70],[428,4,900,2],[428,8,900,6],[428,9,900,7,"ExpoContacts"],[428,21,900,19],[428,22,900,19,"default"],[428,29,900,19],[428,30,900,20,"removeGroupAsync"],[428,46,900,36],[428,48,900,38],[429,6,901,4],[429,12,901,10],[429,16,901,14,"UnavailabilityError"],[429,32,901,33],[429,33,901,33,"UnavailabilityError"],[429,52,901,33],[429,53,901,34],[429,63,901,44],[429,65,901,46],[429,83,901,64],[429,84,901,65],[430,4,902,2],[431,4,904,2],[431,11,904,9],[431,17,904,15,"ExpoContacts"],[431,29,904,27],[431,30,904,27,"default"],[431,37,904,27],[431,38,904,28,"removeGroupAsync"],[431,54,904,44],[431,55,904,45,"groupId"],[431,62,904,52],[431,63,904,53],[432,2,905,0],[434,2,907,0],[435,2,908,0],[436,0,909,0],[437,0,910,0],[438,0,911,0],[439,0,912,0],[440,0,913,0],[441,0,914,0],[442,0,915,0],[443,0,916,0],[444,0,917,0],[445,0,918,0],[446,0,919,0],[447,0,920,0],[448,2,921,7],[448,17,921,22,"addExistingContactToGroupAsync"],[448,47,921,52,"addExistingContactToGroupAsync"],[448,48,922,2,"contactId"],[448,57,922,19],[448,59,923,2,"groupId"],[448,66,923,17],[448,68,924,16],[449,4,925,2],[449,8,925,6],[449,9,925,7,"ExpoContacts"],[449,21,925,19],[449,22,925,19,"default"],[449,29,925,19],[449,30,925,20,"addExistingContactToGroupAsync"],[449,60,925,50],[449,62,925,52],[450,6,926,4],[450,12,926,10],[450,16,926,14,"UnavailabilityError"],[450,32,926,33],[450,33,926,33,"UnavailabilityError"],[450,52,926,33],[450,53,926,34],[450,63,926,44],[450,65,926,46],[450,97,926,78],[450,98,926,79],[451,4,927,2],[452,4,929,2],[452,11,929,9],[452,17,929,15,"ExpoContacts"],[452,29,929,27],[452,30,929,27,"default"],[452,37,929,27],[452,38,929,28,"addExistingContactToGroupAsync"],[452,68,929,58],[452,69,929,59,"contactId"],[452,78,929,68],[452,80,929,70,"groupId"],[452,87,929,77],[452,88,929,78],[453,2,930,0],[455,2,932,0],[456,2,933,0],[457,0,934,0],[458,0,935,0],[459,0,936,0],[460,0,937,0],[461,0,938,0],[462,0,939,0],[463,0,940,0],[464,0,941,0],[465,0,942,0],[466,0,943,0],[467,0,944,0],[468,0,945,0],[469,2,946,7],[469,17,946,22,"removeContactFromGroupAsync"],[469,44,946,49,"removeContactFromGroupAsync"],[469,45,947,2,"contactId"],[469,54,947,19],[469,56,948,2,"groupId"],[469,63,948,17],[469,65,949,16],[470,4,950,2],[470,8,950,6],[470,9,950,7,"ExpoContacts"],[470,21,950,19],[470,22,950,19,"default"],[470,29,950,19],[470,30,950,20,"removeContactFromGroupAsync"],[470,57,950,47],[470,59,950,49],[471,6,951,4],[471,12,951,10],[471,16,951,14,"UnavailabilityError"],[471,32,951,33],[471,33,951,33,"UnavailabilityError"],[471,52,951,33],[471,53,951,34],[471,63,951,44],[471,65,951,46],[471,94,951,75],[471,95,951,76],[472,4,952,2],[473,4,954,2],[473,11,954,9],[473,17,954,15,"ExpoContacts"],[473,29,954,27],[473,30,954,27,"default"],[473,37,954,27],[473,38,954,28,"removeContactFromGroupAsync"],[473,65,954,55],[473,66,954,56,"contactId"],[473,75,954,65],[473,77,954,67,"groupId"],[473,84,954,74],[473,85,954,75],[474,2,955,0],[476,2,957,0],[477,2,958,0],[478,0,959,0],[479,0,960,0],[480,0,961,0],[481,0,962,0],[482,0,963,0],[483,0,964,0],[484,0,965,0],[485,0,966,0],[486,0,967,0],[487,0,968,0],[488,2,969,7],[488,17,969,22,"getGroupsAsync"],[488,31,969,36,"getGroupsAsync"],[488,32,969,37,"groupQuery"],[488,42,969,59],[488,44,969,79],[489,4,970,2],[489,8,970,6],[489,9,970,7,"ExpoContacts"],[489,21,970,19],[489,22,970,19,"default"],[489,29,970,19],[489,30,970,20,"getGroupsAsync"],[489,44,970,34],[489,46,970,36],[490,6,971,4],[490,12,971,10],[490,16,971,14,"UnavailabilityError"],[490,32,971,33],[490,33,971,33,"UnavailabilityError"],[490,52,971,33],[490,53,971,34],[490,63,971,44],[490,65,971,46],[490,81,971,62],[490,82,971,63],[491,4,972,2],[492,4,974,2],[492,11,974,9],[492,17,974,15,"ExpoContacts"],[492,29,974,27],[492,30,974,27,"default"],[492,37,974,27],[492,38,974,28,"getGroupsAsync"],[492,52,974,42],[492,53,974,43,"groupQuery"],[492,63,974,53],[492,64,974,54],[493,2,975,0],[495,2,977,0],[496,0,978,0],[497,0,979,0],[498,0,980,0],[499,0,981,0],[500,0,982,0],[501,2,983,7],[501,17,983,22,"presentContactPickerAsync"],[501,42,983,47,"presentContactPickerAsync"],[501,43,983,47],[501,45,983,83],[502,4,984,2],[502,8,984,6],[502,9,984,7,"ExpoContacts"],[502,21,984,19],[502,22,984,19,"default"],[502,29,984,19],[502,30,984,20,"presentContactPickerAsync"],[502,55,984,45],[502,57,984,47],[503,6,985,4],[503,12,985,10],[503,16,985,14,"UnavailabilityError"],[503,32,985,33],[503,33,985,33,"UnavailabilityError"],[503,52,985,33],[503,53,985,34],[503,63,985,44],[503,65,985,46],[503,92,985,73],[503,93,985,74],[504,4,986,2],[505,4,987,2],[505,11,987,9],[505,17,987,15,"ExpoContacts"],[505,29,987,27],[505,30,987,27,"default"],[505,37,987,27],[505,38,987,28,"presentContactPickerAsync"],[505,63,987,53],[505,64,987,54],[505,65,987,55],[506,2,988,0],[508,2,990,0],[509,0,991,0],[510,0,992,0],[511,0,993,0],[512,0,994,0],[513,0,995,0],[514,0,996,0],[515,0,997,0],[516,0,998,0],[517,2,999,7],[517,17,999,22,"getDefaultContainerIdAsync"],[517,43,999,48,"getDefaultContainerIdAsync"],[517,44,999,48],[517,46,999,68],[518,4,1000,2],[518,8,1000,6],[518,9,1000,7,"ExpoContacts"],[518,21,1000,19],[518,22,1000,19,"default"],[518,29,1000,19],[518,30,1000,20,"getDefaultContainerIdentifierAsync"],[518,64,1000,54],[518,66,1000,56],[519,6,1001,4],[519,12,1001,10],[519,16,1001,14,"UnavailabilityError"],[519,32,1001,33],[519,33,1001,33,"UnavailabilityError"],[519,52,1001,33],[519,53,1001,34],[519,63,1001,44],[519,65,1001,46],[519,101,1001,82],[519,102,1001,83],[520,4,1002,2],[521,4,1004,2],[521,11,1004,9],[521,17,1004,15,"ExpoContacts"],[521,29,1004,27],[521,30,1004,27,"default"],[521,37,1004,27],[521,38,1004,28,"getDefaultContainerIdentifierAsync"],[521,72,1004,62],[521,73,1004,63],[521,74,1004,64],[522,2,1005,0],[524,2,1007,0],[525,0,1008,0],[526,0,1009,0],[527,0,1010,0],[528,0,1011,0],[529,0,1012,0],[530,0,1013,0],[531,0,1014,0],[532,0,1015,0],[533,0,1016,0],[534,0,1017,0],[535,0,1018,0],[536,2,1019,7],[536,17,1019,22,"getContainersAsync"],[536,35,1019,40,"getContainersAsync"],[536,36,1019,41,"containerQuery"],[536,50,1019,71],[536,52,1019,95],[537,4,1020,2],[537,8,1020,6],[537,9,1020,7,"ExpoContacts"],[537,21,1020,19],[537,22,1020,19,"default"],[537,29,1020,19],[537,30,1020,20,"getContainersAsync"],[537,48,1020,38],[537,50,1020,40],[538,6,1021,4],[538,12,1021,10],[538,16,1021,14,"UnavailabilityError"],[538,32,1021,33],[538,33,1021,33,"UnavailabilityError"],[538,52,1021,33],[538,53,1021,34],[538,63,1021,44],[538,65,1021,46],[538,85,1021,66],[538,86,1021,67],[539,4,1022,2],[540,4,1024,2],[540,11,1024,9],[540,17,1024,15,"ExpoContacts"],[540,29,1024,27],[540,30,1024,27,"default"],[540,37,1024,27],[540,38,1024,28,"getContainersAsync"],[540,56,1024,46],[540,57,1024,47,"containerQuery"],[540,71,1024,61],[540,72,1024,62],[541,2,1025,0],[543,2,1027,0],[544,0,1028,0],[545,0,1029,0],[546,0,1030,0],[547,2,1031,7],[547,17,1031,22,"getPermissionsAsync"],[547,36,1031,41,"getPermissionsAsync"],[547,37,1031,41],[547,39,1031,81],[548,4,1032,2],[548,8,1032,6],[548,9,1032,7,"ExpoContacts"],[548,21,1032,19],[548,22,1032,19,"default"],[548,29,1032,19],[548,30,1032,20,"getPermissionsAsync"],[548,49,1032,39],[548,51,1032,41],[549,6,1033,4],[549,12,1033,10],[549,16,1033,14,"UnavailabilityError"],[549,32,1033,33],[549,33,1033,33,"UnavailabilityError"],[549,52,1033,33],[549,53,1033,34],[549,63,1033,44],[549,65,1033,46],[549,86,1033,67],[549,87,1033,68],[550,4,1034,2],[551,4,1036,2],[551,11,1036,9],[551,17,1036,15,"ExpoContacts"],[551,29,1036,27],[551,30,1036,27,"default"],[551,37,1036,27],[551,38,1036,28,"getPermissionsAsync"],[551,57,1036,47],[551,58,1036,48],[551,59,1036,49],[552,2,1037,0],[554,2,1039,0],[555,0,1040,0],[556,0,1041,0],[557,0,1042,0],[558,2,1043,7],[558,17,1043,22,"requestPermissionsAsync"],[558,40,1043,45,"requestPermissionsAsync"],[558,41,1043,45],[558,43,1043,85],[559,4,1044,2],[559,8,1044,6],[559,9,1044,7,"ExpoContacts"],[559,21,1044,19],[559,22,1044,19,"default"],[559,29,1044,19],[559,30,1044,20,"requestPermissionsAsync"],[559,53,1044,43],[559,55,1044,45],[560,6,1045,4],[560,12,1045,10],[560,16,1045,14,"UnavailabilityError"],[560,32,1045,33],[560,33,1045,33,"UnavailabilityError"],[560,52,1045,33],[560,53,1045,34],[560,63,1045,44],[560,65,1045,46],[560,90,1045,71],[560,91,1045,72],[561,4,1046,2],[562,4,1048,2],[562,11,1048,9],[562,17,1048,15,"ExpoContacts"],[562,29,1048,27],[562,30,1048,27,"default"],[562,37,1048,27],[562,38,1048,28,"requestPermissionsAsync"],[562,61,1048,51],[562,62,1048,52],[562,63,1048,53],[563,2,1049,0],[565,2,1051,0],[566,0,1052,0],[567,0,1053,0],[568,0,1054,0],[569,0,1055,0],[570,0,1056,0],[571,0,1057,0],[572,2,1058,7],[572,17,1058,22,"presentAccessPickerAsync"],[572,41,1058,46,"presentAccessPickerAsync"],[572,42,1058,46],[572,44,1058,68],[573,4,1059,2],[573,11,1059,9],[573,17,1059,15,"ExpoContacts"],[573,29,1059,27],[573,30,1059,27,"default"],[573,37,1059,27],[573,38,1059,28,"presentAccessPickerAsync"],[573,62,1059,52],[573,63,1059,53],[573,64,1059,54],[574,2,1060,0],[576,2,1062,0],[577,0,1063,0],[578,0,1064,0],[579,0,1065,0],[580,0,1066,0],[581,0,1067,0],[582,0,1068,0],[583,0,1069,0],[584,0,1070,0],[585,0,1071,0],[586,0,1072,0],[587,0,1073,0],[588,0,1074,0],[589,0,1075,0],[590,0,1076,0],[591,0,1077,0],[592,0,1078,0],[593,0,1079,0],[594,0,1080,0],[595,0,1081,0],[596,0,1082,0],[597,0,1083,0],[598,0,1084,0],[599,0,1085,0],[600,0,1086,0],[601,0,1087,0],[602,0,1088,0],[603,0,1089,0],[604,0,1090,0],[605,2,1091,7],[605,11,1091,16,"addContactsChangeListener"],[605,36,1091,41,"addContactsChangeListener"],[605,37,1091,42,"listener"],[605,45,1091,62],[605,47,1091,83],[606,4,1092,2],[606,8,1092,6],[606,9,1092,7,"ExpoContacts"],[606,21,1092,19],[606,22,1092,19,"default"],[606,29,1092,19],[606,30,1092,20,"addListener"],[606,41,1092,31],[606,43,1092,33],[607,6,1093,4],[607,12,1093,10],[607,16,1093,14,"UnavailabilityError"],[607,32,1093,33],[607,33,1093,33,"UnavailabilityError"],[607,52,1093,33],[607,53,1093,34],[607,63,1093,44],[607,65,1093,46],[607,91,1093,72],[607,92,1093,73],[608,4,1094,2],[609,4,1096,2],[609,10,1096,8,"eventSubscription"],[609,27,1096,25],[609,30,1096,28,"ExpoContacts"],[609,42,1096,40],[609,43,1096,40,"default"],[609,50,1096,40],[609,51,1096,41,"addListener"],[609,62,1096,52],[609,63,1096,53,"onContactsChangeEventName"],[609,88,1096,78],[609,90,1096,80,"listener"],[609,98,1096,88],[609,99,1096,89],[610,4,1098,2],[610,11,1098,9],[611,6,1099,4,"remove"],[611,12,1099,10],[611,14,1099,12,"remove"],[611,15,1099,12],[611,20,1099,18],[612,8,1100,6,"eventSubscription"],[612,25,1100,23],[612,27,1100,25,"remove"],[612,33,1100,31],[612,34,1100,32],[612,35,1100,33],[613,6,1101,4],[614,4,1102,2],[614,5,1102,3],[615,2,1103,0],[617,2,1105,0],[618,0,1106,0],[619,0,1107,0],[620,2,1105,0],[620,6,1108,12,"Fields"],[620,12,1108,18],[620,38,1108,12,"Fields"],[620,44,1108,18],[621,4,1108,12,"Fields"],[621,10,1108,18],[622,4,1108,12,"Fields"],[622,10,1108,18],[623,4,1108,12,"Fields"],[623,10,1108,18],[624,4,1108,12,"Fields"],[624,10,1108,18],[625,4,1108,12,"Fields"],[625,10,1108,18],[626,4,1108,12,"Fields"],[626,10,1108,18],[627,4,1108,12,"Fields"],[627,10,1108,18],[628,4,1108,12,"Fields"],[628,10,1108,18],[629,4,1108,12,"Fields"],[629,10,1108,18],[630,4,1108,12,"Fields"],[630,10,1108,18],[631,4,1108,12,"Fields"],[631,10,1108,18],[632,4,1108,12,"Fields"],[632,10,1108,18],[633,4,1108,12,"Fields"],[633,10,1108,18],[634,4,1108,12,"Fields"],[634,10,1108,18],[635,4,1123,2],[636,0,1124,0],[637,0,1125,0],[638,4,1108,12,"Fields"],[638,10,1108,18],[639,4,1108,12,"Fields"],[639,10,1108,18],[640,4,1108,12,"Fields"],[640,10,1108,18],[641,4,1108,12,"Fields"],[641,10,1108,18],[642,4,1130,2],[643,0,1131,0],[644,0,1132,0],[645,4,1108,12,"Fields"],[645,10,1108,18],[646,4,1108,12,"Fields"],[646,10,1108,18],[647,4,1108,12,"Fields"],[647,10,1108,18],[648,4,1108,12,"Fields"],[648,10,1108,18],[649,4,1108,12,"Fields"],[649,10,1108,18],[650,4,1108,12,"Fields"],[650,10,1108,18],[651,4,1108,12,"Fields"],[651,10,1108,18],[652,4,1108,12,"Fields"],[652,10,1108,18],[653,4,1108,12,"Fields"],[653,10,1108,18],[654,4,1108,12,"Fields"],[654,10,1108,18],[655,4,1108,12,"Fields"],[655,10,1108,18],[656,4,1108,12,"Fields"],[656,10,1108,18],[657,4,1108,12,"Fields"],[657,10,1108,18],[658,4,1146,2],[659,0,1147,0],[660,0,1148,0],[661,4,1108,12,"Fields"],[661,10,1108,18],[662,4,1108,18],[662,11,1108,12,"Fields"],[662,17,1108,18],[663,2,1108,18],[664,2,1152,0],[665,0,1153,0],[666,0,1154,0],[667,2,1152,0],[667,6,1155,12,"CalendarFormats"],[667,21,1155,27],[667,47,1155,12,"CalendarFormats"],[667,62,1155,27],[668,4,1155,12,"CalendarFormats"],[668,19,1155,27],[669,4,1157,2],[670,0,1158,0],[671,0,1159,0],[672,4,1155,12,"CalendarFormats"],[672,19,1155,27],[673,4,1161,2],[674,0,1162,0],[675,0,1163,0],[676,4,1155,12,"CalendarFormats"],[676,19,1155,27],[677,4,1165,2],[678,0,1166,0],[679,0,1167,0],[680,4,1155,12,"CalendarFormats"],[680,19,1155,27],[681,4,1169,2],[682,0,1170,0],[683,0,1171,0],[684,4,1155,12,"CalendarFormats"],[684,19,1155,27],[685,4,1173,2],[686,0,1174,0],[687,0,1175,0],[688,4,1155,12,"CalendarFormats"],[688,19,1155,27],[689,4,1177,2],[690,0,1178,0],[691,0,1179,0],[692,4,1155,12,"CalendarFormats"],[692,19,1155,27],[693,4,1181,2],[694,0,1182,0],[695,0,1183,0],[696,4,1155,12,"CalendarFormats"],[696,19,1155,27],[697,4,1185,2],[698,0,1186,0],[699,0,1187,0],[700,4,1155,12,"CalendarFormats"],[700,19,1155,27],[701,4,1189,2],[702,0,1190,0],[703,0,1191,0],[704,4,1155,12,"CalendarFormats"],[704,19,1155,27],[705,4,1193,2],[706,0,1194,0],[707,0,1195,0],[708,4,1155,12,"CalendarFormats"],[708,19,1155,27],[709,4,1197,2],[710,0,1198,0],[711,0,1199,0],[712,4,1155,12,"CalendarFormats"],[712,19,1155,27],[713,4,1201,2],[714,0,1202,0],[715,0,1203,0],[716,4,1155,12,"CalendarFormats"],[716,19,1155,27],[717,4,1205,2],[718,0,1206,0],[719,0,1207,0],[720,4,1155,12,"CalendarFormats"],[720,19,1155,27],[721,4,1209,2],[722,0,1210,0],[723,0,1211,0],[724,4,1155,12,"CalendarFormats"],[724,19,1155,27],[725,4,1213,2],[726,0,1214,0],[727,0,1215,0],[728,4,1155,12,"CalendarFormats"],[728,19,1155,27],[729,4,1155,27],[729,11,1155,12,"CalendarFormats"],[729,26,1155,27],[730,2,1155,27],[731,2,1219,0],[732,0,1220,0],[733,0,1221,0],[734,2,1219,0],[734,6,1222,12,"ContainerTypes"],[734,20,1222,26],[734,46,1222,12,"ContainerTypes"],[734,60,1222,26],[735,4,1223,2],[736,0,1224,0],[737,0,1225,0],[738,4,1222,12,"ContainerTypes"],[738,18,1222,26],[739,4,1227,2],[740,0,1228,0],[741,0,1229,0],[742,4,1222,12,"ContainerTypes"],[742,18,1222,26],[743,4,1231,2],[744,0,1232,0],[745,0,1233,0],[746,4,1222,12,"ContainerTypes"],[746,18,1222,26],[747,4,1235,2],[748,0,1236,0],[749,0,1237,0],[750,4,1222,12,"ContainerTypes"],[750,18,1222,26],[751,4,1222,26],[751,11,1222,12,"ContainerTypes"],[751,25,1222,26],[752,2,1222,26],[753,2,1222,26],[753,6,1241,12,"SortTypes"],[753,15,1241,21],[753,41,1241,12,"SortTypes"],[753,50,1241,21],[754,4,1242,2],[755,0,1243,0],[756,0,1244,0],[757,0,1245,0],[758,4,1241,12,"SortTypes"],[758,13,1241,21],[759,4,1247,2],[760,0,1248,0],[761,0,1249,0],[762,4,1241,12,"SortTypes"],[762,13,1241,21],[763,4,1251,2],[764,0,1252,0],[765,0,1253,0],[766,4,1241,12,"SortTypes"],[766,13,1241,21],[767,4,1255,2],[768,0,1256,0],[769,0,1257,0],[770,4,1241,12,"SortTypes"],[770,13,1241,21],[771,4,1241,21],[771,11,1241,12,"SortTypes"],[771,20,1241,21],[772,2,1241,21],[773,2,1241,21],[773,6,1261,12,"ContactTypes"],[773,18,1261,24],[773,44,1261,12,"ContactTypes"],[773,56,1261,24],[774,4,1262,2],[775,0,1263,0],[776,0,1264,0],[777,4,1261,12,"ContactTypes"],[777,16,1261,24],[778,4,1266,2],[779,0,1267,0],[780,0,1268,0],[781,4,1261,12,"ContactTypes"],[781,16,1261,24],[782,4,1261,24],[782,11,1261,12,"ContactTypes"],[782,23,1261,24],[783,2,1261,24],[784,0,1261,24],[784,3]],"functionMap":{"names":["<global>","isAvailableAsync","shareContactAsync","getContactsAsync","getPagedContactsAsync","getContactByIdAsync","addContactAsync","updateContactAsync","removeContactAsync","writeContactToFileAsync","presentFormAsync","addExistingGroupToContainerAsync","createGroupAsync","updateGroupNameAsync","removeGroupAsync","addExistingContactToGroupAsync","removeContactFromGroupAsync","getGroupsAsync","presentContactPickerAsync","getDefaultContainerIdAsync","getContainersAsync","getPermissionsAsync","requestPermissionsAsync","presentAccessPickerAsync","addContactsChangeListener","remove"],"mappings":"AAA;OC+kB;CDE;OEG;CFoB;OGkB;CHK;OIE;CJa;OKe;CLsB;OMmB;CNM;OOgB;CPO;OQY;CRK;OSc;CTO;OUa;CV4B;OWiB;CXS;OYa;CZW;OaY;CbM;OcY;CdM;OegB;CfS;OgBgB;ChBS;OiBc;CjBM;OkBQ;ClBK;OmBW;CnBM;OoBc;CpBM;OqBM;CrBM;OsBM;CtBM;OuBS;CvBE;OwB+B;YCQ;KDE;CxBE"},"hasCjsExports":false},"type":"js/module"}]}