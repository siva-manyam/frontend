{"dependencies":[{"name":"./addMilliseconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"C53oCWhhjr5oIwLVb4GhkJeYi/Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.addSeconds = addSeconds;\n  var _addMillisecondsJs = require(_dependencyMap[0], \"./addMilliseconds.js\");\n  /**\n   * The {@link addSeconds} function options.\n   */\n\n  /**\n   * @name addSeconds\n   * @category Second Helpers\n   * @summary Add the specified number of seconds to the given date.\n   *\n   * @description\n   * Add the specified number of seconds to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of seconds to be added.\n   * @param options - An object with options\n   *\n   * @returns The new date with the seconds added\n   *\n   * @example\n   * // Add 30 seconds to 10 July 2014 12:45:00:\n   * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n   * //=> Thu Jul 10 2014 12:45:30\n   */\n  function addSeconds(date, amount, options) {\n    return (0, _addMillisecondsJs.addMilliseconds)(date, amount * 1000, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = addSeconds;\n});","lineCount":47,"map":[[7,2,34,0,"Object"],[7,8,34,0],[7,9,34,0,"defineProperty"],[7,23,34,0],[7,24,34,0,"exports"],[7,31,34,0],[8,4,34,0,"enumerable"],[8,14,34,0],[9,4,34,0,"get"],[9,7,34,0],[9,18,34,0,"get"],[9,19,34,0],[10,6,34,0],[10,13,34,0,"_default"],[10,21,34,0],[11,4,34,0],[12,2,34,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"addSeconds"],[13,20,29,0],[13,23,29,0,"addSeconds"],[13,33,29,0],[14,2,1,0],[14,6,1,0,"_addMillisecondsJs"],[14,24,1,0],[14,27,1,0,"require"],[14,34,1,0],[14,35,1,0,"_dependencyMap"],[14,49,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,2,29,7],[41,11,29,16,"addSeconds"],[41,21,29,26,"addSeconds"],[41,22,29,27,"date"],[41,26,29,31],[41,28,29,33,"amount"],[41,34,29,39],[41,36,29,41,"options"],[41,43,29,48],[41,45,29,50],[42,4,30,2],[42,11,30,9],[42,15,30,9,"addMilliseconds"],[42,33,30,24],[42,34,30,24,"addMilliseconds"],[42,49,30,24],[42,51,30,25,"date"],[42,55,30,29],[42,57,30,31,"amount"],[42,63,30,37],[42,66,30,40],[42,70,30,44],[42,72,30,46,"options"],[42,79,30,53],[42,80,30,54],[43,2,31,0],[45,2,33,0],[46,2,34,0],[46,6,34,0,"_default"],[46,14,34,0],[46,17,34,15,"addSeconds"],[46,27,34,25],[47,0,34,26],[47,3]],"functionMap":{"names":["<global>","addSeconds"],"mappings":"AAA;OC4B;CDE"},"hasCjsExports":false},"type":"js/module"}]}