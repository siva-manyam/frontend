{"dependencies":[{"name":"./previousDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"LixjKAn5oYnAkpo+ldVJHI/8nRk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.previousWednesday = previousWednesday;\n  var _previousDayJs = require(_dependencyMap[0], \"./previousDay.js\");\n  /**\n   * The {@link previousWednesday} function options.\n   */\n\n  /**\n   * @name previousWednesday\n   * @category Weekday Helpers\n   * @summary When is the previous Wednesday?\n   *\n   * @description\n   * When is the previous Wednesday?\n   *\n   * @typeParam DateType - The Date type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [UTCDate](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to start counting from\n   * @param options - An object with options\n   *\n   * @returns The previous Wednesday\n   *\n   * @example\n   * // When is the previous Wednesday before Jun, 18, 2021?\n   * const result = previousWednesday(new Date(2021, 5, 18))\n   * //=> Wed June 16 2021 00:00:00\n   */\n  function previousWednesday(date, options) {\n    return (0, _previousDayJs.previousDay)(date, 3, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = previousWednesday;\n});","lineCount":46,"map":[[7,2,33,0,"Object"],[7,8,33,0],[7,9,33,0,"defineProperty"],[7,23,33,0],[7,24,33,0,"exports"],[7,31,33,0],[8,4,33,0,"enumerable"],[8,14,33,0],[9,4,33,0,"get"],[9,7,33,0],[9,18,33,0,"get"],[9,19,33,0],[10,6,33,0],[10,13,33,0,"_default"],[10,21,33,0],[11,4,33,0],[12,2,33,0],[13,2,28,0,"exports"],[13,9,28,0],[13,10,28,0,"previousWednesday"],[13,27,28,0],[13,30,28,0,"previousWednesday"],[13,47,28,0],[14,2,1,0],[14,6,1,0,"_previousDayJs"],[14,20,1,0],[14,23,1,0,"require"],[14,30,1,0],[14,31,1,0,"_dependencyMap"],[14,45,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,2,28,7],[40,11,28,16,"previousWednesday"],[40,28,28,33,"previousWednesday"],[40,29,28,34,"date"],[40,33,28,38],[40,35,28,40,"options"],[40,42,28,47],[40,44,28,49],[41,4,29,2],[41,11,29,9],[41,15,29,9,"previousDay"],[41,29,29,20],[41,30,29,20,"previousDay"],[41,41,29,20],[41,43,29,21,"date"],[41,47,29,25],[41,49,29,27],[41,50,29,28],[41,52,29,30,"options"],[41,59,29,37],[41,60,29,38],[42,2,30,0],[44,2,32,0],[45,2,33,0],[45,6,33,0,"_default"],[45,14,33,0],[45,17,33,15,"previousWednesday"],[45,34,33,32],[46,0,33,33],[46,3]],"functionMap":{"names":["<global>","previousWednesday"],"mappings":"AAA;OC2B;CDE"},"hasCjsExports":false},"type":"js/module"}]}