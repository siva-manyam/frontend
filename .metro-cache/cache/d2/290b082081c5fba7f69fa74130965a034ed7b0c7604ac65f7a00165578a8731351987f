{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./addWeeks.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":41,"index":106}}],"key":"WbXWlJ47iqg6m+zxE/w0za675g4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":107},"end":{"line":3,"column":51,"index":158}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachWeekOfInterval = eachWeekOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addWeeksJs = require(_dependencyMap[1], \"./addWeeks.js\");\n  var _constructFromJs = require(_dependencyMap[2], \"./constructFrom.js\");\n  var _startOfWeekJs = require(_dependencyMap[3], \"./startOfWeek.js\");\n  /**\n   * The {@link eachWeekOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachWeekOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the interval start date,\n   * then the end interval date. If a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachWeekOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of weeks within the specified time interval.\n   *\n   * @description\n   * Return the array of weeks within the specified time interval.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n   *\n   * @example\n   * // Each week within interval 6 October 2014 - 23 November 2014:\n   * const result = eachWeekOfInterval({\n   *   start: new Date(2014, 9, 6),\n   *   end: new Date(2014, 10, 23)\n   * })\n   * //=> [\n   * //   Sun Oct 05 2014 00:00:00,\n   * //   Sun Oct 12 2014 00:00:00,\n   * //   Sun Oct 19 2014 00:00:00,\n   * //   Sun Oct 26 2014 00:00:00,\n   * //   Sun Nov 02 2014 00:00:00,\n   * //   Sun Nov 09 2014 00:00:00,\n   * //   Sun Nov 16 2014 00:00:00,\n   * //   Sun Nov 23 2014 00:00:00\n   * // ]\n   */\n  function eachWeekOfInterval(interval, options) {\n    const {\n      start,\n      end\n    } = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval);\n    let reversed = +start > +end;\n    const startDateWeek = reversed ? (0, _startOfWeekJs.startOfWeek)(end, options) : (0, _startOfWeekJs.startOfWeek)(start, options);\n    const endDateWeek = reversed ? (0, _startOfWeekJs.startOfWeek)(start, options) : (0, _startOfWeekJs.startOfWeek)(end, options);\n    startDateWeek.setHours(15);\n    endDateWeek.setHours(15);\n    const endTime = +endDateWeek.getTime();\n    let currentDate = startDateWeek;\n    let step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    const dates = [];\n    while (+currentDate <= endTime) {\n      currentDate.setHours(0);\n      dates.push((0, _constructFromJs.constructFrom)(start, currentDate));\n      currentDate = (0, _addWeeksJs.addWeeks)(currentDate, step);\n      currentDate.setHours(15);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachWeekOfInterval;\n});","lineCount":88,"map":[[7,2,83,0,"Object"],[7,8,83,0],[7,9,83,0,"defineProperty"],[7,23,83,0],[7,24,83,0,"exports"],[7,31,83,0],[8,4,83,0,"enumerable"],[8,14,83,0],[9,4,83,0,"get"],[9,7,83,0],[9,18,83,0,"get"],[9,19,83,0],[10,6,83,0],[10,13,83,0,"_default"],[10,21,83,0],[11,4,83,0],[12,2,83,0],[13,2,46,0,"exports"],[13,9,46,0],[13,10,46,0,"eachWeekOfInterval"],[13,28,46,0],[13,31,46,0,"eachWeekOfInterval"],[13,49,46,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_addWeeksJs"],[15,17,2,0],[15,20,2,0,"require"],[15,27,2,0],[15,28,2,0,"_dependencyMap"],[15,42,2,0],[16,2,3,0],[16,6,3,0,"_constructFromJs"],[16,22,3,0],[16,25,3,0,"require"],[16,32,3,0],[16,33,3,0,"_dependencyMap"],[16,47,3,0],[17,2,4,0],[17,6,4,0,"_startOfWeekJs"],[17,20,4,0],[17,23,4,0,"require"],[17,30,4,0],[17,31,4,0,"_dependencyMap"],[17,45,4,0],[18,2,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[28,2,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,2,46,7],[58,11,46,16,"eachWeekOfInterval"],[58,29,46,34,"eachWeekOfInterval"],[58,30,46,35,"interval"],[58,38,46,43],[58,40,46,45,"options"],[58,47,46,52],[58,49,46,54],[59,4,47,2],[59,10,47,8],[60,6,47,10,"start"],[60,11,47,15],[61,6,47,17,"end"],[62,4,47,21],[62,5,47,22],[62,8,47,25],[62,12,47,25,"normalizeInterval"],[62,35,47,42],[62,36,47,42,"normalizeInterval"],[62,53,47,42],[62,55,47,43,"options"],[62,62,47,50],[62,64,47,52,"in"],[62,66,47,54],[62,68,47,56,"interval"],[62,76,47,64],[62,77,47,65],[63,4,49,2],[63,8,49,6,"reversed"],[63,16,49,14],[63,19,49,17],[63,20,49,18,"start"],[63,25,49,23],[63,28,49,26],[63,29,49,27,"end"],[63,32,49,30],[64,4,50,2],[64,10,50,8,"startDateWeek"],[64,23,50,21],[64,26,50,24,"reversed"],[64,34,50,32],[64,37,51,6],[64,41,51,6,"startOfWeek"],[64,55,51,17],[64,56,51,17,"startOfWeek"],[64,67,51,17],[64,69,51,18,"end"],[64,72,51,21],[64,74,51,23,"options"],[64,81,51,30],[64,82,51,31],[64,85,52,6],[64,89,52,6,"startOfWeek"],[64,103,52,17],[64,104,52,17,"startOfWeek"],[64,115,52,17],[64,117,52,18,"start"],[64,122,52,23],[64,124,52,25,"options"],[64,131,52,32],[64,132,52,33],[65,4,53,2],[65,10,53,8,"endDateWeek"],[65,21,53,19],[65,24,53,22,"reversed"],[65,32,53,30],[65,35,54,6],[65,39,54,6,"startOfWeek"],[65,53,54,17],[65,54,54,17,"startOfWeek"],[65,65,54,17],[65,67,54,18,"start"],[65,72,54,23],[65,74,54,25,"options"],[65,81,54,32],[65,82,54,33],[65,85,55,6],[65,89,55,6,"startOfWeek"],[65,103,55,17],[65,104,55,17,"startOfWeek"],[65,115,55,17],[65,117,55,18,"end"],[65,120,55,21],[65,122,55,23,"options"],[65,129,55,30],[65,130,55,31],[66,4,57,2,"startDateWeek"],[66,17,57,15],[66,18,57,16,"setHours"],[66,26,57,24],[66,27,57,25],[66,29,57,27],[66,30,57,28],[67,4,58,2,"endDateWeek"],[67,15,58,13],[67,16,58,14,"setHours"],[67,24,58,22],[67,25,58,23],[67,27,58,25],[67,28,58,26],[68,4,60,2],[68,10,60,8,"endTime"],[68,17,60,15],[68,20,60,18],[68,21,60,19,"endDateWeek"],[68,32,60,30],[68,33,60,31,"getTime"],[68,40,60,38],[68,41,60,39],[68,42,60,40],[69,4,61,2],[69,8,61,6,"currentDate"],[69,19,61,17],[69,22,61,20,"startDateWeek"],[69,35,61,33],[70,4,63,2],[70,8,63,6,"step"],[70,12,63,10],[70,15,63,13,"options"],[70,22,63,20],[70,24,63,22,"step"],[70,28,63,26],[70,32,63,30],[70,33,63,31],[71,4,64,2],[71,8,64,6],[71,9,64,7,"step"],[71,13,64,11],[71,15,64,13],[71,22,64,20],[71,24,64,22],[72,4,65,2],[72,8,65,6,"step"],[72,12,65,10],[72,15,65,13],[72,16,65,14],[72,18,65,16],[73,6,66,4,"step"],[73,10,66,8],[73,13,66,11],[73,14,66,12,"step"],[73,18,66,16],[74,6,67,4,"reversed"],[74,14,67,12],[74,17,67,15],[74,18,67,16,"reversed"],[74,26,67,24],[75,4,68,2],[76,4,70,2],[76,10,70,8,"dates"],[76,15,70,13],[76,18,70,16],[76,20,70,18],[77,4,72,2],[77,11,72,9],[77,12,72,10,"currentDate"],[77,23,72,21],[77,27,72,25,"endTime"],[77,34,72,32],[77,36,72,34],[78,6,73,4,"currentDate"],[78,17,73,15],[78,18,73,16,"setHours"],[78,26,73,24],[78,27,73,25],[78,28,73,26],[78,29,73,27],[79,6,74,4,"dates"],[79,11,74,9],[79,12,74,10,"push"],[79,16,74,14],[79,17,74,15],[79,21,74,15,"constructFrom"],[79,37,74,28],[79,38,74,28,"constructFrom"],[79,51,74,28],[79,53,74,29,"start"],[79,58,74,34],[79,60,74,36,"currentDate"],[79,71,74,47],[79,72,74,48],[79,73,74,49],[80,6,75,4,"currentDate"],[80,17,75,15],[80,20,75,18],[80,24,75,18,"addWeeks"],[80,35,75,26],[80,36,75,26,"addWeeks"],[80,44,75,26],[80,46,75,27,"currentDate"],[80,57,75,38],[80,59,75,40,"step"],[80,63,75,44],[80,64,75,45],[81,6,76,4,"currentDate"],[81,17,76,15],[81,18,76,16,"setHours"],[81,26,76,24],[81,27,76,25],[81,29,76,27],[81,30,76,28],[82,4,77,2],[83,4,79,2],[83,11,79,9,"reversed"],[83,19,79,17],[83,22,79,20,"dates"],[83,27,79,25],[83,28,79,26,"reverse"],[83,35,79,33],[83,36,79,34],[83,37,79,35],[83,40,79,38,"dates"],[83,45,79,43],[84,2,80,0],[86,2,82,0],[87,2,83,0],[87,6,83,0,"_default"],[87,14,83,0],[87,17,83,15,"eachWeekOfInterval"],[87,35,83,33],[88,0,83,34],[88,3]],"functionMap":{"names":["<global>","eachWeekOfInterval"],"mappings":"AAA;OC6C;CDkC"},"hasCjsExports":false},"type":"js/module"}]}