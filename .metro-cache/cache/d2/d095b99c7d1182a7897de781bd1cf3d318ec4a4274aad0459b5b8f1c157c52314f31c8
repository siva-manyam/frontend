{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":8,"column":27,"index":154}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Share","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"paYWbT2KXBPB3KP1hDE47z0MUe8=","exportNames":["*"],"imports":1}},{"name":"./ExpoContacts","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":223},"end":{"line":11,"column":42,"index":265}}],"key":"NtnYQavOUZOyiy5kNPkiCtYHiOA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"pageSize\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"onContactsChangeEventName\", {\n    enumerable: true,\n    get: function () {\n      return onContactsChangeEventName;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionResponse\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionResponse;\n    }\n  });\n  Object.defineProperty(exports, \"PermissionExpiration\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionExpiration;\n    }\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.shareContactAsync = shareContactAsync;\n  exports.getContactsAsync = getContactsAsync;\n  exports.getPagedContactsAsync = getPagedContactsAsync;\n  exports.getContactByIdAsync = getContactByIdAsync;\n  exports.addContactAsync = addContactAsync;\n  exports.updateContactAsync = updateContactAsync;\n  exports.removeContactAsync = removeContactAsync;\n  exports.writeContactToFileAsync = writeContactToFileAsync;\n  exports.presentFormAsync = presentFormAsync;\n  exports.addExistingGroupToContainerAsync = addExistingGroupToContainerAsync;\n  exports.createGroupAsync = createGroupAsync;\n  exports.updateGroupNameAsync = updateGroupNameAsync;\n  exports.removeGroupAsync = removeGroupAsync;\n  exports.addExistingContactToGroupAsync = addExistingContactToGroupAsync;\n  exports.removeContactFromGroupAsync = removeContactFromGroupAsync;\n  exports.getGroupsAsync = getGroupsAsync;\n  exports.presentContactPickerAsync = presentContactPickerAsync;\n  exports.getDefaultContainerIdAsync = getDefaultContainerIdAsync;\n  exports.getContainersAsync = getContainersAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.presentAccessPickerAsync = presentAccessPickerAsync;\n  exports.addContactsChangeListener = addContactsChangeListener;\n  Object.defineProperty(exports, \"Fields\", {\n    enumerable: true,\n    get: function () {\n      return Fields;\n    }\n  });\n  Object.defineProperty(exports, \"CalendarFormats\", {\n    enumerable: true,\n    get: function () {\n      return CalendarFormats;\n    }\n  });\n  Object.defineProperty(exports, \"ContainerTypes\", {\n    enumerable: true,\n    get: function () {\n      return ContainerTypes;\n    }\n  });\n  Object.defineProperty(exports, \"SortTypes\", {\n    enumerable: true,\n    get: function () {\n      return SortTypes;\n    }\n  });\n  Object.defineProperty(exports, \"ContactTypes\", {\n    enumerable: true,\n    get: function () {\n      return ContactTypes;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsShare = require(_dependencyMap[3], \"react-native-web/dist/exports/Share\");\n  var Share = _interopDefault(_reactNativeWebDistExportsShare);\n  var _ExpoContacts = require(_dependencyMap[4], \"./ExpoContacts\");\n  var ExpoContacts = _interopDefault(_ExpoContacts);\n  const onContactsChangeEventName = 'onContactsChange';\n\n  /**\n   * @platform ios\n   */\n\n  // @needs-audit\n  /**\n   * Information regarding thumbnail images.\n   * > On Android you can get dimensions using [`Image.getSize`](https://reactnative.dev/docs/image#getsize) method.\n   */\n\n  /**\n   * Base contact type without ID. For better type safety, consider using:\n   * - `Contact` when creating new contacts (no ID needed)\n   * - `ExistingContact` when working with contacts returned from the system (ID guaranteed)\n   */\n\n  /**\n   * Type for existing contacts returned from the system - guarantees the id field is present.\n   */\n\n  /**\n   * The return value for queried contact operations like `getContactsAsync`.\n   */\n\n  /**\n   * Used to query contacts from the user's device.\n   */\n\n  /**\n   * Denotes the functionality of a native contact form.\n   * @platform ios\n   */\n\n  /**\n   * Used to query native contact groups.\n   * @platform ios\n   */\n\n  /**\n   * A parent to contacts. A contact can belong to multiple groups. Here are some query operations you can perform:\n   * - Child Contacts: `getContactsAsync({ groupId })`\n   * - Groups From Container: `getGroupsAsync({ containerId })`\n   * - Groups Named: `getContainersAsync({ groupName })`\n   * @platform ios\n   */\n\n  /**\n   * Used to query native contact containers.\n   * @platform ios\n   */\n\n  /**\n   * Returns whether the Contacts API is enabled on the current device. This method does not check the app permissions.\n   * @returns A promise that fulfills with a `boolean`, indicating whether the Contacts API is available on the current device. It always resolves to `false` on web.\n   */\n  async function isAvailableAsync() {\n    return !!ExpoContacts.default.getContactsAsync;\n  }\n\n  // @docsMissing\n  async function shareContactAsync(contactId, message, shareOptions = {}) {\n    if (Platform.default.OS === 'ios') {\n      const url = await writeContactToFileAsync({\n        id: contactId\n      });\n      return await Share.default.share({\n        url,\n        message\n      }, shareOptions);\n    } else if (!ExpoContacts.default.shareContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'shareContactAsync');\n    }\n    return await ExpoContacts.default.shareContactAsync(contactId, message);\n  }\n\n  /**\n   * Return a list of contacts that fit a given criteria. You can get all of the contacts by passing no criteria.\n   * @param contactQuery Object used to query contacts.\n   * @return A promise that fulfills with `ContactResponse` object returned from the query.\n   * @example\n   * ```js\n   * const { data } = await Contacts.getContactsAsync({\n   *   fields: [Contacts.Fields.Emails],\n   * });\n   *\n   * if (data.length > 0) {\n   *   const contact = data[0];\n   *   console.log(contact);\n   * }\n   * ```\n   */\n  async function getContactsAsync(contactQuery = {}) {\n    if (!ExpoContacts.default.getContactsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContactsAsync');\n    }\n    return await ExpoContacts.default.getContactsAsync(contactQuery);\n  }\n  async function getPagedContactsAsync(contactQuery = {}) {\n    const {\n        pageSize\n      } = contactQuery,\n      nOptions = (0, _objectWithoutPropertiesLoose.default)(contactQuery, _excluded);\n    if (pageSize && pageSize <= 0) {\n      throw new Error('Error: Contacts.getPagedContactsAsync: `pageSize` must be greater than 0');\n    }\n    return await getContactsAsync(Object.assign({}, nOptions, {\n      pageSize\n    }));\n  }\n\n  /**\n   * Used for gathering precise data about a contact. Returns a contact matching the given `id`.\n   * @param id The ID of a system contact.\n   * @param fields If specified, the fields defined will be returned. When skipped, all fields will be returned.\n   * @return A promise that fulfills with `Contact` object with ID matching the input ID, or `undefined` if there is no match.\n   * @example\n   * ```js\n   * const contact = await Contacts.getContactByIdAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * if (contact) {\n   *   console.log(contact);\n   * }\n   * ```\n   */\n  async function getContactByIdAsync(id, fields) {\n    if (!ExpoContacts.default.getContactsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContactsAsync');\n    }\n    if (id == null) {\n      throw new Error('Error: Contacts.getContactByIdAsync: id is required');\n    } else {\n      const results = await ExpoContacts.default.getContactsAsync({\n        pageSize: 1,\n        pageOffset: 0,\n        fields,\n        id\n      });\n      if (results && results.data && results.data.length > 0) {\n        return results.data[0];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates a new contact and adds it to the system.\n   * > **Note**: For Android users, the Expo Go app does not have the required `WRITE_CONTACTS` permission to write to Contacts.\n   * > You will need to create a [development build](/develop/development-builds/create-a-build/) and add permission in there manually to use this method.\n   * @param contact A contact with the changes you wish to persist. The `id` parameter will not be used.\n   * @param containerId @tag-ios The container that will parent the contact.\n   * @return A promise that fulfills with ID of the new system contact.\n   * @example\n   * ```js\n   * const contact = {\n   *   [Contacts.Fields.FirstName]: 'Bird',\n   *   [Contacts.Fields.LastName]: 'Man',\n   *   [Contacts.Fields.Company]: 'Young Money',\n   * };\n   * const contactId = await Contacts.addContactAsync(contact);\n   * ```\n   */\n  async function addContactAsync(contact, containerId) {\n    if (!ExpoContacts.default.addContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addContactAsync');\n    }\n    return await ExpoContacts.default.addContactAsync(contact, containerId);\n  }\n\n  /**\n   * Mutate the information of an existing contact. Due to an iOS bug, `nonGregorianBirthday` field cannot be modified.\n   * @param contact A contact object including the wanted changes. Contact `id` is required.\n   * @return A promise that fulfills with ID of the updated system contact if mutation was successful.\n   * @example\n   * ```js\n   * const contact = {\n   *   id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   *   [Contacts.Fields.FirstName]: 'Drake',\n   *   [Contacts.Fields.Company]: 'Young Money',\n   * };\n   * await Contacts.updateContactAsync(contact);\n   * ```\n   */\n  async function updateContactAsync(contact) {\n    if (!ExpoContacts.default.updateContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'updateContactAsync');\n    }\n    return await ExpoContacts.default.updateContactAsync(contact);\n  }\n\n  // @needs-audit\n  /**\n   * Delete a contact from the system.\n   * @param contactId ID of the contact you want to delete.\n   * @example\n   * ```js\n   * await Contacts.removeContactAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function removeContactAsync(contactId) {\n    if (!ExpoContacts.default.removeContactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeContactAsync');\n    }\n    return await ExpoContacts.default.removeContactAsync(contactId);\n  }\n\n  /**\n   * Query a set of contacts and write them to a local URI that can be used for sharing.\n   * @param contactQuery Used to query contact you want to write.\n   * @return A promise that fulfills with shareable local URI, or `undefined` if there was no match.\n   * @example\n   * ```js\n   * const localUri = await Contacts.writeContactToFileAsync({\n   *   id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   * });\n   * Share.share({ url: localUri, message: 'Call me!' });\n   * ```\n   */\n  async function writeContactToFileAsync(contactQuery = {}) {\n    if (!ExpoContacts.default.writeContactToFileAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'writeContactToFileAsync');\n    }\n    return await ExpoContacts.default.writeContactToFileAsync(contactQuery);\n  }\n\n  // @needs-audit\n  /**\n   * Present a native form for manipulating contacts.\n   * @param contactId The ID of a system contact.\n   * @param contact A contact with the changes you want to persist.\n   * @param formOptions Options for the native editor.\n   * @example\n   * ```js\n   * await Contacts.presentFormAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   */\n  async function presentFormAsync(contactId, contact, formOptions = {}) {\n    if (!ExpoContacts.default.presentFormAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'presentFormAsync');\n    }\n    if (Platform.default.OS === 'ios') {\n      const adjustedOptions = formOptions;\n      if (contactId) {\n        if (contact) {\n          contact = undefined;\n          console.log('Expo.Contacts.presentFormAsync: You should define either a `contact` or a `contactId` but not both.');\n        }\n        if (adjustedOptions.isNew !== undefined) {\n          console.log('Expo.Contacts.presentFormAsync: `formOptions.isNew` is not supported with `contactId`');\n        }\n      }\n      return await ExpoContacts.default.presentFormAsync(contactId, contact, adjustedOptions);\n    } else {\n      return await ExpoContacts.default.presentFormAsync(contactId, contact, formOptions);\n    }\n  }\n\n  // iOS Only\n\n  /**\n   * Add a group to a container.\n   * @param groupId The group you want to target.\n   * @param containerId The container you want to add membership to.\n   * @example\n   * ```js\n   * await Contacts.addExistingGroupToContainerAsync(\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function addExistingGroupToContainerAsync(groupId, containerId) {\n    if (!ExpoContacts.default.addExistingGroupToContainerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addExistingGroupToContainerAsync');\n    }\n    return await ExpoContacts.default.addExistingGroupToContainerAsync(groupId, containerId);\n  }\n\n  /**\n   * Create a group with a name, and add it to a container. If the container is `undefined`, the default container will be targeted.\n   * @param name Name of the new group.\n   * @param containerId The container you to add membership to.\n   * @return A promise that fulfills with ID of the new group.\n   * @example\n   * ```js\n   * const groupId = await Contacts.createGroupAsync('Sailor Moon');\n   * ```\n   * @platform ios\n   */\n  async function createGroupAsync(name, containerId) {\n    if (!ExpoContacts.default.createGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'createGroupAsync');\n    }\n    name = name || _expoModulesCore.uuid.v4();\n    if (!containerId) {\n      containerId = await getDefaultContainerIdAsync();\n    }\n    return await ExpoContacts.default.createGroupAsync(name, containerId);\n  }\n\n  /**\n   * Change the name of an existing group.\n   * @param groupName New name for an existing group.\n   * @param groupId ID of the group you want to edit.\n   * @example\n   * ```js\n   * await Contacts.updateGroupName('Expo Friends', '161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function updateGroupNameAsync(groupName, groupId) {\n    if (!ExpoContacts.default.updateGroupNameAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'updateGroupNameAsync');\n    }\n    return await ExpoContacts.default.updateGroupNameAsync(groupName, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Delete a group from the device.\n   * @param groupId ID of the group you want to remove.\n   * @example\n   * ```js\n   * await Contacts.removeGroupAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n   * ```\n   * @platform ios\n   */\n  async function removeGroupAsync(groupId) {\n    if (!ExpoContacts.default.removeGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeGroupAsync');\n    }\n    return await ExpoContacts.default.removeGroupAsync(groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Add a contact as a member to a group. A contact can be a member of multiple groups.\n   * @param contactId ID of the contact you want to edit.\n   * @param groupId ID for the group you want to add membership to.\n   * @example\n   * ```js\n   * await Contacts.addExistingContactToGroupAsync(\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function addExistingContactToGroupAsync(contactId, groupId) {\n    if (!ExpoContacts.default.addExistingContactToGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addExistingContactToGroupAsync');\n    }\n    return await ExpoContacts.default.addExistingContactToGroupAsync(contactId, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Remove a contact's membership from a given group. This will not delete the contact.\n   * @param contactId ID of the contact you want to remove.\n   * @param groupId ID for the group you want to remove membership of.\n   * @example\n   * ```js\n   * await Contacts.removeContactFromGroupAsync(\n   *   '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   *   '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n   * );\n   * ```\n   * @platform ios\n   */\n  async function removeContactFromGroupAsync(contactId, groupId) {\n    if (!ExpoContacts.default.removeContactFromGroupAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'removeContactFromGroupAsync');\n    }\n    return await ExpoContacts.default.removeContactFromGroupAsync(contactId, groupId);\n  }\n\n  // @needs-audit\n  /**\n   * Query and return a list of system groups.\n   * @param groupQuery Information regarding which groups you want to get.\n   * @example\n   * ```js\n   * const groups = await Contacts.getGroupsAsync({ groupName: 'sailor moon' });\n   * const allGroups = await Contacts.getGroupsAsync({});\n   * ```\n   * @return A promise that fulfills with array of groups that fit the query.\n   * @platform ios\n   */\n  async function getGroupsAsync(groupQuery) {\n    if (!ExpoContacts.default.getGroupsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getGroupsAsync');\n    }\n    return await ExpoContacts.default.getGroupsAsync(groupQuery);\n  }\n\n  /**\n   * Presents a native contact picker to select a single contact from the system. On Android, the `READ_CONTACTS` permission is required. You can\n   * obtain this permission by calling the [`Contacts.requestPermissionsAsync()`](#contactsrequestpermissionsasync) method. On iOS, no permissions are\n   * required to use this method.\n   * @return A promise that fulfills with a single `Contact` object if a contact is selected or `null` if no contact is selected (when selection is canceled).\n   */\n  async function presentContactPickerAsync() {\n    if (!ExpoContacts.default.presentContactPickerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'presentContactPickerAsync');\n    }\n    return await ExpoContacts.default.presentContactPickerAsync();\n  }\n\n  /**\n   * Get the default container's ID.\n   * @return A promise that fulfills with default container ID.\n   * @example\n   * ```js\n   * const containerId = await Contacts.getDefaultContainerIdAsync();\n   * ```\n   * @platform ios\n   */\n  async function getDefaultContainerIdAsync() {\n    if (!ExpoContacts.default.getDefaultContainerIdentifierAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getDefaultContainerIdentifierAsync');\n    }\n    return await ExpoContacts.default.getDefaultContainerIdentifierAsync();\n  }\n\n  /**\n   * Query a list of system containers.\n   * @param containerQuery Information used to gather containers.\n   * @return A promise that fulfills with array of containers that fit the query.\n   * @example\n   * ```js\n   * const allContainers = await Contacts.getContainersAsync({\n   *   contactId: '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n   * });\n   * ```\n   * @platform ios\n   */\n  async function getContainersAsync(containerQuery) {\n    if (!ExpoContacts.default.getContainersAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getContainersAsync');\n    }\n    return await ExpoContacts.default.getContainersAsync(containerQuery);\n  }\n\n  /**\n   * Checks user's permissions for accessing contacts data.\n   * @return A promise that resolves to a [ContactsPermissionResponse](#contactspermissionresponse) object.\n   */\n  async function getPermissionsAsync() {\n    if (!ExpoContacts.default.getPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'getPermissionsAsync');\n    }\n    return await ExpoContacts.default.getPermissionsAsync();\n  }\n\n  /**\n   * Asks the user to grant permissions for accessing contacts data.\n   * @return A promise that resolves to a [ContactsPermissionResponse](#contactspermissionresponse) object.\n   */\n  async function requestPermissionsAsync() {\n    if (!ExpoContacts.default.requestPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'requestPermissionsAsync');\n    }\n    return await ExpoContacts.default.requestPermissionsAsync();\n  }\n\n  /**\n   * Presents a modal which allows the user to select which contacts the app has access to.\n   * Using this function is reasonable only when the app has \"limited\" permissions.\n   * @return A promise that resolves with an array of contact identifiers that were newly granted to the app.\n   * Contacts which the app lost access to are not listed. On platforms other than iOS and below 18.0, the promise rejects immediately.\n   * @platform ios 18.0+\n   */\n  async function presentAccessPickerAsync() {\n    return await ExpoContacts.default.presentAccessPickerAsync();\n  }\n\n  /**\n   * Adds a listener for contact changes. The listener will be called whenever contacts are added, updated, or deleted.\n   *\n   * **Platform differences:**\n   * - **Android**: 5-7 second delay - uses `ContentObserver` with inherent system delays\n   * - **iOS**: Immediate response - uses `CNContactStoreDidChangeNotification`\n   *\n   * The Android delay is a system limitation that affects all apps using `ContentObserver` for contacts.\n   * This delay is by design to batch notifications for better performance and battery life.\n   * For more immediate updates, you can also listen to app state changes and refresh\n   * contacts when the app comes to the foreground. This ensures users see the latest contacts when\n   * returning from the native Contacts app.\n   *\n   * @param listener The function that will be executed when contacts change.\n   * This function accepts no arguments.\n   *\n   * @returns A subscription object with a `remove` method to stop listening.\n   * @example\n   * ```jsx\n   * const subscription = Contacts.addContactChangeListener(() => {\n   *   console.log('Contacts changed - refreshing contact list');\n   *   // Refresh your contact list when changes are detected\n   *   loadContacts();\n   * });\n   *\n   * // Later, remove the listener\n   * subscription.remove();\n   * ```\n   */\n  function addContactsChangeListener(listener) {\n    if (!ExpoContacts.default.addListener) {\n      throw new _expoModulesCore.UnavailabilityError('Contacts', 'addContactChangeListener');\n    }\n    const eventSubscription = ExpoContacts.default.addListener(onContactsChangeEventName, listener);\n    return {\n      remove: () => {\n        eventSubscription?.remove();\n      }\n    };\n  }\n\n  /**\n   * Possible fields to retrieve for a contact.\n   */\n  let Fields = /*#__PURE__*/function (Fields) {\n    Fields[\"ID\"] = \"id\";\n    Fields[\"ContactType\"] = \"contactType\";\n    Fields[\"Name\"] = \"name\";\n    Fields[\"FirstName\"] = \"firstName\";\n    Fields[\"MiddleName\"] = \"middleName\";\n    Fields[\"LastName\"] = \"lastName\";\n    Fields[\"MaidenName\"] = \"maidenName\";\n    Fields[\"NamePrefix\"] = \"namePrefix\";\n    Fields[\"NameSuffix\"] = \"nameSuffix\";\n    Fields[\"Nickname\"] = \"nickname\";\n    Fields[\"PhoneticFirstName\"] = \"phoneticFirstName\";\n    Fields[\"PhoneticMiddleName\"] = \"phoneticMiddleName\";\n    Fields[\"PhoneticLastName\"] = \"phoneticLastName\";\n    Fields[\"Birthday\"] = \"birthday\";\n    /**\n     * @platform ios\n     */\n    Fields[\"NonGregorianBirthday\"] = \"nonGregorianBirthday\";\n    Fields[\"Emails\"] = \"emails\";\n    Fields[\"PhoneNumbers\"] = \"phoneNumbers\";\n    Fields[\"Addresses\"] = \"addresses\";\n    /**\n     * @platform ios\n     */\n    Fields[\"SocialProfiles\"] = \"socialProfiles\";\n    Fields[\"InstantMessageAddresses\"] = \"instantMessageAddresses\";\n    Fields[\"UrlAddresses\"] = \"urlAddresses\";\n    Fields[\"Company\"] = \"company\";\n    Fields[\"JobTitle\"] = \"jobTitle\";\n    Fields[\"Department\"] = \"department\";\n    Fields[\"ImageAvailable\"] = \"imageAvailable\";\n    Fields[\"Image\"] = \"image\";\n    Fields[\"RawImage\"] = \"rawImage\";\n    Fields[\"ExtraNames\"] = \"extraNames\";\n    Fields[\"Note\"] = \"note\";\n    Fields[\"Dates\"] = \"dates\";\n    Fields[\"Relationships\"] = \"relationships\";\n    /**\n     * @platform android\n     */\n    Fields[\"IsFavorite\"] = \"isFavorite\";\n    return Fields;\n  }({});\n  /**\n   * This format denotes the common calendar format used to specify how a date is calculated in `nonGregorianBirthday` fields.\n   */\n  let CalendarFormats = /*#__PURE__*/function (CalendarFormats) {\n    CalendarFormats[\"Gregorian\"] = \"gregorian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Buddhist\"] = \"buddhist\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Chinese\"] = \"chinese\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Coptic\"] = \"coptic\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"EthiopicAmeteMihret\"] = \"ethiopicAmeteMihret\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"EthiopicAmeteAlem\"] = \"ethiopicAmeteAlem\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Hebrew\"] = \"hebrew\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"ISO8601\"] = \"iso8601\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Indian\"] = \"indian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Islamic\"] = \"islamic\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicCivil\"] = \"islamicCivil\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Japanese\"] = \"japanese\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"Persian\"] = \"persian\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"RepublicOfChina\"] = \"republicOfChina\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicTabular\"] = \"islamicTabular\";\n    /**\n     * @platform ios\n     */\n    CalendarFormats[\"IslamicUmmAlQura\"] = \"islamicUmmAlQura\";\n    return CalendarFormats;\n  }({});\n  /**\n   * @platform ios\n   */\n  let ContainerTypes = /*#__PURE__*/function (ContainerTypes) {\n    /**\n     * A local non-iCloud container.\n     */\n    ContainerTypes[\"Local\"] = \"local\";\n    /**\n     * In association with email server.\n     */\n    ContainerTypes[\"Exchange\"] = \"exchange\";\n    /**\n     * With cardDAV protocol used for sharing.\n     */\n    ContainerTypes[\"CardDAV\"] = \"cardDAV\";\n    /**\n     * Unknown container.\n     */\n    ContainerTypes[\"Unassigned\"] = \"unassigned\";\n    return ContainerTypes;\n  }({});\n  let SortTypes = /*#__PURE__*/function (SortTypes) {\n    /**\n     * The user default method of sorting.\n     * @platform android\n     */\n    SortTypes[\"UserDefault\"] = \"userDefault\";\n    /**\n     * Sort by first name in ascending order.\n     */\n    SortTypes[\"FirstName\"] = \"firstName\";\n    /**\n     * Sort by last name in ascending order.\n     */\n    SortTypes[\"LastName\"] = \"lastName\";\n    /**\n     * No sorting should be applied.\n     */\n    SortTypes[\"None\"] = \"none\";\n    return SortTypes;\n  }({});\n  let ContactTypes = /*#__PURE__*/function (ContactTypes) {\n    /**\n     * Contact is a human.\n     */\n    ContactTypes[\"Person\"] = \"person\";\n    /**\n     * Contact is group or company.\n     */\n    ContactTypes[\"Company\"] = \"company\";\n    return ContactTypes;\n  }({});\n});","lineCount":786,"map":[[13,2,13,0,"Object"],[13,8,13,0],[13,9,13,0,"defineProperty"],[13,23,13,0],[13,24,13,0,"exports"],[13,31,13,0],[14,4,13,0,"enumerable"],[14,14,13,0],[15,4,13,0,"get"],[15,7,13,0],[15,18,13,0,"get"],[15,19,13,0],[16,6,13,0],[16,13,13,0,"onContactsChangeEventName"],[16,38,13,0],[17,4,13,0],[18,2,13,0],[19,2,586,0,"Object"],[19,8,586,0],[19,9,586,0,"defineProperty"],[19,23,586,0],[19,24,586,0,"exports"],[19,31,586,0],[20,4,586,0,"enumerable"],[20,14,586,0],[21,4,586,0,"get"],[21,7,586,0],[21,18,586,0,"get"],[21,19,586,0],[22,6,586,0],[22,13,586,9,"PermissionStatus"],[22,29,586,25],[22,30,586,25,"PermissionStatus"],[22,46,586,25],[23,4,586,25],[24,2,586,25],[25,2,586,0,"Object"],[25,8,586,0],[25,9,586,0,"defineProperty"],[25,23,586,0],[25,24,586,0,"exports"],[25,31,586,0],[26,4,586,0,"enumerable"],[26,14,586,0],[27,4,586,0,"get"],[27,7,586,0],[27,18,586,0,"get"],[27,19,586,0],[28,6,586,0],[28,13,586,27,"PermissionResponse"],[28,29,586,45],[28,30,586,45,"PermissionResponse"],[28,48,586,45],[29,4,586,45],[30,2,586,45],[31,2,586,0,"Object"],[31,8,586,0],[31,9,586,0,"defineProperty"],[31,23,586,0],[31,24,586,0,"exports"],[31,31,586,0],[32,4,586,0,"enumerable"],[32,14,586,0],[33,4,586,0,"get"],[33,7,586,0],[33,18,586,0,"get"],[33,19,586,0],[34,6,586,0],[34,13,586,47,"PermissionExpiration"],[34,29,586,67],[34,30,586,67,"PermissionExpiration"],[34,50,586,67],[35,4,586,67],[36,2,586,67],[37,2,592,0,"exports"],[37,9,592,0],[37,10,592,0,"isAvailableAsync"],[37,26,592,0],[37,29,592,0,"isAvailableAsync"],[37,45,592,0],[38,2,597,0,"exports"],[38,9,597,0],[38,10,597,0,"shareContactAsync"],[38,27,597,0],[38,30,597,0,"shareContactAsync"],[38,47,597,0],[39,2,635,0,"exports"],[39,9,635,0],[39,10,635,0,"getContactsAsync"],[39,26,635,0],[39,29,635,0,"getContactsAsync"],[39,45,635,0],[40,2,642,0,"exports"],[40,9,642,0],[40,10,642,0,"getPagedContactsAsync"],[40,31,642,0],[40,34,642,0,"getPagedContactsAsync"],[40,55,642,0],[41,2,670,0,"exports"],[41,9,670,0],[41,10,670,0,"getContactByIdAsync"],[41,29,670,0],[41,32,670,0,"getContactByIdAsync"],[41,51,670,0],[42,2,711,0,"exports"],[42,9,711,0],[42,10,711,0,"addContactAsync"],[42,25,711,0],[42,28,711,0,"addContactAsync"],[42,43,711,0],[43,2,733,0,"exports"],[43,9,733,0],[43,10,733,0,"updateContactAsync"],[43,28,733,0],[43,31,733,0,"updateContactAsync"],[43,49,733,0],[44,2,752,0,"exports"],[44,9,752,0],[44,10,752,0,"removeContactAsync"],[44,28,752,0],[44,31,752,0,"removeContactAsync"],[44,49,752,0],[45,2,771,0,"exports"],[45,9,771,0],[45,10,771,0,"writeContactToFileAsync"],[45,33,771,0],[45,36,771,0,"writeContactToFileAsync"],[45,59,771,0],[46,2,791,0,"exports"],[46,9,791,0],[46,10,791,0,"presentFormAsync"],[46,26,791,0],[46,29,791,0,"presentFormAsync"],[46,45,791,0],[47,2,836,0,"exports"],[47,9,836,0],[47,10,836,0,"addExistingGroupToContainerAsync"],[47,42,836,0],[47,45,836,0,"addExistingGroupToContainerAsync"],[47,77,836,0],[48,2,858,0,"exports"],[48,9,858,0],[48,10,858,0,"createGroupAsync"],[48,26,858,0],[48,29,858,0,"createGroupAsync"],[48,45,858,0],[49,2,881,0,"exports"],[49,9,881,0],[49,10,881,0,"updateGroupNameAsync"],[49,30,881,0],[49,33,881,0,"updateGroupNameAsync"],[49,53,881,0],[50,2,899,0,"exports"],[50,9,899,0],[50,10,899,0,"removeGroupAsync"],[50,26,899,0],[50,29,899,0,"removeGroupAsync"],[50,45,899,0],[51,2,921,0,"exports"],[51,9,921,0],[51,10,921,0,"addExistingContactToGroupAsync"],[51,40,921,0],[51,43,921,0,"addExistingContactToGroupAsync"],[51,73,921,0],[52,2,946,0,"exports"],[52,9,946,0],[52,10,946,0,"removeContactFromGroupAsync"],[52,37,946,0],[52,40,946,0,"removeContactFromGroupAsync"],[52,67,946,0],[53,2,969,0,"exports"],[53,9,969,0],[53,10,969,0,"getGroupsAsync"],[53,24,969,0],[53,27,969,0,"getGroupsAsync"],[53,41,969,0],[54,2,983,0,"exports"],[54,9,983,0],[54,10,983,0,"presentContactPickerAsync"],[54,35,983,0],[54,38,983,0,"presentContactPickerAsync"],[54,63,983,0],[55,2,999,0,"exports"],[55,9,999,0],[55,10,999,0,"getDefaultContainerIdAsync"],[55,36,999,0],[55,39,999,0,"getDefaultContainerIdAsync"],[55,65,999,0],[56,2,1019,0,"exports"],[56,9,1019,0],[56,10,1019,0,"getContainersAsync"],[56,28,1019,0],[56,31,1019,0,"getContainersAsync"],[56,49,1019,0],[57,2,1031,0,"exports"],[57,9,1031,0],[57,10,1031,0,"getPermissionsAsync"],[57,29,1031,0],[57,32,1031,0,"getPermissionsAsync"],[57,51,1031,0],[58,2,1043,0,"exports"],[58,9,1043,0],[58,10,1043,0,"requestPermissionsAsync"],[58,33,1043,0],[58,36,1043,0,"requestPermissionsAsync"],[58,59,1043,0],[59,2,1058,0,"exports"],[59,9,1058,0],[59,10,1058,0,"presentAccessPickerAsync"],[59,34,1058,0],[59,37,1058,0,"presentAccessPickerAsync"],[59,61,1058,0],[60,2,1091,0,"exports"],[60,9,1091,0],[60,10,1091,0,"addContactsChangeListener"],[60,35,1091,0],[60,38,1091,0,"addContactsChangeListener"],[60,63,1091,0],[61,2,1108,0,"Object"],[61,8,1108,0],[61,9,1108,0,"defineProperty"],[61,23,1108,0],[61,24,1108,0,"exports"],[61,31,1108,0],[62,4,1108,0,"enumerable"],[62,14,1108,0],[63,4,1108,0,"get"],[63,7,1108,0],[63,18,1108,0,"get"],[63,19,1108,0],[64,6,1108,0],[64,13,1108,0,"Fields"],[64,19,1108,0],[65,4,1108,0],[66,2,1108,0],[67,2,1155,0,"Object"],[67,8,1155,0],[67,9,1155,0,"defineProperty"],[67,23,1155,0],[67,24,1155,0,"exports"],[67,31,1155,0],[68,4,1155,0,"enumerable"],[68,14,1155,0],[69,4,1155,0,"get"],[69,7,1155,0],[69,18,1155,0,"get"],[69,19,1155,0],[70,6,1155,0],[70,13,1155,0,"CalendarFormats"],[70,28,1155,0],[71,4,1155,0],[72,2,1155,0],[73,2,1222,0,"Object"],[73,8,1222,0],[73,9,1222,0,"defineProperty"],[73,23,1222,0],[73,24,1222,0,"exports"],[73,31,1222,0],[74,4,1222,0,"enumerable"],[74,14,1222,0],[75,4,1222,0,"get"],[75,7,1222,0],[75,18,1222,0,"get"],[75,19,1222,0],[76,6,1222,0],[76,13,1222,0,"ContainerTypes"],[76,27,1222,0],[77,4,1222,0],[78,2,1222,0],[79,2,1241,0,"Object"],[79,8,1241,0],[79,9,1241,0,"defineProperty"],[79,23,1241,0],[79,24,1241,0,"exports"],[79,31,1241,0],[80,4,1241,0,"enumerable"],[80,14,1241,0],[81,4,1241,0,"get"],[81,7,1241,0],[81,18,1241,0,"get"],[81,19,1241,0],[82,6,1241,0],[82,13,1241,0,"SortTypes"],[82,22,1241,0],[83,4,1241,0],[84,2,1241,0],[85,2,1261,0,"Object"],[85,8,1261,0],[85,9,1261,0,"defineProperty"],[85,23,1261,0],[85,24,1261,0,"exports"],[85,31,1261,0],[86,4,1261,0,"enumerable"],[86,14,1261,0],[87,4,1261,0,"get"],[87,7,1261,0],[87,18,1261,0,"get"],[87,19,1261,0],[88,6,1261,0],[88,13,1261,0,"ContactTypes"],[88,25,1261,0],[89,4,1261,0],[90,2,1261,0],[91,2,1270,1],[91,6,1270,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[91,54,1270,1],[91,57,1270,1,"require"],[91,64,1270,1],[91,65,1270,1,"_dependencyMap"],[91,79,1270,1],[92,2,1270,1],[92,6,1270,1,"_objectWithoutPropertiesLoose"],[92,35,1270,1],[92,38,1270,1,"_interopDefault"],[92,53,1270,1],[92,54,1270,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[92,102,1270,1],[93,2,1,0],[93,6,1,0,"_expoModulesCore"],[93,22,1,0],[93,25,1,0,"require"],[93,32,1,0],[93,33,1,0,"_dependencyMap"],[93,47,1,0],[94,2,8,27],[94,6,8,27,"_reactNativeWebDistExportsPlatform"],[94,40,8,27],[94,43,8,27,"require"],[94,50,8,27],[94,51,8,27,"_dependencyMap"],[94,65,8,27],[95,2,8,27],[95,6,8,27,"Platform"],[95,14,8,27],[95,17,8,27,"_interopDefault"],[95,32,8,27],[95,33,8,27,"_reactNativeWebDistExportsPlatform"],[95,67,8,27],[96,2,8,27],[96,6,8,27,"_reactNativeWebDistExportsShare"],[96,37,8,27],[96,40,8,27,"require"],[96,47,8,27],[96,48,8,27,"_dependencyMap"],[96,62,8,27],[97,2,8,27],[97,6,8,27,"Share"],[97,11,8,27],[97,14,8,27,"_interopDefault"],[97,29,8,27],[97,30,8,27,"_reactNativeWebDistExportsShare"],[97,61,8,27],[98,2,11,0],[98,6,11,0,"_ExpoContacts"],[98,19,11,0],[98,22,11,0,"require"],[98,29,11,0],[98,30,11,0,"_dependencyMap"],[98,44,11,0],[99,2,11,0],[99,6,11,0,"ExpoContacts"],[99,18,11,0],[99,21,11,0,"_interopDefault"],[99,36,11,0],[99,37,11,0,"_ExpoContacts"],[99,50,11,0],[100,2,13,7],[100,8,13,13,"onContactsChangeEventName"],[100,33,13,38],[100,36,13,41],[100,54,13,59],[102,2,168,0],[103,0,169,0],[104,0,170,0],[106,2,240,0],[107,2,241,0],[108,0,242,0],[109,0,243,0],[110,0,244,0],[112,2,267,0],[113,0,268,0],[114,0,269,0],[115,0,270,0],[116,0,271,0],[118,2,401,0],[119,0,402,0],[120,0,403,0],[122,2,411,0],[123,0,412,0],[124,0,413,0],[126,2,431,0],[127,0,432,0],[128,0,433,0],[130,2,477,0],[131,0,478,0],[132,0,479,0],[133,0,480,0],[135,2,524,0],[136,0,525,0],[137,0,526,0],[138,0,527,0],[140,2,543,0],[141,0,544,0],[142,0,545,0],[143,0,546,0],[144,0,547,0],[145,0,548,0],[146,0,549,0],[148,2,561,0],[149,0,562,0],[150,0,563,0],[151,0,564,0],[153,2,588,0],[154,0,589,0],[155,0,590,0],[156,0,591,0],[157,2,592,7],[157,17,592,22,"isAvailableAsync"],[157,33,592,38,"isAvailableAsync"],[157,34,592,38],[157,36,592,59],[158,4,593,2],[158,11,593,9],[158,12,593,10],[158,13,593,11,"ExpoContacts"],[158,25,593,23],[158,26,593,23,"default"],[158,33,593,23],[158,34,593,24,"getContactsAsync"],[158,50,593,40],[159,2,594,0],[161,2,596,0],[162,2,597,7],[162,17,597,22,"shareContactAsync"],[162,34,597,39,"shareContactAsync"],[162,35,598,2,"contactId"],[162,44,598,19],[162,46,599,2,"message"],[162,53,599,17],[162,55,600,2,"shareOptions"],[162,67,600,28],[162,70,600,31],[162,71,600,32],[162,72,600,33],[162,74,601,16],[163,4,602,2],[163,8,602,6,"Platform"],[163,16,602,14],[163,17,602,14,"default"],[163,24,602,14],[163,25,602,15,"OS"],[163,27,602,17],[163,32,602,22],[163,37,602,27],[163,39,602,29],[164,6,603,4],[164,12,603,10,"url"],[164,15,603,13],[164,18,603,16],[164,24,603,22,"writeContactToFileAsync"],[164,47,603,45],[164,48,603,46],[165,8,604,6,"id"],[165,10,604,8],[165,12,604,10,"contactId"],[166,6,605,4],[166,7,605,5],[166,8,605,6],[167,6,606,4],[167,13,606,11],[167,19,606,17,"Share"],[167,24,606,22],[167,25,606,22,"default"],[167,32,606,22],[167,33,606,23,"share"],[167,38,606,28],[167,39,607,6],[168,8,608,8,"url"],[168,11,608,11],[169,8,609,8,"message"],[170,6,610,6],[170,7,610,7],[170,9,611,6,"shareOptions"],[170,21,612,4],[170,22,612,5],[171,4,613,2],[171,5,613,3],[171,11,613,9],[171,15,613,13],[171,16,613,14,"ExpoContacts"],[171,28,613,26],[171,29,613,26,"default"],[171,36,613,26],[171,37,613,27,"shareContactAsync"],[171,54,613,44],[171,56,613,46],[172,6,614,4],[172,12,614,10],[172,16,614,14,"UnavailabilityError"],[172,32,614,33],[172,33,614,33,"UnavailabilityError"],[172,52,614,33],[172,53,614,34],[172,63,614,44],[172,65,614,46],[172,84,614,65],[172,85,614,66],[173,4,615,2],[174,4,616,2],[174,11,616,9],[174,17,616,15,"ExpoContacts"],[174,29,616,27],[174,30,616,27,"default"],[174,37,616,27],[174,38,616,28,"shareContactAsync"],[174,55,616,45],[174,56,616,46,"contactId"],[174,65,616,55],[174,67,616,57,"message"],[174,74,616,64],[174,75,616,65],[175,2,617,0],[177,2,619,0],[178,0,620,0],[179,0,621,0],[180,0,622,0],[181,0,623,0],[182,0,624,0],[183,0,625,0],[184,0,626,0],[185,0,627,0],[186,0,628,0],[187,0,629,0],[188,0,630,0],[189,0,631,0],[190,0,632,0],[191,0,633,0],[192,0,634,0],[193,2,635,7],[193,17,635,22,"getContactsAsync"],[193,33,635,38,"getContactsAsync"],[193,34,635,39,"contactQuery"],[193,46,635,65],[193,49,635,68],[193,50,635,69],[193,51,635,70],[193,53,635,98],[194,4,636,2],[194,8,636,6],[194,9,636,7,"ExpoContacts"],[194,21,636,19],[194,22,636,19,"default"],[194,29,636,19],[194,30,636,20,"getContactsAsync"],[194,46,636,36],[194,48,636,38],[195,6,637,4],[195,12,637,10],[195,16,637,14,"UnavailabilityError"],[195,32,637,33],[195,33,637,33,"UnavailabilityError"],[195,52,637,33],[195,53,637,34],[195,63,637,44],[195,65,637,46],[195,83,637,64],[195,84,637,65],[196,4,638,2],[197,4,639,2],[197,11,639,9],[197,17,639,15,"ExpoContacts"],[197,29,639,27],[197,30,639,27,"default"],[197,37,639,27],[197,38,639,28,"getContactsAsync"],[197,54,639,44],[197,55,639,45,"contactQuery"],[197,67,639,57],[197,68,639,58],[198,2,640,0],[199,2,642,7],[199,17,642,22,"getPagedContactsAsync"],[199,38,642,43,"getPagedContactsAsync"],[199,39,643,2,"contactQuery"],[199,51,643,28],[199,54,643,31],[199,55,643,32],[199,56,643,33],[199,58,644,28],[200,4,645,2],[200,10,645,8],[201,8,645,10,"pageSize"],[202,6,645,32],[202,7,645,33],[202,10,645,36,"contactQuery"],[202,22,645,48],[203,6,645,23,"nOptions"],[203,14,645,31],[203,21,645,31,"_objectWithoutPropertiesLoose"],[203,50,645,31],[203,51,645,31,"default"],[203,58,645,31],[203,60,645,36,"contactQuery"],[203,72,645,48],[203,74,645,48,"_excluded"],[203,83,645,48],[204,4,647,2],[204,8,647,6,"pageSize"],[204,16,647,14],[204,20,647,18,"pageSize"],[204,28,647,26],[204,32,647,30],[204,33,647,31],[204,35,647,33],[205,6,648,4],[205,12,648,10],[205,16,648,14,"Error"],[205,21,648,19],[205,22,648,20],[205,96,648,94],[205,97,648,95],[206,4,649,2],[207,4,651,2],[207,11,651,9],[207,17,651,15,"getContactsAsync"],[207,33,651,31],[207,34,651,31,"Object"],[207,40,651,31],[207,41,651,31,"assign"],[207,47,651,31],[207,52,652,7,"nOptions"],[207,60,652,15],[208,6,653,4,"pageSize"],[209,4,653,12],[209,6,654,3],[209,7,654,4],[210,2,655,0],[212,2,657,0],[213,0,658,0],[214,0,659,0],[215,0,660,0],[216,0,661,0],[217,0,662,0],[218,0,663,0],[219,0,664,0],[220,0,665,0],[221,0,666,0],[222,0,667,0],[223,0,668,0],[224,0,669,0],[225,2,670,7],[225,17,670,22,"getContactByIdAsync"],[225,36,670,41,"getContactByIdAsync"],[225,37,671,2,"id"],[225,39,671,12],[225,41,672,2,"fields"],[225,47,672,22],[225,49,673,40],[226,4,674,2],[226,8,674,6],[226,9,674,7,"ExpoContacts"],[226,21,674,19],[226,22,674,19,"default"],[226,29,674,19],[226,30,674,20,"getContactsAsync"],[226,46,674,36],[226,48,674,38],[227,6,675,4],[227,12,675,10],[227,16,675,14,"UnavailabilityError"],[227,32,675,33],[227,33,675,33,"UnavailabilityError"],[227,52,675,33],[227,53,675,34],[227,63,675,44],[227,65,675,46],[227,83,675,64],[227,84,675,65],[228,4,676,2],[229,4,678,2],[229,8,678,6,"id"],[229,10,678,8],[229,14,678,12],[229,18,678,16],[229,20,678,18],[230,6,679,4],[230,12,679,10],[230,16,679,14,"Error"],[230,21,679,19],[230,22,679,20],[230,75,679,73],[230,76,679,74],[231,4,680,2],[231,5,680,3],[231,11,680,9],[232,6,681,4],[232,12,681,10,"results"],[232,19,681,17],[232,22,681,20],[232,28,681,26,"ExpoContacts"],[232,40,681,38],[232,41,681,38,"default"],[232,48,681,38],[232,49,681,39,"getContactsAsync"],[232,65,681,55],[232,66,681,56],[233,8,682,6,"pageSize"],[233,16,682,14],[233,18,682,16],[233,19,682,17],[234,8,683,6,"pageOffset"],[234,18,683,16],[234,20,683,18],[234,21,683,19],[235,8,684,6,"fields"],[235,14,684,12],[236,8,685,6,"id"],[237,6,686,4],[237,7,686,5],[237,8,686,6],[238,6,687,4],[238,10,687,8,"results"],[238,17,687,15],[238,21,687,19,"results"],[238,28,687,26],[238,29,687,27,"data"],[238,33,687,31],[238,37,687,35,"results"],[238,44,687,42],[238,45,687,43,"data"],[238,49,687,47],[238,50,687,48,"length"],[238,56,687,54],[238,59,687,57],[238,60,687,58],[238,62,687,60],[239,8,688,6],[239,15,688,13,"results"],[239,22,688,20],[239,23,688,21,"data"],[239,27,688,25],[239,28,688,26],[239,29,688,27],[239,30,688,28],[240,6,689,4],[241,4,690,2],[242,4,691,2],[242,11,691,9,"undefined"],[242,20,691,18],[243,2,692,0],[245,2,694,0],[246,0,695,0],[247,0,696,0],[248,0,697,0],[249,0,698,0],[250,0,699,0],[251,0,700,0],[252,0,701,0],[253,0,702,0],[254,0,703,0],[255,0,704,0],[256,0,705,0],[257,0,706,0],[258,0,707,0],[259,0,708,0],[260,0,709,0],[261,0,710,0],[262,2,711,7],[262,17,711,22,"addContactAsync"],[262,32,711,37,"addContactAsync"],[262,33,711,38,"contact"],[262,40,711,54],[262,42,711,56,"containerId"],[262,53,711,76],[262,55,711,95],[263,4,712,2],[263,8,712,6],[263,9,712,7,"ExpoContacts"],[263,21,712,19],[263,22,712,19,"default"],[263,29,712,19],[263,30,712,20,"addContactAsync"],[263,45,712,35],[263,47,712,37],[264,6,713,4],[264,12,713,10],[264,16,713,14,"UnavailabilityError"],[264,32,713,33],[264,33,713,33,"UnavailabilityError"],[264,52,713,33],[264,53,713,34],[264,63,713,44],[264,65,713,46],[264,82,713,63],[264,83,713,64],[265,4,714,2],[266,4,716,2],[266,11,716,9],[266,17,716,15,"ExpoContacts"],[266,29,716,27],[266,30,716,27,"default"],[266,37,716,27],[266,38,716,28,"addContactAsync"],[266,53,716,43],[266,54,716,44,"contact"],[266,61,716,51],[266,63,716,53,"containerId"],[266,74,716,64],[266,75,716,65],[267,2,717,0],[269,2,719,0],[270,0,720,0],[271,0,721,0],[272,0,722,0],[273,0,723,0],[274,0,724,0],[275,0,725,0],[276,0,726,0],[277,0,727,0],[278,0,728,0],[279,0,729,0],[280,0,730,0],[281,0,731,0],[282,0,732,0],[283,2,733,7],[283,17,733,22,"updateContactAsync"],[283,35,733,40,"updateContactAsync"],[283,36,734,2,"contact"],[283,43,734,52],[283,45,735,19],[284,4,736,2],[284,8,736,6],[284,9,736,7,"ExpoContacts"],[284,21,736,19],[284,22,736,19,"default"],[284,29,736,19],[284,30,736,20,"updateContactAsync"],[284,48,736,38],[284,50,736,40],[285,6,737,4],[285,12,737,10],[285,16,737,14,"UnavailabilityError"],[285,32,737,33],[285,33,737,33,"UnavailabilityError"],[285,52,737,33],[285,53,737,34],[285,63,737,44],[285,65,737,46],[285,85,737,66],[285,86,737,67],[286,4,738,2],[287,4,739,2],[287,11,739,9],[287,17,739,15,"ExpoContacts"],[287,29,739,27],[287,30,739,27,"default"],[287,37,739,27],[287,38,739,28,"updateContactAsync"],[287,56,739,46],[287,57,739,47,"contact"],[287,64,739,54],[287,65,739,55],[288,2,740,0],[290,2,742,0],[291,2,743,0],[292,0,744,0],[293,0,745,0],[294,0,746,0],[295,0,747,0],[296,0,748,0],[297,0,749,0],[298,0,750,0],[299,0,751,0],[300,2,752,7],[300,17,752,22,"removeContactAsync"],[300,35,752,40,"removeContactAsync"],[300,36,752,41,"contactId"],[300,45,752,58],[300,47,752,74],[301,4,753,2],[301,8,753,6],[301,9,753,7,"ExpoContacts"],[301,21,753,19],[301,22,753,19,"default"],[301,29,753,19],[301,30,753,20,"removeContactAsync"],[301,48,753,38],[301,50,753,40],[302,6,754,4],[302,12,754,10],[302,16,754,14,"UnavailabilityError"],[302,32,754,33],[302,33,754,33,"UnavailabilityError"],[302,52,754,33],[302,53,754,34],[302,63,754,44],[302,65,754,46],[302,85,754,66],[302,86,754,67],[303,4,755,2],[304,4,756,2],[304,11,756,9],[304,17,756,15,"ExpoContacts"],[304,29,756,27],[304,30,756,27,"default"],[304,37,756,27],[304,38,756,28,"removeContactAsync"],[304,56,756,46],[304,57,756,47,"contactId"],[304,66,756,56],[304,67,756,57],[305,2,757,0],[307,2,759,0],[308,0,760,0],[309,0,761,0],[310,0,762,0],[311,0,763,0],[312,0,764,0],[313,0,765,0],[314,0,766,0],[315,0,767,0],[316,0,768,0],[317,0,769,0],[318,0,770,0],[319,2,771,7],[319,17,771,22,"writeContactToFileAsync"],[319,40,771,45,"writeContactToFileAsync"],[319,41,772,2,"contactQuery"],[319,53,772,28],[319,56,772,31],[319,57,772,32],[319,58,772,33],[319,60,773,31],[320,4,774,2],[320,8,774,6],[320,9,774,7,"ExpoContacts"],[320,21,774,19],[320,22,774,19,"default"],[320,29,774,19],[320,30,774,20,"writeContactToFileAsync"],[320,53,774,43],[320,55,774,45],[321,6,775,4],[321,12,775,10],[321,16,775,14,"UnavailabilityError"],[321,32,775,33],[321,33,775,33,"UnavailabilityError"],[321,52,775,33],[321,53,775,34],[321,63,775,44],[321,65,775,46],[321,90,775,71],[321,91,775,72],[322,4,776,2],[323,4,777,2],[323,11,777,9],[323,17,777,15,"ExpoContacts"],[323,29,777,27],[323,30,777,27,"default"],[323,37,777,27],[323,38,777,28,"writeContactToFileAsync"],[323,61,777,51],[323,62,777,52,"contactQuery"],[323,74,777,64],[323,75,777,65],[324,2,778,0],[326,2,780,0],[327,2,781,0],[328,0,782,0],[329,0,783,0],[330,0,784,0],[331,0,785,0],[332,0,786,0],[333,0,787,0],[334,0,788,0],[335,0,789,0],[336,0,790,0],[337,2,791,7],[337,17,791,22,"presentFormAsync"],[337,33,791,38,"presentFormAsync"],[337,34,792,2,"contactId"],[337,43,792,27],[337,45,793,2,"contact"],[337,52,793,26],[337,54,794,2,"formOptions"],[337,65,794,26],[337,68,794,29],[337,69,794,30],[337,70,794,31],[337,72,795,16],[338,4,796,2],[338,8,796,6],[338,9,796,7,"ExpoContacts"],[338,21,796,19],[338,22,796,19,"default"],[338,29,796,19],[338,30,796,20,"presentFormAsync"],[338,46,796,36],[338,48,796,38],[339,6,797,4],[339,12,797,10],[339,16,797,14,"UnavailabilityError"],[339,32,797,33],[339,33,797,33,"UnavailabilityError"],[339,52,797,33],[339,53,797,34],[339,63,797,44],[339,65,797,46],[339,83,797,64],[339,84,797,65],[340,4,798,2],[341,4,799,2],[341,8,799,6,"Platform"],[341,16,799,14],[341,17,799,14,"default"],[341,24,799,14],[341,25,799,15,"OS"],[341,27,799,17],[341,32,799,22],[341,37,799,27],[341,39,799,29],[342,6,800,4],[342,12,800,10,"adjustedOptions"],[342,27,800,25],[342,30,800,28,"formOptions"],[342,41,800,39],[343,6,802,4],[343,10,802,8,"contactId"],[343,19,802,17],[343,21,802,19],[344,8,803,6],[344,12,803,10,"contact"],[344,19,803,17],[344,21,803,19],[345,10,804,8,"contact"],[345,17,804,15],[345,20,804,18,"undefined"],[345,29,804,27],[346,10,805,8,"console"],[346,17,805,15],[346,18,805,16,"log"],[346,21,805,19],[346,22,806,10],[346,123,807,8],[346,124,807,9],[347,8,808,6],[348,8,809,6],[348,12,809,10,"adjustedOptions"],[348,27,809,25],[348,28,809,26,"isNew"],[348,33,809,31],[348,38,809,36,"undefined"],[348,47,809,45],[348,49,809,47],[349,10,810,8,"console"],[349,17,810,15],[349,18,810,16,"log"],[349,21,810,19],[349,22,811,10],[349,109,812,8],[349,110,812,9],[350,8,813,6],[351,6,814,4],[352,6,815,4],[352,13,815,11],[352,19,815,17,"ExpoContacts"],[352,31,815,29],[352,32,815,29,"default"],[352,39,815,29],[352,40,815,30,"presentFormAsync"],[352,56,815,46],[352,57,815,47,"contactId"],[352,66,815,56],[352,68,815,58,"contact"],[352,75,815,65],[352,77,815,67,"adjustedOptions"],[352,92,815,82],[352,93,815,83],[353,4,816,2],[353,5,816,3],[353,11,816,9],[354,6,817,4],[354,13,817,11],[354,19,817,17,"ExpoContacts"],[354,31,817,29],[354,32,817,29,"default"],[354,39,817,29],[354,40,817,30,"presentFormAsync"],[354,56,817,46],[354,57,817,47,"contactId"],[354,66,817,56],[354,68,817,58,"contact"],[354,75,817,65],[354,77,817,67,"formOptions"],[354,88,817,78],[354,89,817,79],[355,4,818,2],[356,2,819,0],[358,2,821,0],[360,2,823,0],[361,0,824,0],[362,0,825,0],[363,0,826,0],[364,0,827,0],[365,0,828,0],[366,0,829,0],[367,0,830,0],[368,0,831,0],[369,0,832,0],[370,0,833,0],[371,0,834,0],[372,0,835,0],[373,2,836,7],[373,17,836,22,"addExistingGroupToContainerAsync"],[373,49,836,54,"addExistingGroupToContainerAsync"],[373,50,837,2,"groupId"],[373,57,837,17],[373,59,838,2,"containerId"],[373,70,838,21],[373,72,839,16],[374,4,840,2],[374,8,840,6],[374,9,840,7,"ExpoContacts"],[374,21,840,19],[374,22,840,19,"default"],[374,29,840,19],[374,30,840,20,"addExistingGroupToContainerAsync"],[374,62,840,52],[374,64,840,54],[375,6,841,4],[375,12,841,10],[375,16,841,14,"UnavailabilityError"],[375,32,841,33],[375,33,841,33,"UnavailabilityError"],[375,52,841,33],[375,53,841,34],[375,63,841,44],[375,65,841,46],[375,99,841,80],[375,100,841,81],[376,4,842,2],[377,4,844,2],[377,11,844,9],[377,17,844,15,"ExpoContacts"],[377,29,844,27],[377,30,844,27,"default"],[377,37,844,27],[377,38,844,28,"addExistingGroupToContainerAsync"],[377,70,844,60],[377,71,844,61,"groupId"],[377,78,844,68],[377,80,844,70,"containerId"],[377,91,844,81],[377,92,844,82],[378,2,845,0],[380,2,847,0],[381,0,848,0],[382,0,849,0],[383,0,850,0],[384,0,851,0],[385,0,852,0],[386,0,853,0],[387,0,854,0],[388,0,855,0],[389,0,856,0],[390,0,857,0],[391,2,858,7],[391,17,858,22,"createGroupAsync"],[391,33,858,38,"createGroupAsync"],[391,34,858,39,"name"],[391,38,858,52],[391,40,858,54,"containerId"],[391,51,858,74],[391,53,858,93],[392,4,859,2],[392,8,859,6],[392,9,859,7,"ExpoContacts"],[392,21,859,19],[392,22,859,19,"default"],[392,29,859,19],[392,30,859,20,"createGroupAsync"],[392,46,859,36],[392,48,859,38],[393,6,860,4],[393,12,860,10],[393,16,860,14,"UnavailabilityError"],[393,32,860,33],[393,33,860,33,"UnavailabilityError"],[393,52,860,33],[393,53,860,34],[393,63,860,44],[393,65,860,46],[393,83,860,64],[393,84,860,65],[394,4,861,2],[395,4,863,2,"name"],[395,8,863,6],[395,11,863,9,"name"],[395,15,863,13],[395,19,863,17,"uuid"],[395,35,863,21],[395,36,863,21,"uuid"],[395,40,863,21],[395,41,863,22,"v4"],[395,43,863,24],[395,44,863,25],[395,45,863,26],[396,4,864,2],[396,8,864,6],[396,9,864,7,"containerId"],[396,20,864,18],[396,22,864,20],[397,6,865,4,"containerId"],[397,17,865,15],[397,20,865,18],[397,26,865,24,"getDefaultContainerIdAsync"],[397,52,865,50],[397,53,865,51],[397,54,865,52],[398,4,866,2],[399,4,868,2],[399,11,868,9],[399,17,868,15,"ExpoContacts"],[399,29,868,27],[399,30,868,27,"default"],[399,37,868,27],[399,38,868,28,"createGroupAsync"],[399,54,868,44],[399,55,868,45,"name"],[399,59,868,49],[399,61,868,51,"containerId"],[399,72,868,62],[399,73,868,63],[400,2,869,0],[402,2,871,0],[403,0,872,0],[404,0,873,0],[405,0,874,0],[406,0,875,0],[407,0,876,0],[408,0,877,0],[409,0,878,0],[410,0,879,0],[411,0,880,0],[412,2,881,7],[412,17,881,22,"updateGroupNameAsync"],[412,37,881,42,"updateGroupNameAsync"],[412,38,881,43,"groupName"],[412,47,881,60],[412,49,881,62,"groupId"],[412,56,881,77],[412,58,881,93],[413,4,882,2],[413,8,882,6],[413,9,882,7,"ExpoContacts"],[413,21,882,19],[413,22,882,19,"default"],[413,29,882,19],[413,30,882,20,"updateGroupNameAsync"],[413,50,882,40],[413,52,882,42],[414,6,883,4],[414,12,883,10],[414,16,883,14,"UnavailabilityError"],[414,32,883,33],[414,33,883,33,"UnavailabilityError"],[414,52,883,33],[414,53,883,34],[414,63,883,44],[414,65,883,46],[414,87,883,68],[414,88,883,69],[415,4,884,2],[416,4,886,2],[416,11,886,9],[416,17,886,15,"ExpoContacts"],[416,29,886,27],[416,30,886,27,"default"],[416,37,886,27],[416,38,886,28,"updateGroupNameAsync"],[416,58,886,48],[416,59,886,49,"groupName"],[416,68,886,58],[416,70,886,60,"groupId"],[416,77,886,67],[416,78,886,68],[417,2,887,0],[419,2,889,0],[420,2,890,0],[421,0,891,0],[422,0,892,0],[423,0,893,0],[424,0,894,0],[425,0,895,0],[426,0,896,0],[427,0,897,0],[428,0,898,0],[429,2,899,7],[429,17,899,22,"removeGroupAsync"],[429,33,899,38,"removeGroupAsync"],[429,34,899,39,"groupId"],[429,41,899,54],[429,43,899,70],[430,4,900,2],[430,8,900,6],[430,9,900,7,"ExpoContacts"],[430,21,900,19],[430,22,900,19,"default"],[430,29,900,19],[430,30,900,20,"removeGroupAsync"],[430,46,900,36],[430,48,900,38],[431,6,901,4],[431,12,901,10],[431,16,901,14,"UnavailabilityError"],[431,32,901,33],[431,33,901,33,"UnavailabilityError"],[431,52,901,33],[431,53,901,34],[431,63,901,44],[431,65,901,46],[431,83,901,64],[431,84,901,65],[432,4,902,2],[433,4,904,2],[433,11,904,9],[433,17,904,15,"ExpoContacts"],[433,29,904,27],[433,30,904,27,"default"],[433,37,904,27],[433,38,904,28,"removeGroupAsync"],[433,54,904,44],[433,55,904,45,"groupId"],[433,62,904,52],[433,63,904,53],[434,2,905,0],[436,2,907,0],[437,2,908,0],[438,0,909,0],[439,0,910,0],[440,0,911,0],[441,0,912,0],[442,0,913,0],[443,0,914,0],[444,0,915,0],[445,0,916,0],[446,0,917,0],[447,0,918,0],[448,0,919,0],[449,0,920,0],[450,2,921,7],[450,17,921,22,"addExistingContactToGroupAsync"],[450,47,921,52,"addExistingContactToGroupAsync"],[450,48,922,2,"contactId"],[450,57,922,19],[450,59,923,2,"groupId"],[450,66,923,17],[450,68,924,16],[451,4,925,2],[451,8,925,6],[451,9,925,7,"ExpoContacts"],[451,21,925,19],[451,22,925,19,"default"],[451,29,925,19],[451,30,925,20,"addExistingContactToGroupAsync"],[451,60,925,50],[451,62,925,52],[452,6,926,4],[452,12,926,10],[452,16,926,14,"UnavailabilityError"],[452,32,926,33],[452,33,926,33,"UnavailabilityError"],[452,52,926,33],[452,53,926,34],[452,63,926,44],[452,65,926,46],[452,97,926,78],[452,98,926,79],[453,4,927,2],[454,4,929,2],[454,11,929,9],[454,17,929,15,"ExpoContacts"],[454,29,929,27],[454,30,929,27,"default"],[454,37,929,27],[454,38,929,28,"addExistingContactToGroupAsync"],[454,68,929,58],[454,69,929,59,"contactId"],[454,78,929,68],[454,80,929,70,"groupId"],[454,87,929,77],[454,88,929,78],[455,2,930,0],[457,2,932,0],[458,2,933,0],[459,0,934,0],[460,0,935,0],[461,0,936,0],[462,0,937,0],[463,0,938,0],[464,0,939,0],[465,0,940,0],[466,0,941,0],[467,0,942,0],[468,0,943,0],[469,0,944,0],[470,0,945,0],[471,2,946,7],[471,17,946,22,"removeContactFromGroupAsync"],[471,44,946,49,"removeContactFromGroupAsync"],[471,45,947,2,"contactId"],[471,54,947,19],[471,56,948,2,"groupId"],[471,63,948,17],[471,65,949,16],[472,4,950,2],[472,8,950,6],[472,9,950,7,"ExpoContacts"],[472,21,950,19],[472,22,950,19,"default"],[472,29,950,19],[472,30,950,20,"removeContactFromGroupAsync"],[472,57,950,47],[472,59,950,49],[473,6,951,4],[473,12,951,10],[473,16,951,14,"UnavailabilityError"],[473,32,951,33],[473,33,951,33,"UnavailabilityError"],[473,52,951,33],[473,53,951,34],[473,63,951,44],[473,65,951,46],[473,94,951,75],[473,95,951,76],[474,4,952,2],[475,4,954,2],[475,11,954,9],[475,17,954,15,"ExpoContacts"],[475,29,954,27],[475,30,954,27,"default"],[475,37,954,27],[475,38,954,28,"removeContactFromGroupAsync"],[475,65,954,55],[475,66,954,56,"contactId"],[475,75,954,65],[475,77,954,67,"groupId"],[475,84,954,74],[475,85,954,75],[476,2,955,0],[478,2,957,0],[479,2,958,0],[480,0,959,0],[481,0,960,0],[482,0,961,0],[483,0,962,0],[484,0,963,0],[485,0,964,0],[486,0,965,0],[487,0,966,0],[488,0,967,0],[489,0,968,0],[490,2,969,7],[490,17,969,22,"getGroupsAsync"],[490,31,969,36,"getGroupsAsync"],[490,32,969,37,"groupQuery"],[490,42,969,59],[490,44,969,79],[491,4,970,2],[491,8,970,6],[491,9,970,7,"ExpoContacts"],[491,21,970,19],[491,22,970,19,"default"],[491,29,970,19],[491,30,970,20,"getGroupsAsync"],[491,44,970,34],[491,46,970,36],[492,6,971,4],[492,12,971,10],[492,16,971,14,"UnavailabilityError"],[492,32,971,33],[492,33,971,33,"UnavailabilityError"],[492,52,971,33],[492,53,971,34],[492,63,971,44],[492,65,971,46],[492,81,971,62],[492,82,971,63],[493,4,972,2],[494,4,974,2],[494,11,974,9],[494,17,974,15,"ExpoContacts"],[494,29,974,27],[494,30,974,27,"default"],[494,37,974,27],[494,38,974,28,"getGroupsAsync"],[494,52,974,42],[494,53,974,43,"groupQuery"],[494,63,974,53],[494,64,974,54],[495,2,975,0],[497,2,977,0],[498,0,978,0],[499,0,979,0],[500,0,980,0],[501,0,981,0],[502,0,982,0],[503,2,983,7],[503,17,983,22,"presentContactPickerAsync"],[503,42,983,47,"presentContactPickerAsync"],[503,43,983,47],[503,45,983,83],[504,4,984,2],[504,8,984,6],[504,9,984,7,"ExpoContacts"],[504,21,984,19],[504,22,984,19,"default"],[504,29,984,19],[504,30,984,20,"presentContactPickerAsync"],[504,55,984,45],[504,57,984,47],[505,6,985,4],[505,12,985,10],[505,16,985,14,"UnavailabilityError"],[505,32,985,33],[505,33,985,33,"UnavailabilityError"],[505,52,985,33],[505,53,985,34],[505,63,985,44],[505,65,985,46],[505,92,985,73],[505,93,985,74],[506,4,986,2],[507,4,987,2],[507,11,987,9],[507,17,987,15,"ExpoContacts"],[507,29,987,27],[507,30,987,27,"default"],[507,37,987,27],[507,38,987,28,"presentContactPickerAsync"],[507,63,987,53],[507,64,987,54],[507,65,987,55],[508,2,988,0],[510,2,990,0],[511,0,991,0],[512,0,992,0],[513,0,993,0],[514,0,994,0],[515,0,995,0],[516,0,996,0],[517,0,997,0],[518,0,998,0],[519,2,999,7],[519,17,999,22,"getDefaultContainerIdAsync"],[519,43,999,48,"getDefaultContainerIdAsync"],[519,44,999,48],[519,46,999,68],[520,4,1000,2],[520,8,1000,6],[520,9,1000,7,"ExpoContacts"],[520,21,1000,19],[520,22,1000,19,"default"],[520,29,1000,19],[520,30,1000,20,"getDefaultContainerIdentifierAsync"],[520,64,1000,54],[520,66,1000,56],[521,6,1001,4],[521,12,1001,10],[521,16,1001,14,"UnavailabilityError"],[521,32,1001,33],[521,33,1001,33,"UnavailabilityError"],[521,52,1001,33],[521,53,1001,34],[521,63,1001,44],[521,65,1001,46],[521,101,1001,82],[521,102,1001,83],[522,4,1002,2],[523,4,1004,2],[523,11,1004,9],[523,17,1004,15,"ExpoContacts"],[523,29,1004,27],[523,30,1004,27,"default"],[523,37,1004,27],[523,38,1004,28,"getDefaultContainerIdentifierAsync"],[523,72,1004,62],[523,73,1004,63],[523,74,1004,64],[524,2,1005,0],[526,2,1007,0],[527,0,1008,0],[528,0,1009,0],[529,0,1010,0],[530,0,1011,0],[531,0,1012,0],[532,0,1013,0],[533,0,1014,0],[534,0,1015,0],[535,0,1016,0],[536,0,1017,0],[537,0,1018,0],[538,2,1019,7],[538,17,1019,22,"getContainersAsync"],[538,35,1019,40,"getContainersAsync"],[538,36,1019,41,"containerQuery"],[538,50,1019,71],[538,52,1019,95],[539,4,1020,2],[539,8,1020,6],[539,9,1020,7,"ExpoContacts"],[539,21,1020,19],[539,22,1020,19,"default"],[539,29,1020,19],[539,30,1020,20,"getContainersAsync"],[539,48,1020,38],[539,50,1020,40],[540,6,1021,4],[540,12,1021,10],[540,16,1021,14,"UnavailabilityError"],[540,32,1021,33],[540,33,1021,33,"UnavailabilityError"],[540,52,1021,33],[540,53,1021,34],[540,63,1021,44],[540,65,1021,46],[540,85,1021,66],[540,86,1021,67],[541,4,1022,2],[542,4,1024,2],[542,11,1024,9],[542,17,1024,15,"ExpoContacts"],[542,29,1024,27],[542,30,1024,27,"default"],[542,37,1024,27],[542,38,1024,28,"getContainersAsync"],[542,56,1024,46],[542,57,1024,47,"containerQuery"],[542,71,1024,61],[542,72,1024,62],[543,2,1025,0],[545,2,1027,0],[546,0,1028,0],[547,0,1029,0],[548,0,1030,0],[549,2,1031,7],[549,17,1031,22,"getPermissionsAsync"],[549,36,1031,41,"getPermissionsAsync"],[549,37,1031,41],[549,39,1031,81],[550,4,1032,2],[550,8,1032,6],[550,9,1032,7,"ExpoContacts"],[550,21,1032,19],[550,22,1032,19,"default"],[550,29,1032,19],[550,30,1032,20,"getPermissionsAsync"],[550,49,1032,39],[550,51,1032,41],[551,6,1033,4],[551,12,1033,10],[551,16,1033,14,"UnavailabilityError"],[551,32,1033,33],[551,33,1033,33,"UnavailabilityError"],[551,52,1033,33],[551,53,1033,34],[551,63,1033,44],[551,65,1033,46],[551,86,1033,67],[551,87,1033,68],[552,4,1034,2],[553,4,1036,2],[553,11,1036,9],[553,17,1036,15,"ExpoContacts"],[553,29,1036,27],[553,30,1036,27,"default"],[553,37,1036,27],[553,38,1036,28,"getPermissionsAsync"],[553,57,1036,47],[553,58,1036,48],[553,59,1036,49],[554,2,1037,0],[556,2,1039,0],[557,0,1040,0],[558,0,1041,0],[559,0,1042,0],[560,2,1043,7],[560,17,1043,22,"requestPermissionsAsync"],[560,40,1043,45,"requestPermissionsAsync"],[560,41,1043,45],[560,43,1043,85],[561,4,1044,2],[561,8,1044,6],[561,9,1044,7,"ExpoContacts"],[561,21,1044,19],[561,22,1044,19,"default"],[561,29,1044,19],[561,30,1044,20,"requestPermissionsAsync"],[561,53,1044,43],[561,55,1044,45],[562,6,1045,4],[562,12,1045,10],[562,16,1045,14,"UnavailabilityError"],[562,32,1045,33],[562,33,1045,33,"UnavailabilityError"],[562,52,1045,33],[562,53,1045,34],[562,63,1045,44],[562,65,1045,46],[562,90,1045,71],[562,91,1045,72],[563,4,1046,2],[564,4,1048,2],[564,11,1048,9],[564,17,1048,15,"ExpoContacts"],[564,29,1048,27],[564,30,1048,27,"default"],[564,37,1048,27],[564,38,1048,28,"requestPermissionsAsync"],[564,61,1048,51],[564,62,1048,52],[564,63,1048,53],[565,2,1049,0],[567,2,1051,0],[568,0,1052,0],[569,0,1053,0],[570,0,1054,0],[571,0,1055,0],[572,0,1056,0],[573,0,1057,0],[574,2,1058,7],[574,17,1058,22,"presentAccessPickerAsync"],[574,41,1058,46,"presentAccessPickerAsync"],[574,42,1058,46],[574,44,1058,68],[575,4,1059,2],[575,11,1059,9],[575,17,1059,15,"ExpoContacts"],[575,29,1059,27],[575,30,1059,27,"default"],[575,37,1059,27],[575,38,1059,28,"presentAccessPickerAsync"],[575,62,1059,52],[575,63,1059,53],[575,64,1059,54],[576,2,1060,0],[578,2,1062,0],[579,0,1063,0],[580,0,1064,0],[581,0,1065,0],[582,0,1066,0],[583,0,1067,0],[584,0,1068,0],[585,0,1069,0],[586,0,1070,0],[587,0,1071,0],[588,0,1072,0],[589,0,1073,0],[590,0,1074,0],[591,0,1075,0],[592,0,1076,0],[593,0,1077,0],[594,0,1078,0],[595,0,1079,0],[596,0,1080,0],[597,0,1081,0],[598,0,1082,0],[599,0,1083,0],[600,0,1084,0],[601,0,1085,0],[602,0,1086,0],[603,0,1087,0],[604,0,1088,0],[605,0,1089,0],[606,0,1090,0],[607,2,1091,7],[607,11,1091,16,"addContactsChangeListener"],[607,36,1091,41,"addContactsChangeListener"],[607,37,1091,42,"listener"],[607,45,1091,62],[607,47,1091,83],[608,4,1092,2],[608,8,1092,6],[608,9,1092,7,"ExpoContacts"],[608,21,1092,19],[608,22,1092,19,"default"],[608,29,1092,19],[608,30,1092,20,"addListener"],[608,41,1092,31],[608,43,1092,33],[609,6,1093,4],[609,12,1093,10],[609,16,1093,14,"UnavailabilityError"],[609,32,1093,33],[609,33,1093,33,"UnavailabilityError"],[609,52,1093,33],[609,53,1093,34],[609,63,1093,44],[609,65,1093,46],[609,91,1093,72],[609,92,1093,73],[610,4,1094,2],[611,4,1096,2],[611,10,1096,8,"eventSubscription"],[611,27,1096,25],[611,30,1096,28,"ExpoContacts"],[611,42,1096,40],[611,43,1096,40,"default"],[611,50,1096,40],[611,51,1096,41,"addListener"],[611,62,1096,52],[611,63,1096,53,"onContactsChangeEventName"],[611,88,1096,78],[611,90,1096,80,"listener"],[611,98,1096,88],[611,99,1096,89],[612,4,1098,2],[612,11,1098,9],[613,6,1099,4,"remove"],[613,12,1099,10],[613,14,1099,12,"remove"],[613,15,1099,12],[613,20,1099,18],[614,8,1100,6,"eventSubscription"],[614,25,1100,23],[614,27,1100,25,"remove"],[614,33,1100,31],[614,34,1100,32],[614,35,1100,33],[615,6,1101,4],[616,4,1102,2],[616,5,1102,3],[617,2,1103,0],[619,2,1105,0],[620,0,1106,0],[621,0,1107,0],[622,2,1105,0],[622,6,1108,12,"Fields"],[622,12,1108,18],[622,38,1108,12,"Fields"],[622,44,1108,18],[623,4,1108,12,"Fields"],[623,10,1108,18],[624,4,1108,12,"Fields"],[624,10,1108,18],[625,4,1108,12,"Fields"],[625,10,1108,18],[626,4,1108,12,"Fields"],[626,10,1108,18],[627,4,1108,12,"Fields"],[627,10,1108,18],[628,4,1108,12,"Fields"],[628,10,1108,18],[629,4,1108,12,"Fields"],[629,10,1108,18],[630,4,1108,12,"Fields"],[630,10,1108,18],[631,4,1108,12,"Fields"],[631,10,1108,18],[632,4,1108,12,"Fields"],[632,10,1108,18],[633,4,1108,12,"Fields"],[633,10,1108,18],[634,4,1108,12,"Fields"],[634,10,1108,18],[635,4,1108,12,"Fields"],[635,10,1108,18],[636,4,1108,12,"Fields"],[636,10,1108,18],[637,4,1123,2],[638,0,1124,0],[639,0,1125,0],[640,4,1108,12,"Fields"],[640,10,1108,18],[641,4,1108,12,"Fields"],[641,10,1108,18],[642,4,1108,12,"Fields"],[642,10,1108,18],[643,4,1108,12,"Fields"],[643,10,1108,18],[644,4,1130,2],[645,0,1131,0],[646,0,1132,0],[647,4,1108,12,"Fields"],[647,10,1108,18],[648,4,1108,12,"Fields"],[648,10,1108,18],[649,4,1108,12,"Fields"],[649,10,1108,18],[650,4,1108,12,"Fields"],[650,10,1108,18],[651,4,1108,12,"Fields"],[651,10,1108,18],[652,4,1108,12,"Fields"],[652,10,1108,18],[653,4,1108,12,"Fields"],[653,10,1108,18],[654,4,1108,12,"Fields"],[654,10,1108,18],[655,4,1108,12,"Fields"],[655,10,1108,18],[656,4,1108,12,"Fields"],[656,10,1108,18],[657,4,1108,12,"Fields"],[657,10,1108,18],[658,4,1108,12,"Fields"],[658,10,1108,18],[659,4,1108,12,"Fields"],[659,10,1108,18],[660,4,1146,2],[661,0,1147,0],[662,0,1148,0],[663,4,1108,12,"Fields"],[663,10,1108,18],[664,4,1108,18],[664,11,1108,12,"Fields"],[664,17,1108,18],[665,2,1108,18],[666,2,1152,0],[667,0,1153,0],[668,0,1154,0],[669,2,1152,0],[669,6,1155,12,"CalendarFormats"],[669,21,1155,27],[669,47,1155,12,"CalendarFormats"],[669,62,1155,27],[670,4,1155,12,"CalendarFormats"],[670,19,1155,27],[671,4,1157,2],[672,0,1158,0],[673,0,1159,0],[674,4,1155,12,"CalendarFormats"],[674,19,1155,27],[675,4,1161,2],[676,0,1162,0],[677,0,1163,0],[678,4,1155,12,"CalendarFormats"],[678,19,1155,27],[679,4,1165,2],[680,0,1166,0],[681,0,1167,0],[682,4,1155,12,"CalendarFormats"],[682,19,1155,27],[683,4,1169,2],[684,0,1170,0],[685,0,1171,0],[686,4,1155,12,"CalendarFormats"],[686,19,1155,27],[687,4,1173,2],[688,0,1174,0],[689,0,1175,0],[690,4,1155,12,"CalendarFormats"],[690,19,1155,27],[691,4,1177,2],[692,0,1178,0],[693,0,1179,0],[694,4,1155,12,"CalendarFormats"],[694,19,1155,27],[695,4,1181,2],[696,0,1182,0],[697,0,1183,0],[698,4,1155,12,"CalendarFormats"],[698,19,1155,27],[699,4,1185,2],[700,0,1186,0],[701,0,1187,0],[702,4,1155,12,"CalendarFormats"],[702,19,1155,27],[703,4,1189,2],[704,0,1190,0],[705,0,1191,0],[706,4,1155,12,"CalendarFormats"],[706,19,1155,27],[707,4,1193,2],[708,0,1194,0],[709,0,1195,0],[710,4,1155,12,"CalendarFormats"],[710,19,1155,27],[711,4,1197,2],[712,0,1198,0],[713,0,1199,0],[714,4,1155,12,"CalendarFormats"],[714,19,1155,27],[715,4,1201,2],[716,0,1202,0],[717,0,1203,0],[718,4,1155,12,"CalendarFormats"],[718,19,1155,27],[719,4,1205,2],[720,0,1206,0],[721,0,1207,0],[722,4,1155,12,"CalendarFormats"],[722,19,1155,27],[723,4,1209,2],[724,0,1210,0],[725,0,1211,0],[726,4,1155,12,"CalendarFormats"],[726,19,1155,27],[727,4,1213,2],[728,0,1214,0],[729,0,1215,0],[730,4,1155,12,"CalendarFormats"],[730,19,1155,27],[731,4,1155,27],[731,11,1155,12,"CalendarFormats"],[731,26,1155,27],[732,2,1155,27],[733,2,1219,0],[734,0,1220,0],[735,0,1221,0],[736,2,1219,0],[736,6,1222,12,"ContainerTypes"],[736,20,1222,26],[736,46,1222,12,"ContainerTypes"],[736,60,1222,26],[737,4,1223,2],[738,0,1224,0],[739,0,1225,0],[740,4,1222,12,"ContainerTypes"],[740,18,1222,26],[741,4,1227,2],[742,0,1228,0],[743,0,1229,0],[744,4,1222,12,"ContainerTypes"],[744,18,1222,26],[745,4,1231,2],[746,0,1232,0],[747,0,1233,0],[748,4,1222,12,"ContainerTypes"],[748,18,1222,26],[749,4,1235,2],[750,0,1236,0],[751,0,1237,0],[752,4,1222,12,"ContainerTypes"],[752,18,1222,26],[753,4,1222,26],[753,11,1222,12,"ContainerTypes"],[753,25,1222,26],[754,2,1222,26],[755,2,1222,26],[755,6,1241,12,"SortTypes"],[755,15,1241,21],[755,41,1241,12,"SortTypes"],[755,50,1241,21],[756,4,1242,2],[757,0,1243,0],[758,0,1244,0],[759,0,1245,0],[760,4,1241,12,"SortTypes"],[760,13,1241,21],[761,4,1247,2],[762,0,1248,0],[763,0,1249,0],[764,4,1241,12,"SortTypes"],[764,13,1241,21],[765,4,1251,2],[766,0,1252,0],[767,0,1253,0],[768,4,1241,12,"SortTypes"],[768,13,1241,21],[769,4,1255,2],[770,0,1256,0],[771,0,1257,0],[772,4,1241,12,"SortTypes"],[772,13,1241,21],[773,4,1241,21],[773,11,1241,12,"SortTypes"],[773,20,1241,21],[774,2,1241,21],[775,2,1241,21],[775,6,1261,12,"ContactTypes"],[775,18,1261,24],[775,44,1261,12,"ContactTypes"],[775,56,1261,24],[776,4,1262,2],[777,0,1263,0],[778,0,1264,0],[779,4,1261,12,"ContactTypes"],[779,16,1261,24],[780,4,1266,2],[781,0,1267,0],[782,0,1268,0],[783,4,1261,12,"ContactTypes"],[783,16,1261,24],[784,4,1261,24],[784,11,1261,12,"ContactTypes"],[784,23,1261,24],[785,2,1261,24],[786,0,1261,24],[786,3]],"functionMap":{"names":["<global>","isAvailableAsync","shareContactAsync","getContactsAsync","getPagedContactsAsync","getContactByIdAsync","addContactAsync","updateContactAsync","removeContactAsync","writeContactToFileAsync","presentFormAsync","addExistingGroupToContainerAsync","createGroupAsync","updateGroupNameAsync","removeGroupAsync","addExistingContactToGroupAsync","removeContactFromGroupAsync","getGroupsAsync","presentContactPickerAsync","getDefaultContainerIdAsync","getContainersAsync","getPermissionsAsync","requestPermissionsAsync","presentAccessPickerAsync","addContactsChangeListener","remove"],"mappings":"AAA;OC+kB;CDE;OEG;CFoB;OGkB;CHK;OIE;CJa;OKe;CLsB;OMmB;CNM;OOgB;CPO;OQY;CRK;OSc;CTO;OUa;CV4B;OWiB;CXS;OYa;CZW;OaY;CbM;OcY;CdM;OegB;CfS;OgBgB;ChBS;OiBc;CjBM;OkBQ;ClBK;OmBW;CnBM;OoBc;CpBM;OqBM;CrBM;OsBM;CtBM;OuBS;CvBE;OwB+B;YCQ;KDE;CxBE"},"hasCjsExports":false},"type":"js/module"}]}