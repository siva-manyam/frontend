{"dependencies":[{"name":"./addQuarters.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"J7VZrCZ/m6TQ//8mFrNkpjNI3Vc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.subQuarters = subQuarters;\n  var _addQuartersJs = require(_dependencyMap[0], \"./addQuarters.js\");\n  /**\n   * The {@link subQuarters} function options.\n   */\n\n  /**\n   * @name subQuarters\n   * @category Quarter Helpers\n   * @summary Subtract the specified number of year quarters from the given date.\n   *\n   * @description\n   * Subtract the specified number of year quarters from the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of quarters to be subtracted.\n   * @param options - An object with options\n   *\n   * @returns The new date with the quarters subtracted\n   *\n   * @example\n   * // Subtract 3 quarters from 1 September 2014:\n   * const result = subQuarters(new Date(2014, 8, 1), 3)\n   * //=> Sun Dec 01 2013 00:00:00\n   */\n  function subQuarters(date, amount, options) {\n    return (0, _addQuartersJs.addQuarters)(date, -amount, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = subQuarters;\n});","lineCount":47,"map":[[7,2,34,0,"Object"],[7,8,34,0],[7,9,34,0,"defineProperty"],[7,23,34,0],[7,24,34,0,"exports"],[7,31,34,0],[8,4,34,0,"enumerable"],[8,14,34,0],[9,4,34,0,"get"],[9,7,34,0],[9,18,34,0,"get"],[9,19,34,0],[10,6,34,0],[10,13,34,0,"_default"],[10,21,34,0],[11,4,34,0],[12,2,34,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"subQuarters"],[13,21,29,0],[13,24,29,0,"subQuarters"],[13,35,29,0],[14,2,1,0],[14,6,1,0,"_addQuartersJs"],[14,20,1,0],[14,23,1,0,"require"],[14,30,1,0],[14,31,1,0,"_dependencyMap"],[14,45,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,2,29,7],[41,11,29,16,"subQuarters"],[41,22,29,27,"subQuarters"],[41,23,29,28,"date"],[41,27,29,32],[41,29,29,34,"amount"],[41,35,29,40],[41,37,29,42,"options"],[41,44,29,49],[41,46,29,51],[42,4,30,2],[42,11,30,9],[42,15,30,9,"addQuarters"],[42,29,30,20],[42,30,30,20,"addQuarters"],[42,41,30,20],[42,43,30,21,"date"],[42,47,30,25],[42,49,30,27],[42,50,30,28,"amount"],[42,56,30,34],[42,58,30,36,"options"],[42,65,30,43],[42,66,30,44],[43,2,31,0],[45,2,33,0],[46,2,34,0],[46,6,34,0,"_default"],[46,14,34,0],[46,17,34,15,"subQuarters"],[46,28,34,26],[47,0,34,27],[47,3]],"functionMap":{"names":["<global>","subQuarters"],"mappings":"AAA;OC4B;CDE"},"hasCjsExports":false},"type":"js/module"}]}