{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"formatDistance\", {\n    enumerable: true,\n    get: function () {\n      return formatDistance;\n    }\n  });\n  const formatDistanceLocale = {\n    lessThanXSeconds: {\n      one: \"less than a second\",\n      other: \"less than {{count}} seconds\"\n    },\n    xSeconds: {\n      one: \"1 second\",\n      other: \"{{count}} seconds\"\n    },\n    halfAMinute: \"half a minute\",\n    lessThanXMinutes: {\n      one: \"less than a minute\",\n      other: \"less than {{count}} minutes\"\n    },\n    xMinutes: {\n      one: \"1 minute\",\n      other: \"{{count}} minutes\"\n    },\n    aboutXHours: {\n      one: \"about 1 hour\",\n      other: \"about {{count}} hours\"\n    },\n    xHours: {\n      one: \"1 hour\",\n      other: \"{{count}} hours\"\n    },\n    xDays: {\n      one: \"1 day\",\n      other: \"{{count}} days\"\n    },\n    aboutXWeeks: {\n      one: \"about 1 week\",\n      other: \"about {{count}} weeks\"\n    },\n    xWeeks: {\n      one: \"1 week\",\n      other: \"{{count}} weeks\"\n    },\n    aboutXMonths: {\n      one: \"about 1 month\",\n      other: \"about {{count}} months\"\n    },\n    xMonths: {\n      one: \"1 month\",\n      other: \"{{count}} months\"\n    },\n    aboutXYears: {\n      one: \"about 1 year\",\n      other: \"about {{count}} years\"\n    },\n    xYears: {\n      one: \"1 year\",\n      other: \"{{count}} years\"\n    },\n    overXYears: {\n      one: \"over 1 year\",\n      other: \"over {{count}} years\"\n    },\n    almostXYears: {\n      one: \"almost 1 year\",\n      other: \"almost {{count}} years\"\n    }\n  };\n  const formatDistance = (token, count, options) => {\n    let result;\n    const tokenValue = formatDistanceLocale[token];\n    if (typeof tokenValue === \"string\") {\n      result = tokenValue;\n    } else if (count === 1) {\n      result = tokenValue.one;\n    } else {\n      result = tokenValue.other.replace(\"{{count}}\", count.toString());\n    }\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"in \" + result;\n      } else {\n        return result + \" ago\";\n      }\n    }\n    return result;\n  };\n});","lineCount":95,"map":[[7,2,80,0,"Object"],[7,8,80,0],[7,9,80,0,"defineProperty"],[7,23,80,0],[7,24,80,0,"exports"],[7,31,80,0],[8,4,80,0,"enumerable"],[8,14,80,0],[9,4,80,0,"get"],[9,7,80,0],[9,18,80,0,"get"],[9,19,80,0],[10,6,80,0],[10,13,80,0,"formatDistance"],[10,27,80,0],[11,4,80,0],[12,2,80,0],[13,2,1,0],[13,8,1,6,"formatDistanceLocale"],[13,28,1,26],[13,31,1,29],[14,4,2,2,"lessThanXSeconds"],[14,20,2,18],[14,22,2,20],[15,6,3,4,"one"],[15,9,3,7],[15,11,3,9],[15,31,3,29],[16,6,4,4,"other"],[16,11,4,9],[16,13,4,11],[17,4,5,2],[17,5,5,3],[18,4,7,2,"xSeconds"],[18,12,7,10],[18,14,7,12],[19,6,8,4,"one"],[19,9,8,7],[19,11,8,9],[19,21,8,19],[20,6,9,4,"other"],[20,11,9,9],[20,13,9,11],[21,4,10,2],[21,5,10,3],[22,4,12,2,"halfAMinute"],[22,15,12,13],[22,17,12,15],[22,32,12,30],[23,4,14,2,"lessThanXMinutes"],[23,20,14,18],[23,22,14,20],[24,6,15,4,"one"],[24,9,15,7],[24,11,15,9],[24,31,15,29],[25,6,16,4,"other"],[25,11,16,9],[25,13,16,11],[26,4,17,2],[26,5,17,3],[27,4,19,2,"xMinutes"],[27,12,19,10],[27,14,19,12],[28,6,20,4,"one"],[28,9,20,7],[28,11,20,9],[28,21,20,19],[29,6,21,4,"other"],[29,11,21,9],[29,13,21,11],[30,4,22,2],[30,5,22,3],[31,4,24,2,"aboutXHours"],[31,15,24,13],[31,17,24,15],[32,6,25,4,"one"],[32,9,25,7],[32,11,25,9],[32,25,25,23],[33,6,26,4,"other"],[33,11,26,9],[33,13,26,11],[34,4,27,2],[34,5,27,3],[35,4,29,2,"xHours"],[35,10,29,8],[35,12,29,10],[36,6,30,4,"one"],[36,9,30,7],[36,11,30,9],[36,19,30,17],[37,6,31,4,"other"],[37,11,31,9],[37,13,31,11],[38,4,32,2],[38,5,32,3],[39,4,34,2,"xDays"],[39,9,34,7],[39,11,34,9],[40,6,35,4,"one"],[40,9,35,7],[40,11,35,9],[40,18,35,16],[41,6,36,4,"other"],[41,11,36,9],[41,13,36,11],[42,4,37,2],[42,5,37,3],[43,4,39,2,"aboutXWeeks"],[43,15,39,13],[43,17,39,15],[44,6,40,4,"one"],[44,9,40,7],[44,11,40,9],[44,25,40,23],[45,6,41,4,"other"],[45,11,41,9],[45,13,41,11],[46,4,42,2],[46,5,42,3],[47,4,44,2,"xWeeks"],[47,10,44,8],[47,12,44,10],[48,6,45,4,"one"],[48,9,45,7],[48,11,45,9],[48,19,45,17],[49,6,46,4,"other"],[49,11,46,9],[49,13,46,11],[50,4,47,2],[50,5,47,3],[51,4,49,2,"aboutXMonths"],[51,16,49,14],[51,18,49,16],[52,6,50,4,"one"],[52,9,50,7],[52,11,50,9],[52,26,50,24],[53,6,51,4,"other"],[53,11,51,9],[53,13,51,11],[54,4,52,2],[54,5,52,3],[55,4,54,2,"xMonths"],[55,11,54,9],[55,13,54,11],[56,6,55,4,"one"],[56,9,55,7],[56,11,55,9],[56,20,55,18],[57,6,56,4,"other"],[57,11,56,9],[57,13,56,11],[58,4,57,2],[58,5,57,3],[59,4,59,2,"aboutXYears"],[59,15,59,13],[59,17,59,15],[60,6,60,4,"one"],[60,9,60,7],[60,11,60,9],[60,25,60,23],[61,6,61,4,"other"],[61,11,61,9],[61,13,61,11],[62,4,62,2],[62,5,62,3],[63,4,64,2,"xYears"],[63,10,64,8],[63,12,64,10],[64,6,65,4,"one"],[64,9,65,7],[64,11,65,9],[64,19,65,17],[65,6,66,4,"other"],[65,11,66,9],[65,13,66,11],[66,4,67,2],[66,5,67,3],[67,4,69,2,"overXYears"],[67,14,69,12],[67,16,69,14],[68,6,70,4,"one"],[68,9,70,7],[68,11,70,9],[68,24,70,22],[69,6,71,4,"other"],[69,11,71,9],[69,13,71,11],[70,4,72,2],[70,5,72,3],[71,4,74,2,"almostXYears"],[71,16,74,14],[71,18,74,16],[72,6,75,4,"one"],[72,9,75,7],[72,11,75,9],[72,26,75,24],[73,6,76,4,"other"],[73,11,76,9],[73,13,76,11],[74,4,77,2],[75,2,78,0],[75,3,78,1],[76,2,80,7],[76,8,80,13,"formatDistance"],[76,22,80,27],[76,25,80,30,"formatDistance"],[76,26,80,31,"token"],[76,31,80,36],[76,33,80,38,"count"],[76,38,80,43],[76,40,80,45,"options"],[76,47,80,52],[76,52,80,57],[77,4,81,2],[77,8,81,6,"result"],[77,14,81,12],[78,4,83,2],[78,10,83,8,"tokenValue"],[78,20,83,18],[78,23,83,21,"formatDistanceLocale"],[78,43,83,41],[78,44,83,42,"token"],[78,49,83,47],[78,50,83,48],[79,4,84,2],[79,8,84,6],[79,15,84,13,"tokenValue"],[79,25,84,23],[79,30,84,28],[79,38,84,36],[79,40,84,38],[80,6,85,4,"result"],[80,12,85,10],[80,15,85,13,"tokenValue"],[80,25,85,23],[81,4,86,2],[81,5,86,3],[81,11,86,9],[81,15,86,13,"count"],[81,20,86,18],[81,25,86,23],[81,26,86,24],[81,28,86,26],[82,6,87,4,"result"],[82,12,87,10],[82,15,87,13,"tokenValue"],[82,25,87,23],[82,26,87,24,"one"],[82,29,87,27],[83,4,88,2],[83,5,88,3],[83,11,88,9],[84,6,89,4,"result"],[84,12,89,10],[84,15,89,13,"tokenValue"],[84,25,89,23],[84,26,89,24,"other"],[84,31,89,29],[84,32,89,30,"replace"],[84,39,89,37],[84,40,89,38],[84,51,89,49],[84,53,89,51,"count"],[84,58,89,56],[84,59,89,57,"toString"],[84,67,89,65],[84,68,89,66],[84,69,89,67],[84,70,89,68],[85,4,90,2],[86,4,92,2],[86,8,92,6,"options"],[86,15,92,13],[86,17,92,15,"addSuffix"],[86,26,92,24],[86,28,92,26],[87,6,93,4],[87,10,93,8,"options"],[87,17,93,15],[87,18,93,16,"comparison"],[87,28,93,26],[87,32,93,30,"options"],[87,39,93,37],[87,40,93,38,"comparison"],[87,50,93,48],[87,53,93,51],[87,54,93,52],[87,56,93,54],[88,8,94,6],[88,15,94,13],[88,20,94,18],[88,23,94,21,"result"],[88,29,94,27],[89,6,95,4],[89,7,95,5],[89,13,95,11],[90,8,96,6],[90,15,96,13,"result"],[90,21,96,19],[90,24,96,22],[90,30,96,28],[91,6,97,4],[92,4,98,2],[93,4,100,2],[93,11,100,9,"result"],[93,17,100,15],[94,2,101,0],[94,3,101,1],[95,0,101,2],[95,3]],"functionMap":{"names":["<global>","formatDistance"],"mappings":"AAA;8BC+E;CDqB"},"hasCjsExports":false},"type":"js/module"}]}