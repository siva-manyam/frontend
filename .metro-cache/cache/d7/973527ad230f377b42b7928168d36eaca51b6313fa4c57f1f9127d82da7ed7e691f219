{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setYear = setYear;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link setYear} function options.\n   */\n\n  /**\n   * @name setYear\n   * @category Year Helpers\n   * @summary Set the year to the given date.\n   *\n   * @description\n   * Set the year to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param year - The year of the new date\n   * @param options - An object with options.\n   *\n   * @returns The new date with the year set\n   *\n   * @example\n   * // Set year 2013 to 1 September 2014:\n   * const result = setYear(new Date(2014, 8, 1), 2013)\n   * //=> Sun Sep 01 2013 00:00:00\n   */\n  function setYear(date, year, options) {\n    const date_ = (0, _toDateJs.toDate)(date, options?.in);\n\n    // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n    if (isNaN(+date_)) return (0, _constructFromJs.constructFrom)(options?.in || date, NaN);\n    date_.setFullYear(year);\n    return date_;\n  }\n\n  // Fallback for modularized imports:\n  var _default = setYear;\n});","lineCount":53,"map":[[7,2,41,0,"Object"],[7,8,41,0],[7,9,41,0,"defineProperty"],[7,23,41,0],[7,24,41,0,"exports"],[7,31,41,0],[8,4,41,0,"enumerable"],[8,14,41,0],[9,4,41,0,"get"],[9,7,41,0],[9,18,41,0,"get"],[9,19,41,0],[10,6,41,0],[10,13,41,0,"_default"],[10,21,41,0],[11,4,41,0],[12,2,41,0],[13,2,30,0,"exports"],[13,9,30,0],[13,10,30,0,"setYear"],[13,17,30,0],[13,20,30,0,"setYear"],[13,27,30,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,2,30,7],[42,11,30,16,"setYear"],[42,18,30,23,"setYear"],[42,19,30,24,"date"],[42,23,30,28],[42,25,30,30,"year"],[42,29,30,34],[42,31,30,36,"options"],[42,38,30,43],[42,40,30,45],[43,4,31,2],[43,10,31,8,"date_"],[43,15,31,13],[43,18,31,16],[43,22,31,16,"toDate"],[43,31,31,22],[43,32,31,22,"toDate"],[43,38,31,22],[43,40,31,23,"date"],[43,44,31,27],[43,46,31,29,"options"],[43,53,31,36],[43,55,31,38,"in"],[43,57,31,40],[43,58,31,41],[45,4,33,2],[46,4,34,2],[46,8,34,6,"isNaN"],[46,13,34,11],[46,14,34,12],[46,15,34,13,"date_"],[46,20,34,18],[46,21,34,19],[46,23,34,21],[46,30,34,28],[46,34,34,28,"constructFrom"],[46,50,34,41],[46,51,34,41,"constructFrom"],[46,64,34,41],[46,66,34,42,"options"],[46,73,34,49],[46,75,34,51,"in"],[46,77,34,53],[46,81,34,57,"date"],[46,85,34,61],[46,87,34,63,"NaN"],[46,90,34,66],[46,91,34,67],[47,4,36,2,"date_"],[47,9,36,7],[47,10,36,8,"setFullYear"],[47,21,36,19],[47,22,36,20,"year"],[47,26,36,24],[47,27,36,25],[48,4,37,2],[48,11,37,9,"date_"],[48,16,37,14],[49,2,38,0],[51,2,40,0],[52,2,41,0],[52,6,41,0,"_default"],[52,14,41,0],[52,17,41,15,"setYear"],[52,24,41,22],[53,0,41,23],[53,3]],"functionMap":{"names":["<global>","setYear"],"mappings":"AAA;OC6B;CDQ"},"hasCjsExports":false},"type":"js/module"}]}