{"dependencies":[{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./startOfDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":45,"index":104}}],"key":"3NuIZRZJAEuB843QJJHZ3hLdJbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.isSameDay = isSameDay;\n  var _libNormalizeDatesJs = require(_dependencyMap[0], \"./_lib/normalizeDates.js\");\n  var _startOfDayJs = require(_dependencyMap[1], \"./startOfDay.js\");\n  /**\n   * The {@link isSameDay} function options.\n   */\n\n  /**\n   * @name isSameDay\n   * @category Day Helpers\n   * @summary Are the given dates in the same day (and year and month)?\n   *\n   * @description\n   * Are the given dates in the same day (and year and month)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same day (and year and month)\n   *\n   * @example\n   * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n   * //=> true\n   *\n   * @example\n   * // Are 4 September and 4 October in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n   * //=> false\n   *\n   * @example\n   * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n   * //=> false\n   */\n  function isSameDay(laterDate, earlierDate, options) {\n    const [dateLeft_, dateRight_] = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, laterDate, earlierDate);\n    return +(0, _startOfDayJs.startOfDay)(dateLeft_) === +(0, _startOfDayJs.startOfDay)(dateRight_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = isSameDay;\n});","lineCount":56,"map":[[7,2,47,0,"Object"],[7,8,47,0],[7,9,47,0,"defineProperty"],[7,23,47,0],[7,24,47,0,"exports"],[7,31,47,0],[8,4,47,0,"enumerable"],[8,14,47,0],[9,4,47,0,"get"],[9,7,47,0],[9,18,47,0,"get"],[9,19,47,0],[10,6,47,0],[10,13,47,0,"_default"],[10,21,47,0],[11,4,47,0],[12,2,47,0],[13,2,37,0,"exports"],[13,9,37,0],[13,10,37,0,"isSameDay"],[13,19,37,0],[13,22,37,0,"isSameDay"],[13,31,37,0],[14,2,1,0],[14,6,1,0,"_libNormalizeDatesJs"],[14,26,1,0],[14,29,1,0,"require"],[14,36,1,0],[14,37,1,0,"_dependencyMap"],[14,51,1,0],[15,2,2,0],[15,6,2,0,"_startOfDayJs"],[15,19,2,0],[15,22,2,0,"require"],[15,29,2,0],[15,30,2,0,"_dependencyMap"],[15,44,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,2,37,7],[49,11,37,16,"isSameDay"],[49,20,37,25,"isSameDay"],[49,21,37,26,"laterDate"],[49,30,37,35],[49,32,37,37,"earlierDate"],[49,43,37,48],[49,45,37,50,"options"],[49,52,37,57],[49,54,37,59],[50,4,38,2],[50,10,38,8],[50,11,38,9,"dateLeft_"],[50,20,38,18],[50,22,38,20,"dateRight_"],[50,32,38,30],[50,33,38,31],[50,36,38,34],[50,40,38,34,"normalizeDates"],[50,60,38,48],[50,61,38,48,"normalizeDates"],[50,75,38,48],[50,77,39,4,"options"],[50,84,39,11],[50,86,39,13,"in"],[50,88,39,15],[50,90,40,4,"laterDate"],[50,99,40,13],[50,101,41,4,"earlierDate"],[50,112,42,2],[50,113,42,3],[51,4,43,2],[51,11,43,9],[51,12,43,10],[51,16,43,10,"startOfDay"],[51,29,43,20],[51,30,43,20,"startOfDay"],[51,40,43,20],[51,42,43,21,"dateLeft_"],[51,51,43,30],[51,52,43,31],[51,57,43,36],[51,58,43,37],[51,62,43,37,"startOfDay"],[51,75,43,47],[51,76,43,47,"startOfDay"],[51,86,43,47],[51,88,43,48,"dateRight_"],[51,98,43,58],[51,99,43,59],[52,2,44,0],[54,2,46,0],[55,2,47,0],[55,6,47,0,"_default"],[55,14,47,0],[55,17,47,15,"isSameDay"],[55,26,47,24],[56,0,47,25],[56,3]],"functionMap":{"names":["<global>","isSameDay"],"mappings":"AAA;OCoC;CDO"},"hasCjsExports":false},"type":"js/module"}]}