{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.buildLocalizeFn = buildLocalizeFn;\n  /**\n   * The localize function argument callback which allows to convert raw value to\n   * the actual type.\n   *\n   * @param value - The value to convert\n   *\n   * @returns The converted value\n   */\n\n  /**\n   * The map of localized values for each width.\n   */\n\n  /**\n   * The index type of the locale unit value. It types conversion of units of\n   * values that don't start at 0 (i.e. quarters).\n   */\n\n  /**\n   * Converts the unit value to the tuple of values.\n   */\n\n  /**\n   * The tuple of localized era values. The first element represents BC,\n   * the second element represents AD.\n   */\n\n  /**\n   * The tuple of localized quarter values. The first element represents Q1.\n   */\n\n  /**\n   * The tuple of localized day values. The first element represents Sunday.\n   */\n\n  /**\n   * The tuple of localized month values. The first element represents January.\n   */\n\n  function buildLocalizeFn(args) {\n    return (value, options) => {\n      const context = options?.context ? String(options.context) : \"standalone\";\n      let valuesArray;\n      if (context === \"formatting\" && args.formattingValues) {\n        const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n        const width = options?.width ? String(options.width) : defaultWidth;\n        valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n      } else {\n        const defaultWidth = args.defaultWidth;\n        const width = options?.width ? String(options.width) : args.defaultWidth;\n        valuesArray = args.values[width] || args.values[defaultWidth];\n      }\n      const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n      // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n      return valuesArray[index];\n    };\n  }\n});","lineCount":66,"map":[[7,2,40,0,"exports"],[7,9,40,0],[7,10,40,0,"buildLocalizeFn"],[7,25,40,0],[7,28,40,0,"buildLocalizeFn"],[7,43,40,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[17,2,10,0],[18,0,11,0],[19,0,12,0],[21,2,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[26,2,19,0],[27,0,20,0],[28,0,21,0],[30,2,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[35,2,28,0],[36,0,29,0],[37,0,30,0],[39,2,32,0],[40,0,33,0],[41,0,34,0],[43,2,36,0],[44,0,37,0],[45,0,38,0],[47,2,40,7],[47,11,40,16,"buildLocalizeFn"],[47,26,40,31,"buildLocalizeFn"],[47,27,40,32,"args"],[47,31,40,36],[47,33,40,38],[48,4,41,2],[48,11,41,9],[48,12,41,10,"value"],[48,17,41,15],[48,19,41,17,"options"],[48,26,41,24],[48,31,41,29],[49,6,42,4],[49,12,42,10,"context"],[49,19,42,17],[49,22,42,20,"options"],[49,29,42,27],[49,31,42,29,"context"],[49,38,42,36],[49,41,42,39,"String"],[49,47,42,45],[49,48,42,46,"options"],[49,55,42,53],[49,56,42,54,"context"],[49,63,42,61],[49,64,42,62],[49,67,42,65],[49,79,42,77],[50,6,44,4],[50,10,44,8,"valuesArray"],[50,21,44,19],[51,6,45,4],[51,10,45,8,"context"],[51,17,45,15],[51,22,45,20],[51,34,45,32],[51,38,45,36,"args"],[51,42,45,40],[51,43,45,41,"formattingValues"],[51,59,45,57],[51,61,45,59],[52,8,46,6],[52,14,46,12,"defaultWidth"],[52,26,46,24],[52,29,46,27,"args"],[52,33,46,31],[52,34,46,32,"defaultFormattingWidth"],[52,56,46,54],[52,60,46,58,"args"],[52,64,46,62],[52,65,46,63,"defaultWidth"],[52,77,46,75],[53,8,47,6],[53,14,47,12,"width"],[53,19,47,17],[53,22,47,20,"options"],[53,29,47,27],[53,31,47,29,"width"],[53,36,47,34],[53,39,47,37,"String"],[53,45,47,43],[53,46,47,44,"options"],[53,53,47,51],[53,54,47,52,"width"],[53,59,47,57],[53,60,47,58],[53,63,47,61,"defaultWidth"],[53,75,47,73],[54,8,49,6,"valuesArray"],[54,19,49,17],[54,22,50,8,"args"],[54,26,50,12],[54,27,50,13,"formattingValues"],[54,43,50,29],[54,44,50,30,"width"],[54,49,50,35],[54,50,50,36],[54,54,50,40,"args"],[54,58,50,44],[54,59,50,45,"formattingValues"],[54,75,50,61],[54,76,50,62,"defaultWidth"],[54,88,50,74],[54,89,50,75],[55,6,51,4],[55,7,51,5],[55,13,51,11],[56,8,52,6],[56,14,52,12,"defaultWidth"],[56,26,52,24],[56,29,52,27,"args"],[56,33,52,31],[56,34,52,32,"defaultWidth"],[56,46,52,44],[57,8,53,6],[57,14,53,12,"width"],[57,19,53,17],[57,22,53,20,"options"],[57,29,53,27],[57,31,53,29,"width"],[57,36,53,34],[57,39,53,37,"String"],[57,45,53,43],[57,46,53,44,"options"],[57,53,53,51],[57,54,53,52,"width"],[57,59,53,57],[57,60,53,58],[57,63,53,61,"args"],[57,67,53,65],[57,68,53,66,"defaultWidth"],[57,80,53,78],[58,8,55,6,"valuesArray"],[58,19,55,17],[58,22,55,20,"args"],[58,26,55,24],[58,27,55,25,"values"],[58,33,55,31],[58,34,55,32,"width"],[58,39,55,37],[58,40,55,38],[58,44,55,42,"args"],[58,48,55,46],[58,49,55,47,"values"],[58,55,55,53],[58,56,55,54,"defaultWidth"],[58,68,55,66],[58,69,55,67],[59,6,56,4],[60,6,57,4],[60,12,57,10,"index"],[60,17,57,15],[60,20,57,18,"args"],[60,24,57,22],[60,25,57,23,"argumentCallback"],[60,41,57,39],[60,44,57,42,"args"],[60,48,57,46],[60,49,57,47,"argumentCallback"],[60,65,57,63],[60,66,57,64,"value"],[60,71,57,69],[60,72,57,70],[60,75,57,73,"value"],[60,80,57,78],[62,6,59,4],[63,6,60,4],[63,13,60,11,"valuesArray"],[63,24,60,22],[63,25,60,23,"index"],[63,30,60,28],[63,31,60,29],[64,4,61,2],[64,5,61,3],[65,2,62,0],[66,0,62,1],[66,3]],"functionMap":{"names":["<global>","buildLocalizeFn","<anonymous>"],"mappings":"AAA;OCuC;SCC;GDoB;CDC"},"hasCjsExports":false},"type":"js/module"}]}