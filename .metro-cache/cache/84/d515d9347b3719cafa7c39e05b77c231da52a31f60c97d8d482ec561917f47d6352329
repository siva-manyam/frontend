{"dependencies":[{"name":"./addSeconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"IyjCwXOsgbQeOoxTTg7jO+20LtA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.subSeconds = subSeconds;\n  var _addSecondsJs = require(_dependencyMap[0], \"./addSeconds.js\");\n  /**\n   * The {@link subSeconds} function options.\n   */\n\n  /**\n   * Subtract the specified number of seconds from the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of seconds to be subtracted.\n   * @param options - The options\n   *\n   * @returns The new date with the seconds subtracted\n   *\n   * @example\n   * // Subtract 30 seconds from 10 July 2014 12:45:00:\n   * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n   * //=> Thu Jul 10 2014 12:44:30\n   */\n  function subSeconds(date, amount, options) {\n    return (0, _addSecondsJs.addSeconds)(date, -amount, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = subSeconds;\n});","lineCount":42,"map":[[7,2,29,0,"Object"],[7,8,29,0],[7,9,29,0,"defineProperty"],[7,23,29,0],[7,24,29,0,"exports"],[7,31,29,0],[8,4,29,0,"enumerable"],[8,14,29,0],[9,4,29,0,"get"],[9,7,29,0],[9,18,29,0,"get"],[9,19,29,0],[10,6,29,0],[10,13,29,0,"_default"],[10,21,29,0],[11,4,29,0],[12,2,29,0],[13,2,24,0,"exports"],[13,9,24,0],[13,10,24,0,"subSeconds"],[13,20,24,0],[13,23,24,0,"subSeconds"],[13,33,24,0],[14,2,1,0],[14,6,1,0,"_addSecondsJs"],[14,19,1,0],[14,22,1,0,"require"],[14,29,1,0],[14,30,1,0,"_dependencyMap"],[14,44,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,2,24,7],[36,11,24,16,"subSeconds"],[36,21,24,26,"subSeconds"],[36,22,24,27,"date"],[36,26,24,31],[36,28,24,33,"amount"],[36,34,24,39],[36,36,24,41,"options"],[36,43,24,48],[36,45,24,50],[37,4,25,2],[37,11,25,9],[37,15,25,9,"addSeconds"],[37,28,25,19],[37,29,25,19,"addSeconds"],[37,39,25,19],[37,41,25,20,"date"],[37,45,25,24],[37,47,25,26],[37,48,25,27,"amount"],[37,54,25,33],[37,56,25,35,"options"],[37,63,25,42],[37,64,25,43],[38,2,26,0],[40,2,28,0],[41,2,29,0],[41,6,29,0,"_default"],[41,14,29,0],[41,17,29,15,"subSeconds"],[41,27,29,25],[42,0,29,26],[42,3]],"functionMap":{"names":["<global>","subSeconds"],"mappings":"AAA;OCuB;CDE"},"hasCjsExports":false},"type":"js/module"}]}