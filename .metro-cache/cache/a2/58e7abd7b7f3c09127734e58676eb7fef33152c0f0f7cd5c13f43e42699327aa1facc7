{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.toDate = toDate;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  /**\n   * @name toDate\n   * @category Common Helpers\n   * @summary Convert the given argument to an instance of Date.\n   *\n   * @description\n   * Convert the given argument to an instance of Date.\n   *\n   * If the argument is an instance of Date, the function returns its clone.\n   *\n   * If the argument is a number, it is treated as a timestamp.\n   *\n   * If the argument is none of the above, the function returns Invalid Date.\n   *\n   * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n   * enabling to transfer extra properties from the reference date to the new date.\n   * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n   * that accept a time zone as a constructor argument.\n   *\n   * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param argument - The value to convert\n   *\n   * @returns The parsed date in the local time zone\n   *\n   * @example\n   * // Clone the date:\n   * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n   * //=> Tue Feb 11 2014 11:30:30\n   *\n   * @example\n   * // Convert the timestamp to date:\n   * const result = toDate(1392098430000)\n   * //=> Tue Feb 11 2014 11:30:30\n   */\n  function toDate(argument, context) {\n    // [TODO] Get rid of `toDate` or `constructFrom`?\n    return (0, _constructFromJs.constructFrom)(context || argument, argument);\n  }\n\n  // Fallback for modularized imports:\n  var _default = toDate;\n});","lineCount":60,"map":[[7,2,47,0,"Object"],[7,8,47,0],[7,9,47,0,"defineProperty"],[7,23,47,0],[7,24,47,0,"exports"],[7,31,47,0],[8,4,47,0,"enumerable"],[8,14,47,0],[9,4,47,0,"get"],[9,7,47,0],[9,18,47,0,"get"],[9,19,47,0],[10,6,47,0],[10,13,47,0,"_default"],[10,21,47,0],[11,4,47,0],[12,2,47,0],[13,2,41,0,"exports"],[13,9,41,0],[13,10,41,0,"toDate"],[13,16,41,0],[13,19,41,0,"toDate"],[13,25,41,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,2,41,7],[53,11,41,16,"toDate"],[53,17,41,22,"toDate"],[53,18,41,23,"argument"],[53,26,41,31],[53,28,41,33,"context"],[53,35,41,40],[53,37,41,42],[54,4,42,2],[55,4,43,2],[55,11,43,9],[55,15,43,9,"constructFrom"],[55,31,43,22],[55,32,43,22,"constructFrom"],[55,45,43,22],[55,47,43,23,"context"],[55,54,43,30],[55,58,43,34,"argument"],[55,66,43,42],[55,68,43,44,"argument"],[55,76,43,52],[55,77,43,53],[56,2,44,0],[58,2,46,0],[59,2,47,0],[59,6,47,0,"_default"],[59,14,47,0],[59,17,47,15,"toDate"],[59,23,47,21],[60,0,47,22],[60,3]],"functionMap":{"names":["<global>","toDate"],"mappings":"AAA;OCwC;CDG"},"hasCjsExports":false},"type":"js/module"}]}