{"dependencies":[{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"nr19Y2AxEUlGdF0WaI8ULOMy6Cc=","exportNames":["*"],"imports":1}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":39,"index":100}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":37,"index":138}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.formatRFC7231 = formatRFC7231;\n  var _libAddLeadingZerosJs = require(_dependencyMap[0], \"./_lib/addLeadingZeros.js\");\n  var _isValidJs = require(_dependencyMap[1], \"./isValid.js\");\n  var _toDateJs = require(_dependencyMap[2], \"./toDate.js\");\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  /**\n   * @name formatRFC7231\n   * @category Common Helpers\n   * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n   *\n   * @description\n   * Return the formatted date string in RFC 7231 format.\n   * The result will always be in UTC timezone.\n   *\n   * @param date - The original date\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 7231 format:\n   * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n   */\n  function formatRFC7231(date) {\n    const _date = (0, _toDateJs.toDate)(date);\n    if (!(0, _isValidJs.isValid)(_date)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    const dayName = days[_date.getUTCDay()];\n    const dayOfMonth = (0, _libAddLeadingZerosJs.addLeadingZeros)(_date.getUTCDate(), 2);\n    const monthName = months[_date.getUTCMonth()];\n    const year = _date.getUTCFullYear();\n    const hour = (0, _libAddLeadingZerosJs.addLeadingZeros)(_date.getUTCHours(), 2);\n    const minute = (0, _libAddLeadingZerosJs.addLeadingZeros)(_date.getUTCMinutes(), 2);\n    const second = (0, _libAddLeadingZerosJs.addLeadingZeros)(_date.getUTCSeconds(), 2);\n\n    // Result variables.\n    return `${dayName}, ${dayOfMonth} ${monthName} ${year} ${hour}:${minute}:${second} GMT`;\n  }\n\n  // Fallback for modularized imports:\n  var _default = formatRFC7231;\n});","lineCount":59,"map":[[7,2,63,0,"Object"],[7,8,63,0],[7,9,63,0,"defineProperty"],[7,23,63,0],[7,24,63,0,"exports"],[7,31,63,0],[8,4,63,0,"enumerable"],[8,14,63,0],[9,4,63,0,"get"],[9,7,63,0],[9,18,63,0,"get"],[9,19,63,0],[10,6,63,0],[10,13,63,0,"_default"],[10,21,63,0],[11,4,63,0],[12,2,63,0],[13,2,42,0,"exports"],[13,9,42,0],[13,10,42,0,"formatRFC7231"],[13,23,42,0],[13,26,42,0,"formatRFC7231"],[13,39,42,0],[14,2,1,0],[14,6,1,0,"_libAddLeadingZerosJs"],[14,27,1,0],[14,30,1,0,"require"],[14,37,1,0],[14,38,1,0,"_dependencyMap"],[14,52,1,0],[15,2,2,0],[15,6,2,0,"_isValidJs"],[15,16,2,0],[15,19,2,0,"require"],[15,26,2,0],[15,27,2,0,"_dependencyMap"],[15,41,2,0],[16,2,3,0],[16,6,3,0,"_toDateJs"],[16,15,3,0],[16,18,3,0,"require"],[16,25,3,0],[16,26,3,0,"_dependencyMap"],[16,40,3,0],[17,2,5,0],[17,8,5,6,"days"],[17,12,5,10],[17,15,5,13],[17,16,5,14],[17,21,5,19],[17,23,5,21],[17,28,5,26],[17,30,5,28],[17,35,5,33],[17,37,5,35],[17,42,5,40],[17,44,5,42],[17,49,5,47],[17,51,5,49],[17,56,5,54],[17,58,5,56],[17,63,5,61],[17,64,5,62],[18,2,7,0],[18,8,7,6,"months"],[18,14,7,12],[18,17,7,15],[18,18,8,2],[18,23,8,7],[18,25,9,2],[18,30,9,7],[18,32,10,2],[18,37,10,7],[18,39,11,2],[18,44,11,7],[18,46,12,2],[18,51,12,7],[18,53,13,2],[18,58,13,7],[18,60,14,2],[18,65,14,7],[18,67,15,2],[18,72,15,7],[18,74,16,2],[18,79,16,7],[18,81,17,2],[18,86,17,7],[18,88,18,2],[18,93,18,7],[18,95,19,2],[18,100,19,7],[18,101,20,1],[20,2,22,0],[21,0,23,0],[22,0,24,0],[23,0,25,0],[24,0,26,0],[25,0,27,0],[26,0,28,0],[27,0,29,0],[28,0,30,0],[29,0,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,0,37,0],[36,0,38,0],[37,0,39,0],[38,0,40,0],[39,0,41,0],[40,2,42,7],[40,11,42,16,"formatRFC7231"],[40,24,42,29,"formatRFC7231"],[40,25,42,30,"date"],[40,29,42,34],[40,31,42,36],[41,4,43,2],[41,10,43,8,"_date"],[41,15,43,13],[41,18,43,16],[41,22,43,16,"toDate"],[41,31,43,22],[41,32,43,22,"toDate"],[41,38,43,22],[41,40,43,23,"date"],[41,44,43,27],[41,45,43,28],[42,4,45,2],[42,8,45,6],[42,9,45,7],[42,13,45,7,"isValid"],[42,23,45,14],[42,24,45,14,"isValid"],[42,31,45,14],[42,33,45,15,"_date"],[42,38,45,20],[42,39,45,21],[42,41,45,23],[43,6,46,4],[43,12,46,10],[43,16,46,14,"RangeError"],[43,26,46,24],[43,27,46,25],[43,47,46,45],[43,48,46,46],[44,4,47,2],[45,4,49,2],[45,10,49,8,"dayName"],[45,17,49,15],[45,20,49,18,"days"],[45,24,49,22],[45,25,49,23,"_date"],[45,30,49,28],[45,31,49,29,"getUTCDay"],[45,40,49,38],[45,41,49,39],[45,42,49,40],[45,43,49,41],[46,4,50,2],[46,10,50,8,"dayOfMonth"],[46,20,50,18],[46,23,50,21],[46,27,50,21,"addLeadingZeros"],[46,48,50,36],[46,49,50,36,"addLeadingZeros"],[46,64,50,36],[46,66,50,37,"_date"],[46,71,50,42],[46,72,50,43,"getUTCDate"],[46,82,50,53],[46,83,50,54],[46,84,50,55],[46,86,50,57],[46,87,50,58],[46,88,50,59],[47,4,51,2],[47,10,51,8,"monthName"],[47,19,51,17],[47,22,51,20,"months"],[47,28,51,26],[47,29,51,27,"_date"],[47,34,51,32],[47,35,51,33,"getUTCMonth"],[47,46,51,44],[47,47,51,45],[47,48,51,46],[47,49,51,47],[48,4,52,2],[48,10,52,8,"year"],[48,14,52,12],[48,17,52,15,"_date"],[48,22,52,20],[48,23,52,21,"getUTCFullYear"],[48,37,52,35],[48,38,52,36],[48,39,52,37],[49,4,54,2],[49,10,54,8,"hour"],[49,14,54,12],[49,17,54,15],[49,21,54,15,"addLeadingZeros"],[49,42,54,30],[49,43,54,30,"addLeadingZeros"],[49,58,54,30],[49,60,54,31,"_date"],[49,65,54,36],[49,66,54,37,"getUTCHours"],[49,77,54,48],[49,78,54,49],[49,79,54,50],[49,81,54,52],[49,82,54,53],[49,83,54,54],[50,4,55,2],[50,10,55,8,"minute"],[50,16,55,14],[50,19,55,17],[50,23,55,17,"addLeadingZeros"],[50,44,55,32],[50,45,55,32,"addLeadingZeros"],[50,60,55,32],[50,62,55,33,"_date"],[50,67,55,38],[50,68,55,39,"getUTCMinutes"],[50,81,55,52],[50,82,55,53],[50,83,55,54],[50,85,55,56],[50,86,55,57],[50,87,55,58],[51,4,56,2],[51,10,56,8,"second"],[51,16,56,14],[51,19,56,17],[51,23,56,17,"addLeadingZeros"],[51,44,56,32],[51,45,56,32,"addLeadingZeros"],[51,60,56,32],[51,62,56,33,"_date"],[51,67,56,38],[51,68,56,39,"getUTCSeconds"],[51,81,56,52],[51,82,56,53],[51,83,56,54],[51,85,56,56],[51,86,56,57],[51,87,56,58],[53,4,58,2],[54,4,59,2],[54,11,59,9],[54,14,59,12,"dayName"],[54,21,59,19],[54,26,59,24,"dayOfMonth"],[54,36,59,34],[54,40,59,38,"monthName"],[54,49,59,47],[54,53,59,51,"year"],[54,57,59,55],[54,61,59,59,"hour"],[54,65,59,63],[54,69,59,67,"minute"],[54,75,59,73],[54,79,59,77,"second"],[54,85,59,83],[54,91,59,89],[55,2,60,0],[57,2,62,0],[58,2,63,0],[58,6,63,0,"_default"],[58,14,63,0],[58,17,63,15,"formatRFC7231"],[58,30,63,28],[59,0,63,29],[59,3]],"functionMap":{"names":["<global>","formatRFC7231"],"mappings":"AAA;OCyC;CDkB"},"hasCjsExports":false},"type":"js/module"}]}