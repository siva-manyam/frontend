{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./getDaysInMonth.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":53,"index":105}}],"key":"iHu7AtGjFnxScJnDskrahyZmhdg=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":106},"end":{"line":3,"column":37,"index":143}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setMonth = setMonth;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _getDaysInMonthJs = require(_dependencyMap[1], \"./getDaysInMonth.js\");\n  var _toDateJs = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link setMonth} function options.\n   */\n\n  /**\n   * @name setMonth\n   * @category Month Helpers\n   * @summary Set the month to the given date.\n   *\n   * @description\n   * Set the month to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param month - The month index to set (0-11)\n   * @param options - The options\n   *\n   * @returns The new date with the month set\n   *\n   * @example\n   * // Set February to 1 September 2014:\n   * const result = setMonth(new Date(2014, 8, 1), 1)\n   * //=> Sat Feb 01 2014 00:00:00\n   */\n  function setMonth(date, month, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    const year = _date.getFullYear();\n    const day = _date.getDate();\n    const midMonth = (0, _constructFromJs.constructFrom)(options?.in || date, 0);\n    midMonth.setFullYear(year, month, 15);\n    midMonth.setHours(0, 0, 0, 0);\n    const daysInMonth = (0, _getDaysInMonthJs.getDaysInMonth)(midMonth);\n\n    // Set the earlier date, allows to wrap Jan 31 to Feb 28\n    _date.setMonth(month, Math.min(day, daysInMonth));\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = setMonth;\n});","lineCount":59,"map":[[7,2,47,0,"Object"],[7,8,47,0],[7,9,47,0,"defineProperty"],[7,23,47,0],[7,24,47,0,"exports"],[7,31,47,0],[8,4,47,0,"enumerable"],[8,14,47,0],[9,4,47,0,"get"],[9,7,47,0],[9,18,47,0,"get"],[9,19,47,0],[10,6,47,0],[10,13,47,0,"_default"],[10,21,47,0],[11,4,47,0],[12,2,47,0],[13,2,31,0,"exports"],[13,9,31,0],[13,10,31,0,"setMonth"],[13,18,31,0],[13,21,31,0,"setMonth"],[13,29,31,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_getDaysInMonthJs"],[15,23,2,0],[15,26,2,0,"require"],[15,33,2,0],[15,34,2,0,"_dependencyMap"],[15,48,2,0],[16,2,3,0],[16,6,3,0,"_toDateJs"],[16,15,3,0],[16,18,3,0,"require"],[16,25,3,0],[16,26,3,0,"_dependencyMap"],[16,40,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,2,31,7],[43,11,31,16,"setMonth"],[43,19,31,24,"setMonth"],[43,20,31,25,"date"],[43,24,31,29],[43,26,31,31,"month"],[43,31,31,36],[43,33,31,38,"options"],[43,40,31,45],[43,42,31,47],[44,4,32,2],[44,10,32,8,"_date"],[44,15,32,13],[44,18,32,16],[44,22,32,16,"toDate"],[44,31,32,22],[44,32,32,22,"toDate"],[44,38,32,22],[44,40,32,23,"date"],[44,44,32,27],[44,46,32,29,"options"],[44,53,32,36],[44,55,32,38,"in"],[44,57,32,40],[44,58,32,41],[45,4,33,2],[45,10,33,8,"year"],[45,14,33,12],[45,17,33,15,"_date"],[45,22,33,20],[45,23,33,21,"getFullYear"],[45,34,33,32],[45,35,33,33],[45,36,33,34],[46,4,34,2],[46,10,34,8,"day"],[46,13,34,11],[46,16,34,14,"_date"],[46,21,34,19],[46,22,34,20,"getDate"],[46,29,34,27],[46,30,34,28],[46,31,34,29],[47,4,36,2],[47,10,36,8,"midMonth"],[47,18,36,16],[47,21,36,19],[47,25,36,19,"constructFrom"],[47,41,36,32],[47,42,36,32,"constructFrom"],[47,55,36,32],[47,57,36,33,"options"],[47,64,36,40],[47,66,36,42,"in"],[47,68,36,44],[47,72,36,48,"date"],[47,76,36,52],[47,78,36,54],[47,79,36,55],[47,80,36,56],[48,4,37,2,"midMonth"],[48,12,37,10],[48,13,37,11,"setFullYear"],[48,24,37,22],[48,25,37,23,"year"],[48,29,37,27],[48,31,37,29,"month"],[48,36,37,34],[48,38,37,36],[48,40,37,38],[48,41,37,39],[49,4,38,2,"midMonth"],[49,12,38,10],[49,13,38,11,"setHours"],[49,21,38,19],[49,22,38,20],[49,23,38,21],[49,25,38,23],[49,26,38,24],[49,28,38,26],[49,29,38,27],[49,31,38,29],[49,32,38,30],[49,33,38,31],[50,4,39,2],[50,10,39,8,"daysInMonth"],[50,21,39,19],[50,24,39,22],[50,28,39,22,"getDaysInMonth"],[50,45,39,36],[50,46,39,36,"getDaysInMonth"],[50,60,39,36],[50,62,39,37,"midMonth"],[50,70,39,45],[50,71,39,46],[52,4,41,2],[53,4,42,2,"_date"],[53,9,42,7],[53,10,42,8,"setMonth"],[53,18,42,16],[53,19,42,17,"month"],[53,24,42,22],[53,26,42,24,"Math"],[53,30,42,28],[53,31,42,29,"min"],[53,34,42,32],[53,35,42,33,"day"],[53,38,42,36],[53,40,42,38,"daysInMonth"],[53,51,42,49],[53,52,42,50],[53,53,42,51],[54,4,43,2],[54,11,43,9,"_date"],[54,16,43,14],[55,2,44,0],[57,2,46,0],[58,2,47,0],[58,6,47,0,"_default"],[58,14,47,0],[58,17,47,15,"setMonth"],[58,25,47,23],[59,0,47,24],[59,3]],"functionMap":{"names":["<global>","setMonth"],"mappings":"AAA;OC8B;CDa"},"hasCjsExports":false},"type":"js/module"}]}