{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.getISODay = getISODay;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link getISODay} function options.\n   */\n\n  /**\n   * @name getISODay\n   * @category Weekday Helpers\n   * @summary Get the day of the ISO week of the given date.\n   *\n   * @description\n   * Get the day of the ISO week of the given date,\n   * which is 7 for Sunday, 1 for Monday etc.\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param date - The given date\n   * @param options - An object with options\n   *\n   * @returns The day of ISO week\n   *\n   * @example\n   * // Which day of the ISO week is 26 February 2012?\n   * const result = getISODay(new Date(2012, 1, 26))\n   * //=> 7\n   */\n  function getISODay(date, options) {\n    const day = (0, _toDateJs.toDate)(date, options?.in).getDay();\n    return day === 0 ? 7 : day;\n  }\n\n  // Fallback for modularized imports:\n  var _default = getISODay;\n});","lineCount":47,"map":[[7,2,34,0,"Object"],[7,8,34,0],[7,9,34,0,"defineProperty"],[7,23,34,0],[7,24,34,0,"exports"],[7,31,34,0],[8,4,34,0,"enumerable"],[8,14,34,0],[9,4,34,0,"get"],[9,7,34,0],[9,18,34,0,"get"],[9,19,34,0],[10,6,34,0],[10,13,34,0,"_default"],[10,21,34,0],[11,4,34,0],[12,2,34,0],[13,2,28,0,"exports"],[13,9,28,0],[13,10,28,0,"getISODay"],[13,19,28,0],[13,22,28,0,"getISODay"],[13,31,28,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,2,28,7],[40,11,28,16,"getISODay"],[40,20,28,25,"getISODay"],[40,21,28,26,"date"],[40,25,28,30],[40,27,28,32,"options"],[40,34,28,39],[40,36,28,41],[41,4,29,2],[41,10,29,8,"day"],[41,13,29,11],[41,16,29,14],[41,20,29,14,"toDate"],[41,29,29,20],[41,30,29,20,"toDate"],[41,36,29,20],[41,38,29,21,"date"],[41,42,29,25],[41,44,29,27,"options"],[41,51,29,34],[41,53,29,36,"in"],[41,55,29,38],[41,56,29,39],[41,57,29,40,"getDay"],[41,63,29,46],[41,64,29,47],[41,65,29,48],[42,4,30,2],[42,11,30,9,"day"],[42,14,30,12],[42,19,30,17],[42,20,30,18],[42,23,30,21],[42,24,30,22],[42,27,30,25,"day"],[42,30,30,28],[43,2,31,0],[45,2,33,0],[46,2,34,0],[46,6,34,0,"_default"],[46,14,34,0],[46,17,34,15,"getISODay"],[46,26,34,24],[47,0,34,25],[47,3]],"functionMap":{"names":["<global>","getISODay"],"mappings":"AAA;OC2B;CDG"},"hasCjsExports":false},"type":"js/module"}]}