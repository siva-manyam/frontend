{"dependencies":[{"name":"./addDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"SmN07HKxNCN07W7zancFddtX2UQ=","exportNames":["*"],"imports":1}},{"name":"./getISODay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":43,"index":83}}],"key":"/gDTm5dBPGBuhRkVNHM6MZOTd94=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":84},"end":{"line":3,"column":37,"index":121}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setISODay = setISODay;\n  var _addDaysJs = require(_dependencyMap[0], \"./addDays.js\");\n  var _getISODayJs = require(_dependencyMap[1], \"./getISODay.js\");\n  var _toDateJs = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link setISODay} function options.\n   */\n\n  /**\n   * @name setISODay\n   * @category Weekday Helpers\n   * @summary Set the day of the ISO week to the given date.\n   *\n   * @description\n   * Set the day of the ISO week to the given date.\n   * ISO week starts with Monday.\n   * 7 is the index of Sunday, 1 is the index of Monday, etc.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param day - The day of the ISO week of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the day of the ISO week set\n   *\n   * @example\n   * // Set Sunday to 1 September 2014:\n   * const result = setISODay(new Date(2014, 8, 1), 7)\n   * //=> Sun Sep 07 2014 00:00:00\n   */\n  function setISODay(date, day, options) {\n    const date_ = (0, _toDateJs.toDate)(date, options?.in);\n    const currentDay = (0, _getISODayJs.getISODay)(date_, options);\n    const diff = day - currentDay;\n    return (0, _addDaysJs.addDays)(date_, diff, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = setISODay;\n});","lineCount":54,"map":[[7,2,41,0,"Object"],[7,8,41,0],[7,9,41,0,"defineProperty"],[7,23,41,0],[7,24,41,0,"exports"],[7,31,41,0],[8,4,41,0,"enumerable"],[8,14,41,0],[9,4,41,0,"get"],[9,7,41,0],[9,18,41,0,"get"],[9,19,41,0],[10,6,41,0],[10,13,41,0,"_default"],[10,21,41,0],[11,4,41,0],[12,2,41,0],[13,2,33,0,"exports"],[13,9,33,0],[13,10,33,0,"setISODay"],[13,19,33,0],[13,22,33,0,"setISODay"],[13,31,33,0],[14,2,1,0],[14,6,1,0,"_addDaysJs"],[14,16,1,0],[14,19,1,0,"require"],[14,26,1,0],[14,27,1,0,"_dependencyMap"],[14,41,1,0],[15,2,2,0],[15,6,2,0,"_getISODayJs"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,3,0],[16,6,3,0,"_toDateJs"],[16,15,3,0],[16,18,3,0,"require"],[16,25,3,0],[16,26,3,0,"_dependencyMap"],[16,40,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,2,33,7],[45,11,33,16,"setISODay"],[45,20,33,25,"setISODay"],[45,21,33,26,"date"],[45,25,33,30],[45,27,33,32,"day"],[45,30,33,35],[45,32,33,37,"options"],[45,39,33,44],[45,41,33,46],[46,4,34,2],[46,10,34,8,"date_"],[46,15,34,13],[46,18,34,16],[46,22,34,16,"toDate"],[46,31,34,22],[46,32,34,22,"toDate"],[46,38,34,22],[46,40,34,23,"date"],[46,44,34,27],[46,46,34,29,"options"],[46,53,34,36],[46,55,34,38,"in"],[46,57,34,40],[46,58,34,41],[47,4,35,2],[47,10,35,8,"currentDay"],[47,20,35,18],[47,23,35,21],[47,27,35,21,"getISODay"],[47,39,35,30],[47,40,35,30,"getISODay"],[47,49,35,30],[47,51,35,31,"date_"],[47,56,35,36],[47,58,35,38,"options"],[47,65,35,45],[47,66,35,46],[48,4,36,2],[48,10,36,8,"diff"],[48,14,36,12],[48,17,36,15,"day"],[48,20,36,18],[48,23,36,21,"currentDay"],[48,33,36,31],[49,4,37,2],[49,11,37,9],[49,15,37,9,"addDays"],[49,25,37,16],[49,26,37,16,"addDays"],[49,33,37,16],[49,35,37,17,"date_"],[49,40,37,22],[49,42,37,24,"diff"],[49,46,37,28],[49,48,37,30,"options"],[49,55,37,37],[49,56,37,38],[50,2,38,0],[52,2,40,0],[53,2,41,0],[53,6,41,0,"_default"],[53,14,41,0],[53,17,41,15,"setISODay"],[53,26,41,24],[54,0,41,25],[54,3]],"functionMap":{"names":["<global>","setISODay"],"mappings":"AAA;OCgC;CDK"},"hasCjsExports":false},"type":"js/module"}]}