{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.intlFormat = intlFormat;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The locale string (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n   * @deprecated\n   *\n   * [TODO] Remove in v4\n   */\n\n  /**\n   * The format options (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options)\n   */\n\n  /**\n   * The locale options.\n   */\n\n  /**\n   * @name intlFormat\n   * @category Common Helpers\n   * @summary Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n   *\n   * @description\n   * Return the formatted date string in the given format.\n   * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n   * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n   *\n   * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n   *\n   * @param date - The date to format\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 4 October 2019 in middle-endian format:\n   * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n   * //=> 10/4/2019\n   */\n\n  /**\n   * @param date - The date to format\n   * @param localeOptions - An object with locale\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 4 October 2019 in Korean.\n   * // Convert the date with locale's options.\n   * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n   *   locale: 'ko-KR',\n   * })\n   * //=> 2019. 10. 4.\n   */\n\n  /**\n   * @param date - The date to format\n   * @param formatOptions - The format options\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 4 October 2019.\n   * // Convert the date with format's options.\n   * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n   *   year: 'numeric',\n   *   month: 'numeric',\n   *   day: 'numeric',\n   *   hour: 'numeric',\n   * })\n   * //=> 10/4/2019, 12 PM\n   */\n\n  /**\n   * @param date - The date to format\n   * @param formatOptions - The format options\n   * @param localeOptions - An object with locale\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 4 October 2019 in German.\n   * // Convert the date with format's options and locale's options.\n   * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n   *   weekday: 'long',\n   *   year: 'numeric',\n   *   month: 'long',\n   *   day: 'numeric',\n   * }, {\n   *   locale: 'de-DE',\n   * })\n   * //=> Freitag, 4. Oktober 2019\n   */\n\n  function intlFormat(date, formatOrLocale, localeOptions) {\n    let formatOptions;\n    if (isFormatOptions(formatOrLocale)) {\n      formatOptions = formatOrLocale;\n    } else {\n      localeOptions = formatOrLocale;\n    }\n    return new Intl.DateTimeFormat(localeOptions?.locale, formatOptions).format((0, _toDateJs.toDate)(date));\n  }\n  function isFormatOptions(opts) {\n    return opts !== undefined && !(\"locale\" in opts);\n  }\n\n  // Fallback for modularized imports:\n  var _default = intlFormat;\n});","lineCount":129,"map":[[7,2,121,0,"Object"],[7,8,121,0],[7,9,121,0,"defineProperty"],[7,23,121,0],[7,24,121,0,"exports"],[7,31,121,0],[8,4,121,0,"enumerable"],[8,14,121,0],[9,4,121,0,"get"],[9,7,121,0],[9,18,121,0,"get"],[9,19,121,0],[10,6,121,0],[10,13,121,0,"_default"],[10,21,121,0],[11,4,121,0],[12,2,121,0],[13,2,102,0,"exports"],[13,9,102,0],[13,10,102,0,"intlFormat"],[13,20,102,0],[13,23,102,0,"intlFormat"],[13,33,102,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[26,2,14,0],[27,0,15,0],[28,0,16,0],[30,2,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[54,2,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,0,49,0],[62,0,50,0],[63,0,51,0],[64,0,52,0],[65,0,53,0],[66,0,54,0],[67,0,55,0],[68,0,56,0],[69,0,57,0],[71,2,59,0],[72,0,60,0],[73,0,61,0],[74,0,62,0],[75,0,63,0],[76,0,64,0],[77,0,65,0],[78,0,66,0],[79,0,67,0],[80,0,68,0],[81,0,69,0],[82,0,70,0],[83,0,71,0],[84,0,72,0],[85,0,73,0],[86,0,74,0],[87,0,75,0],[88,0,76,0],[89,0,77,0],[91,2,79,0],[92,0,80,0],[93,0,81,0],[94,0,82,0],[95,0,83,0],[96,0,84,0],[97,0,85,0],[98,0,86,0],[99,0,87,0],[100,0,88,0],[101,0,89,0],[102,0,90,0],[103,0,91,0],[104,0,92,0],[105,0,93,0],[106,0,94,0],[107,0,95,0],[108,0,96,0],[109,0,97,0],[110,0,98,0],[111,0,99,0],[112,0,100,0],[114,2,102,7],[114,11,102,16,"intlFormat"],[114,21,102,26,"intlFormat"],[114,22,102,27,"date"],[114,26,102,31],[114,28,102,33,"formatOrLocale"],[114,42,102,47],[114,44,102,49,"localeOptions"],[114,57,102,62],[114,59,102,64],[115,4,103,2],[115,8,103,6,"formatOptions"],[115,21,103,19],[116,4,105,2],[116,8,105,6,"isFormatOptions"],[116,23,105,21],[116,24,105,22,"formatOrLocale"],[116,38,105,36],[116,39,105,37],[116,41,105,39],[117,6,106,4,"formatOptions"],[117,19,106,17],[117,22,106,20,"formatOrLocale"],[117,36,106,34],[118,4,107,2],[118,5,107,3],[118,11,107,9],[119,6,108,4,"localeOptions"],[119,19,108,17],[119,22,108,20,"formatOrLocale"],[119,36,108,34],[120,4,109,2],[121,4,111,2],[121,11,111,9],[121,15,111,13,"Intl"],[121,19,111,17],[121,20,111,18,"DateTimeFormat"],[121,34,111,32],[121,35,111,33,"localeOptions"],[121,48,111,46],[121,50,111,48,"locale"],[121,56,111,54],[121,58,111,56,"formatOptions"],[121,71,111,69],[121,72,111,70],[121,73,111,71,"format"],[121,79,111,77],[121,80,112,4],[121,84,112,4,"toDate"],[121,93,112,10],[121,94,112,10,"toDate"],[121,100,112,10],[121,102,112,11,"date"],[121,106,112,15],[121,107,113,2],[121,108,113,3],[122,2,114,0],[123,2,116,0],[123,11,116,9,"isFormatOptions"],[123,26,116,24,"isFormatOptions"],[123,27,116,25,"opts"],[123,31,116,29],[123,33,116,31],[124,4,117,2],[124,11,117,9,"opts"],[124,15,117,13],[124,20,117,18,"undefined"],[124,29,117,27],[124,33,117,31],[124,35,117,33],[124,43,117,41],[124,47,117,45,"opts"],[124,51,117,49],[124,52,117,50],[125,2,118,0],[127,2,120,0],[128,2,121,0],[128,6,121,0,"_default"],[128,14,121,0],[128,17,121,15,"intlFormat"],[128,27,121,25],[129,0,121,26],[129,3]],"functionMap":{"names":["<global>","intlFormat","isFormatOptions"],"mappings":"AAA;OCqG;CDY;AEE;CFE"},"hasCjsExports":false},"type":"js/module"}]}