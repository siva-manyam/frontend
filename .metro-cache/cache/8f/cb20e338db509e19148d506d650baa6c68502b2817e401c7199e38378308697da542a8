{"dependencies":[{"name":"./addMinutes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"s7dxRQ5+rZLqB2aItf4QKDpmL0c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.subMinutes = subMinutes;\n  var _addMinutesJs = require(_dependencyMap[0], \"./addMinutes.js\");\n  /**\n   * The {@link subMinutes} function options.\n   */\n\n  /**\n   * @name subMinutes\n   * @category Minute Helpers\n   * @summary Subtract the specified number of minutes from the given date.\n   *\n   * @description\n   * Subtract the specified number of minutes from the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of minutes to be subtracted.\n   * @param options - An object with options\n   *\n   * @returns The new date with the minutes subtracted\n   *\n   * @example\n   * // Subtract 30 minutes from 10 July 2014 12:00:00:\n   * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n   * //=> Thu Jul 10 2014 11:30:00\n   */\n  function subMinutes(date, amount, options) {\n    return (0, _addMinutesJs.addMinutes)(date, -amount, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = subMinutes;\n});","lineCount":47,"map":[[7,2,34,0,"Object"],[7,8,34,0],[7,9,34,0,"defineProperty"],[7,23,34,0],[7,24,34,0,"exports"],[7,31,34,0],[8,4,34,0,"enumerable"],[8,14,34,0],[9,4,34,0,"get"],[9,7,34,0],[9,18,34,0,"get"],[9,19,34,0],[10,6,34,0],[10,13,34,0,"_default"],[10,21,34,0],[11,4,34,0],[12,2,34,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"subMinutes"],[13,20,29,0],[13,23,29,0,"subMinutes"],[13,33,29,0],[14,2,1,0],[14,6,1,0,"_addMinutesJs"],[14,19,1,0],[14,22,1,0,"require"],[14,29,1,0],[14,30,1,0,"_dependencyMap"],[14,44,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,2,29,7],[41,11,29,16,"subMinutes"],[41,21,29,26,"subMinutes"],[41,22,29,27,"date"],[41,26,29,31],[41,28,29,33,"amount"],[41,34,29,39],[41,36,29,41,"options"],[41,43,29,48],[41,45,29,50],[42,4,30,2],[42,11,30,9],[42,15,30,9,"addMinutes"],[42,28,30,19],[42,29,30,19,"addMinutes"],[42,39,30,19],[42,41,30,20,"date"],[42,45,30,24],[42,47,30,26],[42,48,30,27,"amount"],[42,54,30,33],[42,56,30,35,"options"],[42,63,30,42],[42,64,30,43],[43,2,31,0],[45,2,33,0],[46,2,34,0],[46,6,34,0,"_default"],[46,14,34,0],[46,17,34,15,"subMinutes"],[46,27,34,25],[47,0,34,26],[47,3]],"functionMap":{"names":["<global>","subMinutes"],"mappings":"AAA;OC4B;CDE"},"hasCjsExports":false},"type":"js/module"}]}