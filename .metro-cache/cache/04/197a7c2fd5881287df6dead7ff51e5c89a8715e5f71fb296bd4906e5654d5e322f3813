{"dependencies":[{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":51,"index":91}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AMPMParser\", {\n    enumerable: true,\n    get: function () {\n      return AMPMParser;\n    }\n  });\n  var _ParserJs = require(_dependencyMap[0], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[1], \"../utils.js\");\n  class AMPMParser extends _ParserJs.Parser {\n    priority = 80;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"a\":\n        case \"aa\":\n        case \"aaa\":\n          return match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"aaaaa\":\n          return match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"aaaa\":\n        default:\n          return match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n    set(date, _flags, value) {\n      date.setHours((0, _utilsJs.dayPeriodEnumToHours)(value), 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n  }\n});","lineCount":54,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"AMPMParser"],[10,23,5,0],[11,4,5,0],[12,2,5,0],[13,2,1,0],[13,6,1,0,"_ParserJs"],[13,15,1,0],[13,18,1,0,"require"],[13,25,1,0],[13,26,1,0,"_dependencyMap"],[13,40,1,0],[14,2,3,0],[14,6,3,0,"_utilsJs"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,5,7],[15,8,5,13,"AMPMParser"],[15,18,5,23],[15,27,5,32,"Parser"],[15,36,5,38],[15,37,5,38,"Parser"],[15,43,5,38],[15,44,5,39],[16,4,6,2,"priority"],[16,12,6,10],[16,15,6,13],[16,17,6,15],[17,4,8,2,"parse"],[17,9,8,7,"parse"],[17,10,8,8,"dateString"],[17,20,8,18],[17,22,8,20,"token"],[17,27,8,25],[17,29,8,27,"match"],[17,34,8,32],[17,36,8,34],[18,6,9,4],[18,14,9,12,"token"],[18,19,9,17],[19,8,10,6],[19,13,10,11],[19,16,10,14],[20,8,11,6],[20,13,11,11],[20,17,11,15],[21,8,12,6],[21,13,12,11],[21,18,12,16],[22,10,13,8],[22,17,14,10,"match"],[22,22,14,15],[22,23,14,16,"dayPeriod"],[22,32,14,25],[22,33,14,26,"dateString"],[22,43,14,36],[22,45,14,38],[23,12,15,12,"width"],[23,17,15,17],[23,19,15,19],[23,32,15,32],[24,12,16,12,"context"],[24,19,16,19],[24,21,16,21],[25,10,17,10],[25,11,17,11],[25,12,17,12],[25,16,18,10,"match"],[25,21,18,15],[25,22,18,16,"dayPeriod"],[25,31,18,25],[25,32,18,26,"dateString"],[25,42,18,36],[25,44,18,38],[26,12,19,12,"width"],[26,17,19,17],[26,19,19,19],[26,27,19,27],[27,12,20,12,"context"],[27,19,20,19],[27,21,20,21],[28,10,21,10],[28,11,21,11],[28,12,21,12],[29,8,24,6],[29,13,24,11],[29,20,24,18],[30,10,25,8],[30,17,25,15,"match"],[30,22,25,20],[30,23,25,21,"dayPeriod"],[30,32,25,30],[30,33,25,31,"dateString"],[30,43,25,41],[30,45,25,43],[31,12,26,10,"width"],[31,17,26,15],[31,19,26,17],[31,27,26,25],[32,12,27,10,"context"],[32,19,27,17],[32,21,27,19],[33,10,28,8],[33,11,28,9],[33,12,28,10],[34,8,29,6],[34,13,29,11],[34,19,29,17],[35,8,30,6],[36,10,31,8],[36,17,32,10,"match"],[36,22,32,15],[36,23,32,16,"dayPeriod"],[36,32,32,25],[36,33,32,26,"dateString"],[36,43,32,36],[36,45,32,38],[37,12,33,12,"width"],[37,17,33,17],[37,19,33,19],[37,25,33,25],[38,12,34,12,"context"],[38,19,34,19],[38,21,34,21],[39,10,35,10],[39,11,35,11],[39,12,35,12],[39,16,36,10,"match"],[39,21,36,15],[39,22,36,16,"dayPeriod"],[39,31,36,25],[39,32,36,26,"dateString"],[39,42,36,36],[39,44,36,38],[40,12,37,12,"width"],[40,17,37,17],[40,19,37,19],[40,32,37,32],[41,12,38,12,"context"],[41,19,38,19],[41,21,38,21],[42,10,39,10],[42,11,39,11],[42,12,39,12],[42,16,40,10,"match"],[42,21,40,15],[42,22,40,16,"dayPeriod"],[42,31,40,25],[42,32,40,26,"dateString"],[42,42,40,36],[42,44,40,38],[43,12,41,12,"width"],[43,17,41,17],[43,19,41,19],[43,27,41,27],[44,12,42,12,"context"],[44,19,42,19],[44,21,42,21],[45,10,43,10],[45,11,43,11],[45,12,43,12],[46,6,45,4],[47,4,46,2],[48,4,48,2,"set"],[48,7,48,5,"set"],[48,8,48,6,"date"],[48,12,48,10],[48,14,48,12,"_flags"],[48,20,48,18],[48,22,48,20,"value"],[48,27,48,25],[48,29,48,27],[49,6,49,4,"date"],[49,10,49,8],[49,11,49,9,"setHours"],[49,19,49,17],[49,20,49,18],[49,24,49,18,"dayPeriodEnumToHours"],[49,32,49,38],[49,33,49,38,"dayPeriodEnumToHours"],[49,53,49,38],[49,55,49,39,"value"],[49,60,49,44],[49,61,49,45],[49,63,49,47],[49,64,49,48],[49,66,49,50],[49,67,49,51],[49,69,49,53],[49,70,49,54],[49,71,49,55],[50,6,50,4],[50,13,50,11,"date"],[50,17,50,15],[51,4,51,2],[52,4,53,2,"incompatibleTokens"],[52,22,53,20],[52,25,53,23],[52,26,53,24],[52,29,53,27],[52,31,53,29],[52,34,53,32],[52,36,53,34],[52,39,53,37],[52,41,53,39],[52,44,53,42],[52,46,53,44],[52,49,53,47],[52,51,53,49],[52,54,53,52],[52,55,53,53],[53,2,54,0],[54,0,54,1],[54,3]],"functionMap":{"names":["<global>","AMPMParser","parse","set"],"mappings":"AAA;OCI;ECG;GDsC;EEE;GFG;CDG"},"hasCjsExports":false},"type":"js/module"}]}