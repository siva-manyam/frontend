{"dependencies":[{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":51,"index":113}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":73,"index":187}}],"key":"imq/EGPR6TLwAkGUJvGZSPH1SeI=","exportNames":["*"],"imports":1}},{"name":"./startOfWeekYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":55,"index":243}}],"key":"tCEmGu/zjPVKU+WJVPcXPZwIpTo=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":244},"end":{"line":5,"column":37,"index":281}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setWeekYear = setWeekYear;\n  var _libDefaultOptionsJs = require(_dependencyMap[0], \"./_lib/defaultOptions.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  var _differenceInCalendarDaysJs = require(_dependencyMap[2], \"./differenceInCalendarDays.js\");\n  var _startOfWeekYearJs = require(_dependencyMap[3], \"./startOfWeekYear.js\");\n  var _toDateJs = require(_dependencyMap[4], \"./toDate.js\");\n  /**\n   * The {@link setWeekYear} function options.\n   */\n\n  /**\n   * @name setWeekYear\n   * @category Week-Numbering Year Helpers\n   * @summary Set the local week-numbering year to the given date.\n   *\n   * @description\n   * Set the local week-numbering year to the given date,\n   * saving the week number and the weekday number.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param weekYear - The local week-numbering year of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the local week-numbering year set\n   *\n   * @example\n   * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n   * const result = setWeekYear(new Date(2010, 0, 2), 2004)\n   * //=> Sat Jan 03 2004 00:00:00\n   *\n   * @example\n   * // Set the local week-numbering year 2004 to 2 January 2010,\n   * // if Monday is the first day of week\n   * // and 4 January is always in the first week of the year:\n   * const result = setWeekYear(new Date(2010, 0, 2), 2004, {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> Sat Jan 01 2005 00:00:00\n   */\n  function setWeekYear(date, weekYear, options) {\n    const defaultOptions = (0, _libDefaultOptionsJs.getDefaultOptions)();\n    const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n    const diff = (0, _differenceInCalendarDaysJs.differenceInCalendarDays)((0, _toDateJs.toDate)(date, options?.in), (0, _startOfWeekYearJs.startOfWeekYear)(date, options), options);\n    const firstWeek = (0, _constructFromJs.constructFrom)(options?.in || date, 0);\n    firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n    firstWeek.setHours(0, 0, 0, 0);\n    const date_ = (0, _startOfWeekYearJs.startOfWeekYear)(firstWeek, options);\n    date_.setDate(date_.getDate() + diff);\n    return date_;\n  }\n\n  // Fallback for modularized imports:\n  var _default = setWeekYear;\n});","lineCount":76,"map":[[7,2,75,0,"Object"],[7,8,75,0],[7,9,75,0,"defineProperty"],[7,23,75,0],[7,24,75,0,"exports"],[7,31,75,0],[8,4,75,0,"enumerable"],[8,14,75,0],[9,4,75,0,"get"],[9,7,75,0],[9,18,75,0,"get"],[9,19,75,0],[10,6,75,0],[10,13,75,0,"_default"],[10,21,75,0],[11,4,75,0],[12,2,75,0],[13,2,50,0,"exports"],[13,9,50,0],[13,10,50,0,"setWeekYear"],[13,21,50,0],[13,24,50,0,"setWeekYear"],[13,35,50,0],[14,2,1,0],[14,6,1,0,"_libDefaultOptionsJs"],[14,26,1,0],[14,29,1,0,"require"],[14,36,1,0],[14,37,1,0,"_dependencyMap"],[14,51,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,3,0],[16,6,3,0,"_differenceInCalendarDaysJs"],[16,33,3,0],[16,36,3,0,"require"],[16,43,3,0],[16,44,3,0,"_dependencyMap"],[16,58,3,0],[17,2,4,0],[17,6,4,0,"_startOfWeekYearJs"],[17,24,4,0],[17,27,4,0,"require"],[17,34,4,0],[17,35,4,0,"_dependencyMap"],[17,49,4,0],[18,2,5,0],[18,6,5,0,"_toDateJs"],[18,15,5,0],[18,18,5,0,"require"],[18,25,5,0],[18,26,5,0,"_dependencyMap"],[18,40,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[23,2,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,0,49,0],[62,2,50,7],[62,11,50,16,"setWeekYear"],[62,22,50,27,"setWeekYear"],[62,23,50,28,"date"],[62,27,50,32],[62,29,50,34,"weekYear"],[62,37,50,42],[62,39,50,44,"options"],[62,46,50,51],[62,48,50,53],[63,4,51,2],[63,10,51,8,"defaultOptions"],[63,24,51,22],[63,27,51,25],[63,31,51,25,"getDefaultOptions"],[63,51,51,42],[63,52,51,42,"getDefaultOptions"],[63,69,51,42],[63,71,51,43],[63,72,51,44],[64,4,52,2],[64,10,52,8,"firstWeekContainsDate"],[64,31,52,29],[64,34,53,4,"options"],[64,41,53,11],[64,43,53,13,"firstWeekContainsDate"],[64,64,53,34],[64,68,54,4,"options"],[64,75,54,11],[64,77,54,13,"locale"],[64,83,54,19],[64,85,54,21,"options"],[64,92,54,28],[64,94,54,30,"firstWeekContainsDate"],[64,115,54,51],[64,119,55,4,"defaultOptions"],[64,133,55,18],[64,134,55,19,"firstWeekContainsDate"],[64,155,55,40],[64,159,56,4,"defaultOptions"],[64,173,56,18],[64,174,56,19,"locale"],[64,180,56,25],[64,182,56,27,"options"],[64,189,56,34],[64,191,56,36,"firstWeekContainsDate"],[64,212,56,57],[64,216,57,4],[64,217,57,5],[65,4,59,2],[65,10,59,8,"diff"],[65,14,59,12],[65,17,59,15],[65,21,59,15,"differenceInCalendarDays"],[65,48,59,39],[65,49,59,39,"differenceInCalendarDays"],[65,73,59,39],[65,75,60,4],[65,79,60,4,"toDate"],[65,88,60,10],[65,89,60,10,"toDate"],[65,95,60,10],[65,97,60,11,"date"],[65,101,60,15],[65,103,60,17,"options"],[65,110,60,24],[65,112,60,26,"in"],[65,114,60,28],[65,115,60,29],[65,117,61,4],[65,121,61,4,"startOfWeekYear"],[65,139,61,19],[65,140,61,19,"startOfWeekYear"],[65,155,61,19],[65,157,61,20,"date"],[65,161,61,24],[65,163,61,26,"options"],[65,170,61,33],[65,171,61,34],[65,173,62,4,"options"],[65,180,63,2],[65,181,63,3],[66,4,65,2],[66,10,65,8,"firstWeek"],[66,19,65,17],[66,22,65,20],[66,26,65,20,"constructFrom"],[66,42,65,33],[66,43,65,33,"constructFrom"],[66,56,65,33],[66,58,65,34,"options"],[66,65,65,41],[66,67,65,43,"in"],[66,69,65,45],[66,73,65,49,"date"],[66,77,65,53],[66,79,65,55],[66,80,65,56],[66,81,65,57],[67,4,66,2,"firstWeek"],[67,13,66,11],[67,14,66,12,"setFullYear"],[67,25,66,23],[67,26,66,24,"weekYear"],[67,34,66,32],[67,36,66,34],[67,37,66,35],[67,39,66,37,"firstWeekContainsDate"],[67,60,66,58],[67,61,66,59],[68,4,67,2,"firstWeek"],[68,13,67,11],[68,14,67,12,"setHours"],[68,22,67,20],[68,23,67,21],[68,24,67,22],[68,26,67,24],[68,27,67,25],[68,29,67,27],[68,30,67,28],[68,32,67,30],[68,33,67,31],[68,34,67,32],[69,4,69,2],[69,10,69,8,"date_"],[69,15,69,13],[69,18,69,16],[69,22,69,16,"startOfWeekYear"],[69,40,69,31],[69,41,69,31,"startOfWeekYear"],[69,56,69,31],[69,58,69,32,"firstWeek"],[69,67,69,41],[69,69,69,43,"options"],[69,76,69,50],[69,77,69,51],[70,4,70,2,"date_"],[70,9,70,7],[70,10,70,8,"setDate"],[70,17,70,15],[70,18,70,16,"date_"],[70,23,70,21],[70,24,70,22,"getDate"],[70,31,70,29],[70,32,70,30],[70,33,70,31],[70,36,70,34,"diff"],[70,40,70,38],[70,41,70,39],[71,4,71,2],[71,11,71,9,"date_"],[71,16,71,14],[72,2,72,0],[74,2,74,0],[75,2,75,0],[75,6,75,0,"_default"],[75,14,75,0],[75,17,75,15,"setWeekYear"],[75,28,75,26],[76,0,75,27],[76,3]],"functionMap":{"names":["<global>","setWeekYear"],"mappings":"AAA;OCiD;CDsB"},"hasCjsExports":false},"type":"js/module"}]}