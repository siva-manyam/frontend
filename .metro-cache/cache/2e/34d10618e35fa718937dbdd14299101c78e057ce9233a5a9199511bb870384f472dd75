{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.min = min;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link min} function options.\n   */\n\n  /**\n   * @name min\n   * @category Common Helpers\n   * @summary Returns the earliest of the given dates.\n   *\n   * @description\n   * Returns the earliest of the given dates.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param dates - The dates to compare\n   *\n   * @returns The earliest of the dates\n   *\n   * @example\n   * // Which of these dates is the earliest?\n   * const result = min([\n   *   new Date(1989, 6, 10),\n   *   new Date(1987, 1, 11),\n   *   new Date(1995, 6, 2),\n   *   new Date(1990, 0, 1)\n   * ])\n   * //=> Wed Feb 11 1987 00:00:00\n   */\n  function min(dates, options) {\n    let result;\n    let context = options?.in;\n    dates.forEach(date => {\n      // Use the first date object as the context function\n      if (!context && typeof date === \"object\") context = _constructFromJs.constructFrom.bind(null, date);\n      const date_ = (0, _toDateJs.toDate)(date, context);\n      if (!result || result > date_ || isNaN(+date_)) result = date_;\n    });\n    return (0, _constructFromJs.constructFrom)(context, result || NaN);\n  }\n\n  // Fallback for modularized imports:\n  var _default = min;\n});","lineCount":59,"map":[[7,2,50,0,"Object"],[7,8,50,0],[7,9,50,0,"defineProperty"],[7,23,50,0],[7,24,50,0,"exports"],[7,31,50,0],[8,4,50,0,"enumerable"],[8,14,50,0],[9,4,50,0,"get"],[9,7,50,0],[9,18,50,0,"get"],[9,19,50,0],[10,6,50,0],[10,13,50,0,"_default"],[10,21,50,0],[11,4,50,0],[12,2,50,0],[13,2,33,0,"exports"],[13,9,33,0],[13,10,33,0,"min"],[13,13,33,0],[13,16,33,0,"min"],[13,19,33,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,2,33,7],[45,11,33,16,"min"],[45,14,33,19,"min"],[45,15,33,20,"dates"],[45,20,33,25],[45,22,33,27,"options"],[45,29,33,34],[45,31,33,36],[46,4,34,2],[46,8,34,6,"result"],[46,14,34,12],[47,4,35,2],[47,8,35,6,"context"],[47,15,35,13],[47,18,35,16,"options"],[47,25,35,23],[47,27,35,25,"in"],[47,29,35,27],[48,4,37,2,"dates"],[48,9,37,7],[48,10,37,8,"forEach"],[48,17,37,15],[48,18,37,17,"date"],[48,22,37,21],[48,26,37,26],[49,6,38,4],[50,6,39,4],[50,10,39,8],[50,11,39,9,"context"],[50,18,39,16],[50,22,39,20],[50,29,39,27,"date"],[50,33,39,31],[50,38,39,36],[50,46,39,44],[50,48,40,6,"context"],[50,55,40,13],[50,58,40,16,"constructFrom"],[50,74,40,29],[50,75,40,29,"constructFrom"],[50,88,40,29],[50,89,40,30,"bind"],[50,93,40,34],[50,94,40,35],[50,98,40,39],[50,100,40,41,"date"],[50,104,40,45],[50,105,40,46],[51,6,42,4],[51,12,42,10,"date_"],[51,17,42,15],[51,20,42,18],[51,24,42,18,"toDate"],[51,33,42,24],[51,34,42,24,"toDate"],[51,40,42,24],[51,42,42,25,"date"],[51,46,42,29],[51,48,42,31,"context"],[51,55,42,38],[51,56,42,39],[52,6,43,4],[52,10,43,8],[52,11,43,9,"result"],[52,17,43,15],[52,21,43,19,"result"],[52,27,43,25],[52,30,43,28,"date_"],[52,35,43,33],[52,39,43,37,"isNaN"],[52,44,43,42],[52,45,43,43],[52,46,43,44,"date_"],[52,51,43,49],[52,52,43,50],[52,54,43,52,"result"],[52,60,43,58],[52,63,43,61,"date_"],[52,68,43,66],[53,4,44,2],[53,5,44,3],[53,6,44,4],[54,4,46,2],[54,11,46,9],[54,15,46,9,"constructFrom"],[54,31,46,22],[54,32,46,22,"constructFrom"],[54,45,46,22],[54,47,46,23,"context"],[54,54,46,30],[54,56,46,32,"result"],[54,62,46,38],[54,66,46,42,"NaN"],[54,69,46,45],[54,70,46,46],[55,2,47,0],[57,2,49,0],[58,2,50,0],[58,6,50,0,"_default"],[58,14,50,0],[58,17,50,15,"min"],[58,20,50,18],[59,0,50,19],[59,3]],"functionMap":{"names":["<global>","min","dates.forEach$argument_0"],"mappings":"AAA;OCgC;gBCI;GDO;CDG"},"hasCjsExports":false},"type":"js/module"}]}