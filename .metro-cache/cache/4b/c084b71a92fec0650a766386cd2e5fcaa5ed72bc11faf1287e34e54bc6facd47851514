{"dependencies":[{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":76,"index":116}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"YearParser\", {\n    enumerable: true,\n    get: function () {\n      return YearParser;\n    }\n  });\n  var _ParserJs = require(_dependencyMap[0], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[1], \"../utils.js\");\n  // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n  // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n  // |----------|-------|----|-------|-------|-------|\n  // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n  // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n  // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n  // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n  // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n  class YearParser extends _ParserJs.Parser {\n    priority = 130;\n    incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n    parse(dateString, token, match) {\n      const valueCallback = year => ({\n        year,\n        isTwoDigitYear: token === \"yy\"\n      });\n      switch (token) {\n        case \"y\":\n          return (0, _utilsJs.mapValue)((0, _utilsJs.parseNDigits)(4, dateString), valueCallback);\n        case \"yo\":\n          return (0, _utilsJs.mapValue)(match.ordinalNumber(dateString, {\n            unit: \"year\"\n          }), valueCallback);\n        default:\n          return (0, _utilsJs.mapValue)((0, _utilsJs.parseNDigits)(token.length, dateString), valueCallback);\n      }\n    }\n    validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n    set(date, flags, value) {\n      const currentYear = date.getFullYear();\n      if (value.isTwoDigitYear) {\n        const normalizedTwoDigitYear = (0, _utilsJs.normalizeTwoDigitYear)(value.year, currentYear);\n        date.setFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setHours(0, 0, 0, 0);\n        return date;\n      }\n      const year = !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setFullYear(year, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }\n});","lineCount":59,"map":[[7,2,13,0,"Object"],[7,8,13,0],[7,9,13,0,"defineProperty"],[7,23,13,0],[7,24,13,0,"exports"],[7,31,13,0],[8,4,13,0,"enumerable"],[8,14,13,0],[9,4,13,0,"get"],[9,7,13,0],[9,18,13,0,"get"],[9,19,13,0],[10,6,13,0],[10,13,13,0,"YearParser"],[10,23,13,0],[11,4,13,0],[12,2,13,0],[13,2,1,0],[13,6,1,0,"_ParserJs"],[13,15,1,0],[13,18,1,0,"require"],[13,25,1,0],[13,26,1,0,"_dependencyMap"],[13,40,1,0],[14,2,3,0],[14,6,3,0,"_utilsJs"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,5,0],[16,2,6,0],[17,2,7,0],[18,2,8,0],[19,2,9,0],[20,2,10,0],[21,2,11,0],[22,2,12,0],[23,2,13,7],[23,8,13,13,"YearParser"],[23,18,13,23],[23,27,13,32,"Parser"],[23,36,13,38],[23,37,13,38,"Parser"],[23,43,13,38],[23,44,13,39],[24,4,14,2,"priority"],[24,12,14,10],[24,15,14,13],[24,18,14,16],[25,4,15,2,"incompatibleTokens"],[25,22,15,20],[25,25,15,23],[25,26,15,24],[25,29,15,27],[25,31,15,29],[25,34,15,32],[25,36,15,34],[25,39,15,37],[25,41,15,39],[25,44,15,42],[25,46,15,44],[25,49,15,47],[25,51,15,49],[25,54,15,52],[25,56,15,54],[25,59,15,57],[25,61,15,59],[25,64,15,62],[25,66,15,64],[25,69,15,67],[25,71,15,69],[25,74,15,72],[25,75,15,73],[26,4,17,2,"parse"],[26,9,17,7,"parse"],[26,10,17,8,"dateString"],[26,20,17,18],[26,22,17,20,"token"],[26,27,17,25],[26,29,17,27,"match"],[26,34,17,32],[26,36,17,34],[27,6,18,4],[27,12,18,10,"valueCallback"],[27,25,18,23],[27,28,18,27,"year"],[27,32,18,31],[27,37,18,37],[28,8,19,6,"year"],[28,12,19,10],[29,8,20,6,"isTwoDigitYear"],[29,22,20,20],[29,24,20,22,"token"],[29,29,20,27],[29,34,20,32],[30,6,21,4],[30,7,21,5],[30,8,21,6],[31,6,23,4],[31,14,23,12,"token"],[31,19,23,17],[32,8,24,6],[32,13,24,11],[32,16,24,14],[33,10,25,8],[33,17,25,15],[33,21,25,15,"mapValue"],[33,29,25,23],[33,30,25,23,"mapValue"],[33,38,25,23],[33,40,25,24],[33,44,25,24,"parseNDigits"],[33,52,25,36],[33,53,25,36,"parseNDigits"],[33,65,25,36],[33,67,25,37],[33,68,25,38],[33,70,25,40,"dateString"],[33,80,25,50],[33,81,25,51],[33,83,25,53,"valueCallback"],[33,96,25,66],[33,97,25,67],[34,8,26,6],[34,13,26,11],[34,17,26,15],[35,10,27,8],[35,17,27,15],[35,21,27,15,"mapValue"],[35,29,27,23],[35,30,27,23,"mapValue"],[35,38,27,23],[35,40,28,10,"match"],[35,45,28,15],[35,46,28,16,"ordinalNumber"],[35,59,28,29],[35,60,28,30,"dateString"],[35,70,28,40],[35,72,28,42],[36,12,29,12,"unit"],[36,16,29,16],[36,18,29,18],[37,10,30,10],[37,11,30,11],[37,12,30,12],[37,14,31,10,"valueCallback"],[37,27,32,8],[37,28,32,9],[38,8,33,6],[39,10,34,8],[39,17,34,15],[39,21,34,15,"mapValue"],[39,29,34,23],[39,30,34,23,"mapValue"],[39,38,34,23],[39,40,34,24],[39,44,34,24,"parseNDigits"],[39,52,34,36],[39,53,34,36,"parseNDigits"],[39,65,34,36],[39,67,34,37,"token"],[39,72,34,42],[39,73,34,43,"length"],[39,79,34,49],[39,81,34,51,"dateString"],[39,91,34,61],[39,92,34,62],[39,94,34,64,"valueCallback"],[39,107,34,77],[39,108,34,78],[40,6,35,4],[41,4,36,2],[42,4,38,2,"validate"],[42,12,38,10,"validate"],[42,13,38,11,"_date"],[42,18,38,16],[42,20,38,18,"value"],[42,25,38,23],[42,27,38,25],[43,6,39,4],[43,13,39,11,"value"],[43,18,39,16],[43,19,39,17,"isTwoDigitYear"],[43,33,39,31],[43,37,39,35,"value"],[43,42,39,40],[43,43,39,41,"year"],[43,47,39,45],[43,50,39,48],[43,51,39,49],[44,4,40,2],[45,4,42,2,"set"],[45,7,42,5,"set"],[45,8,42,6,"date"],[45,12,42,10],[45,14,42,12,"flags"],[45,19,42,17],[45,21,42,19,"value"],[45,26,42,24],[45,28,42,26],[46,6,43,4],[46,12,43,10,"currentYear"],[46,23,43,21],[46,26,43,24,"date"],[46,30,43,28],[46,31,43,29,"getFullYear"],[46,42,43,40],[46,43,43,41],[46,44,43,42],[47,6,45,4],[47,10,45,8,"value"],[47,15,45,13],[47,16,45,14,"isTwoDigitYear"],[47,30,45,28],[47,32,45,30],[48,8,46,6],[48,14,46,12,"normalizedTwoDigitYear"],[48,36,46,34],[48,39,46,37],[48,43,46,37,"normalizeTwoDigitYear"],[48,51,46,58],[48,52,46,58,"normalizeTwoDigitYear"],[48,73,46,58],[48,75,47,8,"value"],[48,80,47,13],[48,81,47,14,"year"],[48,85,47,18],[48,87,48,8,"currentYear"],[48,98,49,6],[48,99,49,7],[49,8,50,6,"date"],[49,12,50,10],[49,13,50,11,"setFullYear"],[49,24,50,22],[49,25,50,23,"normalizedTwoDigitYear"],[49,47,50,45],[49,49,50,47],[49,50,50,48],[49,52,50,50],[49,53,50,51],[49,54,50,52],[50,8,51,6,"date"],[50,12,51,10],[50,13,51,11,"setHours"],[50,21,51,19],[50,22,51,20],[50,23,51,21],[50,25,51,23],[50,26,51,24],[50,28,51,26],[50,29,51,27],[50,31,51,29],[50,32,51,30],[50,33,51,31],[51,8,52,6],[51,15,52,13,"date"],[51,19,52,17],[52,6,53,4],[53,6,55,4],[53,12,55,10,"year"],[53,16,55,14],[53,19,56,6],[53,21,56,8],[53,26,56,13],[53,30,56,17,"flags"],[53,35,56,22],[53,36,56,23],[53,40,56,27,"flags"],[53,45,56,32],[53,46,56,33,"era"],[53,49,56,36],[53,54,56,41],[53,55,56,42],[53,58,56,45,"value"],[53,63,56,50],[53,64,56,51,"year"],[53,68,56,55],[53,71,56,58],[53,72,56,59],[53,75,56,62,"value"],[53,80,56,67],[53,81,56,68,"year"],[53,85,56,72],[54,6,57,4,"date"],[54,10,57,8],[54,11,57,9,"setFullYear"],[54,22,57,20],[54,23,57,21,"year"],[54,27,57,25],[54,29,57,27],[54,30,57,28],[54,32,57,30],[54,33,57,31],[54,34,57,32],[55,6,58,4,"date"],[55,10,58,8],[55,11,58,9,"setHours"],[55,19,58,17],[55,20,58,18],[55,21,58,19],[55,23,58,21],[55,24,58,22],[55,26,58,24],[55,27,58,25],[55,29,58,27],[55,30,58,28],[55,31,58,29],[56,6,59,4],[56,13,59,11,"date"],[56,17,59,15],[57,4,60,2],[58,2,61,0],[59,0,61,1],[59,3]],"functionMap":{"names":["<global>","YearParser","parse","valueCallback","validate","set"],"mappings":"AAA;OCY;ECI;0BCC;MDG;GDe;EGE;GHE;EIE;GJkB;CDC"},"hasCjsExports":false},"type":"js/module"}]}