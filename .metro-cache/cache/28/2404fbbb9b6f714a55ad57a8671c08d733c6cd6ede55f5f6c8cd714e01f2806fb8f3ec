{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.isEqual = isEqual;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * @name isEqual\n   * @category Common Helpers\n   * @summary Are the given dates equal?\n   *\n   * @description\n   * Are the given dates equal?\n   *\n   * @param dateLeft - The first date to compare\n   * @param dateRight - The second date to compare\n   *\n   * @returns The dates are equal\n   *\n   * @example\n   * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n   * const result = isEqual(\n   *   new Date(2014, 6, 2, 6, 30, 45, 0),\n   *   new Date(2014, 6, 2, 6, 30, 45, 500)\n   * )\n   * //=> false\n   */\n  function isEqual(leftDate, rightDate) {\n    return +(0, _toDateJs.toDate)(leftDate) === +(0, _toDateJs.toDate)(rightDate);\n  }\n\n  // Fallback for modularized imports:\n  var _default = isEqual;\n});","lineCount":42,"map":[[7,2,29,0,"Object"],[7,8,29,0],[7,9,29,0,"defineProperty"],[7,23,29,0],[7,24,29,0,"exports"],[7,31,29,0],[8,4,29,0,"enumerable"],[8,14,29,0],[9,4,29,0,"get"],[9,7,29,0],[9,18,29,0,"get"],[9,19,29,0],[10,6,29,0],[10,13,29,0,"_default"],[10,21,29,0],[11,4,29,0],[12,2,29,0],[13,2,24,0,"exports"],[13,9,24,0],[13,10,24,0,"isEqual"],[13,17,24,0],[13,20,24,0,"isEqual"],[13,27,24,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,2,24,7],[36,11,24,16,"isEqual"],[36,18,24,23,"isEqual"],[36,19,24,24,"leftDate"],[36,27,24,32],[36,29,24,34,"rightDate"],[36,38,24,43],[36,40,24,45],[37,4,25,2],[37,11,25,9],[37,12,25,10],[37,16,25,10,"toDate"],[37,25,25,16],[37,26,25,16,"toDate"],[37,32,25,16],[37,34,25,17,"leftDate"],[37,42,25,25],[37,43,25,26],[37,48,25,31],[37,49,25,32],[37,53,25,32,"toDate"],[37,62,25,38],[37,63,25,38,"toDate"],[37,69,25,38],[37,71,25,39,"rightDate"],[37,80,25,48],[37,81,25,49],[38,2,26,0],[40,2,28,0],[41,2,29,0],[41,6,29,0,"_default"],[41,14,29,0],[41,17,29,15,"isEqual"],[41,24,29,22],[42,0,29,23],[42,3]],"functionMap":{"names":["<global>","isEqual"],"mappings":"AAA;OCuB;CDE"},"hasCjsExports":false},"type":"js/module"}]}