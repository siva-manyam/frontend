{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":47,"index":100}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"],"imports":1}},{"name":"./startOfWeekYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":55,"index":156}}],"key":"tCEmGu/zjPVKU+WJVPcXPZwIpTo=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":157},"end":{"line":4,"column":37,"index":194}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.getWeek = getWeek;\n  var _constantsJs = require(_dependencyMap[0], \"./constants.js\");\n  var _startOfWeekJs = require(_dependencyMap[1], \"./startOfWeek.js\");\n  var _startOfWeekYearJs = require(_dependencyMap[2], \"./startOfWeekYear.js\");\n  var _toDateJs = require(_dependencyMap[3], \"./toDate.js\");\n  /**\n   * The {@link getWeek} function options.\n   */\n\n  /**\n   * @name getWeek\n   * @category Week Helpers\n   * @summary Get the local week index of the given date.\n   *\n   * @description\n   * Get the local week index of the given date.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @param date - The given date\n   * @param options - An object with options\n   *\n   * @returns The week\n   *\n   * @example\n   * // Which week of the local week numbering year is 2 January 2005 with default options?\n   * const result = getWeek(new Date(2005, 0, 2))\n   * //=> 2\n   *\n   * @example\n   * // Which week of the local week numbering year is 2 January 2005,\n   * // if Monday is the first day of the week,\n   * // and the first week of the year always contains 4 January?\n   * const result = getWeek(new Date(2005, 0, 2), {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> 53\n   */\n  function getWeek(date, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    const diff = +(0, _startOfWeekJs.startOfWeek)(_date, options) - +(0, _startOfWeekYearJs.startOfWeekYear)(_date, options);\n\n    // Round the number of weeks to the nearest integer because the number of\n    // milliseconds in a week is not constant (e.g. it's different in the week of\n    // the daylight saving time clock shift).\n    return Math.round(diff / _constantsJs.millisecondsInWeek) + 1;\n  }\n\n  // Fallback for modularized imports:\n  var _default = getWeek;\n});","lineCount":68,"map":[[7,2,55,0,"Object"],[7,8,55,0],[7,9,55,0,"defineProperty"],[7,23,55,0],[7,24,55,0,"exports"],[7,31,55,0],[8,4,55,0,"enumerable"],[8,14,55,0],[9,4,55,0,"get"],[9,7,55,0],[9,18,55,0,"get"],[9,19,55,0],[10,6,55,0],[10,13,55,0,"_default"],[10,21,55,0],[11,4,55,0],[12,2,55,0],[13,2,44,0,"exports"],[13,9,44,0],[13,10,44,0,"getWeek"],[13,17,44,0],[13,20,44,0,"getWeek"],[13,27,44,0],[14,2,1,0],[14,6,1,0,"_constantsJs"],[14,18,1,0],[14,21,1,0,"require"],[14,28,1,0],[14,29,1,0,"_dependencyMap"],[14,43,1,0],[15,2,2,0],[15,6,2,0,"_startOfWeekJs"],[15,20,2,0],[15,23,2,0,"require"],[15,30,2,0],[15,31,2,0,"_dependencyMap"],[15,45,2,0],[16,2,3,0],[16,6,3,0,"_startOfWeekYearJs"],[16,24,3,0],[16,27,3,0,"require"],[16,34,3,0],[16,35,3,0,"_dependencyMap"],[16,49,3,0],[17,2,4,0],[17,6,4,0,"_toDateJs"],[17,15,4,0],[17,18,4,0,"require"],[17,25,4,0],[17,26,4,0,"_dependencyMap"],[17,40,4,0],[18,2,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,2,44,7],[56,11,44,16,"getWeek"],[56,18,44,23,"getWeek"],[56,19,44,24,"date"],[56,23,44,28],[56,25,44,30,"options"],[56,32,44,37],[56,34,44,39],[57,4,45,2],[57,10,45,8,"_date"],[57,15,45,13],[57,18,45,16],[57,22,45,16,"toDate"],[57,31,45,22],[57,32,45,22,"toDate"],[57,38,45,22],[57,40,45,23,"date"],[57,44,45,27],[57,46,45,29,"options"],[57,53,45,36],[57,55,45,38,"in"],[57,57,45,40],[57,58,45,41],[58,4,46,2],[58,10,46,8,"diff"],[58,14,46,12],[58,17,46,15],[58,18,46,16],[58,22,46,16,"startOfWeek"],[58,36,46,27],[58,37,46,27,"startOfWeek"],[58,48,46,27],[58,50,46,28,"_date"],[58,55,46,33],[58,57,46,35,"options"],[58,64,46,42],[58,65,46,43],[58,68,46,46],[58,69,46,47],[58,73,46,47,"startOfWeekYear"],[58,91,46,62],[58,92,46,62,"startOfWeekYear"],[58,107,46,62],[58,109,46,63,"_date"],[58,114,46,68],[58,116,46,70,"options"],[58,123,46,77],[58,124,46,78],[60,4,48,2],[61,4,49,2],[62,4,50,2],[63,4,51,2],[63,11,51,9,"Math"],[63,15,51,13],[63,16,51,14,"round"],[63,21,51,19],[63,22,51,20,"diff"],[63,26,51,24],[63,29,51,27,"millisecondsInWeek"],[63,41,51,45],[63,42,51,45,"millisecondsInWeek"],[63,60,51,45],[63,61,51,46],[63,64,51,49],[63,65,51,50],[64,2,52,0],[66,2,54,0],[67,2,55,0],[67,6,55,0,"_default"],[67,14,55,0],[67,17,55,15,"getWeek"],[67,24,55,22],[68,0,55,23],[68,3]],"functionMap":{"names":["<global>","getWeek"],"mappings":"AAA;OC2C;CDQ"},"hasCjsExports":false},"type":"js/module"}]}