{"dependencies":[{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"],"imports":1}},{"name":"./addDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":39,"index":101}}],"key":"SmN07HKxNCN07W7zancFddtX2UQ=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":37,"index":139}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setDay = setDay;\n  var _libDefaultOptionsJs = require(_dependencyMap[0], \"./_lib/defaultOptions.js\");\n  var _addDaysJs = require(_dependencyMap[1], \"./addDays.js\");\n  var _toDateJs = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link setDay} function options.\n   */\n\n  /**\n   * @name setDay\n   * @category Weekday Helpers\n   * @summary Set the day of the week to the given date.\n   *\n   * @description\n   * Set the day of the week to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param day - The day of the week of the new date\n   * @param options - An object with options.\n   *\n   * @returns The new date with the day of the week set\n   *\n   * @example\n   * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n   * const result = setDay(new Date(2014, 8, 1), 0)\n   * //=> Sun Aug 31 2014 00:00:00\n   *\n   * @example\n   * // Set week day to Sunday, with a weekStartsOn of Monday:\n   * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n   * //=> Sun Sep 07 2014 00:00:00\n   */\n  function setDay(date, day, options) {\n    const defaultOptions = (0, _libDefaultOptionsJs.getDefaultOptions)();\n    const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n    const date_ = (0, _toDateJs.toDate)(date, options?.in);\n    const currentDay = date_.getDay();\n    const remainder = day % 7;\n    const dayIndex = (remainder + 7) % 7;\n    const delta = 7 - weekStartsOn;\n    const diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n    return (0, _addDaysJs.addDays)(date_, diff, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = setDay;\n});","lineCount":62,"map":[[7,2,60,0,"Object"],[7,8,60,0],[7,9,60,0,"defineProperty"],[7,23,60,0],[7,24,60,0,"exports"],[7,31,60,0],[8,4,60,0,"enumerable"],[8,14,60,0],[9,4,60,0,"get"],[9,7,60,0],[9,18,60,0,"get"],[9,19,60,0],[10,6,60,0],[10,13,60,0,"_default"],[10,21,60,0],[11,4,60,0],[12,2,60,0],[13,2,36,0,"exports"],[13,9,36,0],[13,10,36,0,"setDay"],[13,16,36,0],[13,19,36,0,"setDay"],[13,25,36,0],[14,2,1,0],[14,6,1,0,"_libDefaultOptionsJs"],[14,26,1,0],[14,29,1,0,"require"],[14,36,1,0],[14,37,1,0,"_dependencyMap"],[14,51,1,0],[15,2,2,0],[15,6,2,0,"_addDaysJs"],[15,16,2,0],[15,19,2,0,"require"],[15,26,2,0],[15,27,2,0,"_dependencyMap"],[15,41,2,0],[16,2,3,0],[16,6,3,0,"_toDateJs"],[16,15,3,0],[16,18,3,0,"require"],[16,25,3,0],[16,26,3,0,"_dependencyMap"],[16,40,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,2,36,7],[48,11,36,16,"setDay"],[48,17,36,22,"setDay"],[48,18,36,23,"date"],[48,22,36,27],[48,24,36,29,"day"],[48,27,36,32],[48,29,36,34,"options"],[48,36,36,41],[48,38,36,43],[49,4,37,2],[49,10,37,8,"defaultOptions"],[49,24,37,22],[49,27,37,25],[49,31,37,25,"getDefaultOptions"],[49,51,37,42],[49,52,37,42,"getDefaultOptions"],[49,69,37,42],[49,71,37,43],[49,72,37,44],[50,4,38,2],[50,10,38,8,"weekStartsOn"],[50,22,38,20],[50,25,39,4,"options"],[50,32,39,11],[50,34,39,13,"weekStartsOn"],[50,46,39,25],[50,50,40,4,"options"],[50,57,40,11],[50,59,40,13,"locale"],[50,65,40,19],[50,67,40,21,"options"],[50,74,40,28],[50,76,40,30,"weekStartsOn"],[50,88,40,42],[50,92,41,4,"defaultOptions"],[50,106,41,18],[50,107,41,19,"weekStartsOn"],[50,119,41,31],[50,123,42,4,"defaultOptions"],[50,137,42,18],[50,138,42,19,"locale"],[50,144,42,25],[50,146,42,27,"options"],[50,153,42,34],[50,155,42,36,"weekStartsOn"],[50,167,42,48],[50,171,43,4],[50,172,43,5],[51,4,45,2],[51,10,45,8,"date_"],[51,15,45,13],[51,18,45,16],[51,22,45,16,"toDate"],[51,31,45,22],[51,32,45,22,"toDate"],[51,38,45,22],[51,40,45,23,"date"],[51,44,45,27],[51,46,45,29,"options"],[51,53,45,36],[51,55,45,38,"in"],[51,57,45,40],[51,58,45,41],[52,4,46,2],[52,10,46,8,"currentDay"],[52,20,46,18],[52,23,46,21,"date_"],[52,28,46,26],[52,29,46,27,"getDay"],[52,35,46,33],[52,36,46,34],[52,37,46,35],[53,4,48,2],[53,10,48,8,"remainder"],[53,19,48,17],[53,22,48,20,"day"],[53,25,48,23],[53,28,48,26],[53,29,48,27],[54,4,49,2],[54,10,49,8,"dayIndex"],[54,18,49,16],[54,21,49,19],[54,22,49,20,"remainder"],[54,31,49,29],[54,34,49,32],[54,35,49,33],[54,39,49,37],[54,40,49,38],[55,4,51,2],[55,10,51,8,"delta"],[55,15,51,13],[55,18,51,16],[55,19,51,17],[55,22,51,20,"weekStartsOn"],[55,34,51,32],[56,4,52,2],[56,10,52,8,"diff"],[56,14,52,12],[56,17,53,4,"day"],[56,20,53,7],[56,23,53,10],[56,24,53,11],[56,28,53,15,"day"],[56,31,53,18],[56,34,53,21],[56,35,53,22],[56,38,54,8,"day"],[56,41,54,11],[56,44,54,15],[56,45,54,16,"currentDay"],[56,55,54,26],[56,58,54,29,"delta"],[56,63,54,34],[56,67,54,38],[56,68,54,40],[56,71,55,9],[56,72,55,10,"dayIndex"],[56,80,55,18],[56,83,55,21,"delta"],[56,88,55,26],[56,92,55,30],[56,93,55,31],[56,96,55,36],[56,97,55,37,"currentDay"],[56,107,55,47],[56,110,55,50,"delta"],[56,115,55,55],[56,119,55,59],[56,120,55,61],[57,4,56,2],[57,11,56,9],[57,15,56,9,"addDays"],[57,25,56,16],[57,26,56,16,"addDays"],[57,33,56,16],[57,35,56,17,"date_"],[57,40,56,22],[57,42,56,24,"diff"],[57,46,56,28],[57,48,56,30,"options"],[57,55,56,37],[57,56,56,38],[58,2,57,0],[60,2,59,0],[61,2,60,0],[61,6,60,0,"_default"],[61,14,60,0],[61,17,60,15,"setDay"],[61,23,60,21],[62,0,60,22],[62,3]],"functionMap":{"names":["<global>","setDay"],"mappings":"AAA;OCmC;CDqB"},"hasCjsExports":false},"type":"js/module"}]}