{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./addMinutes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":45,"index":110}}],"key":"s7dxRQ5+rZLqB2aItf4QKDpmL0c=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":51,"index":162}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachMinuteOfInterval = eachMinuteOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addMinutesJs = require(_dependencyMap[1], \"./addMinutes.js\");\n  var _constructFromJs = require(_dependencyMap[2], \"./constructFrom.js\");\n  /**\n   * The {@link eachMinuteOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMinuteOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachMinuteOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of minutes within the specified time interval.\n   *\n   * @description\n   * Returns the array of minutes within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of minutes from the minute of the interval start to the minute of the interval end\n   *\n   * @example\n   * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n   * const result = eachMinuteOfInterval({\n   *   start: new Date(2014, 9, 14, 13),\n   *   end: new Date(2014, 9, 14, 13, 3)\n   * })\n   * //=> [\n   * //   Wed Oct 14 2014 13:00:00,\n   * //   Wed Oct 14 2014 13:01:00,\n   * //   Wed Oct 14 2014 13:02:00,\n   * //   Wed Oct 14 2014 13:03:00\n   * // ]\n   */\n  function eachMinuteOfInterval(interval, options) {\n    const {\n      start,\n      end\n    } = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval);\n    // Set to the start of the minute\n    start.setSeconds(0, 0);\n    let reversed = +start > +end;\n    const endTime = reversed ? +start : +end;\n    let date = reversed ? end : start;\n    let step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    const dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date = (0, _addMinutesJs.addMinutes)(date, step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachMinuteOfInterval;\n});","lineCount":83,"map":[[7,2,72,0,"Object"],[7,8,72,0],[7,9,72,0,"defineProperty"],[7,23,72,0],[7,24,72,0,"exports"],[7,31,72,0],[8,4,72,0,"enumerable"],[8,14,72,0],[9,4,72,0,"get"],[9,7,72,0],[9,18,72,0,"get"],[9,19,72,0],[10,6,72,0],[10,13,72,0,"_default"],[10,21,72,0],[11,4,72,0],[12,2,72,0],[13,2,45,0,"exports"],[13,9,45,0],[13,10,45,0,"eachMinuteOfInterval"],[13,30,45,0],[13,33,45,0,"eachMinuteOfInterval"],[13,53,45,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_addMinutesJs"],[15,19,2,0],[15,22,2,0,"require"],[15,29,2,0],[15,30,2,0,"_dependencyMap"],[15,44,2,0],[16,2,3,0],[16,6,3,0,"_constructFromJs"],[16,22,3,0],[16,25,3,0,"require"],[16,32,3,0],[16,33,3,0,"_dependencyMap"],[16,47,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[28,2,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,2,45,7],[57,11,45,16,"eachMinuteOfInterval"],[57,31,45,36,"eachMinuteOfInterval"],[57,32,45,37,"interval"],[57,40,45,45],[57,42,45,47,"options"],[57,49,45,54],[57,51,45,56],[58,4,46,2],[58,10,46,8],[59,6,46,10,"start"],[59,11,46,15],[60,6,46,17,"end"],[61,4,46,21],[61,5,46,22],[61,8,46,25],[61,12,46,25,"normalizeInterval"],[61,35,46,42],[61,36,46,42,"normalizeInterval"],[61,53,46,42],[61,55,46,43,"options"],[61,62,46,50],[61,64,46,52,"in"],[61,66,46,54],[61,68,46,56,"interval"],[61,76,46,64],[61,77,46,65],[62,4,47,2],[63,4,48,2,"start"],[63,9,48,7],[63,10,48,8,"setSeconds"],[63,20,48,18],[63,21,48,19],[63,22,48,20],[63,24,48,22],[63,25,48,23],[63,26,48,24],[64,4,50,2],[64,8,50,6,"reversed"],[64,16,50,14],[64,19,50,17],[64,20,50,18,"start"],[64,25,50,23],[64,28,50,26],[64,29,50,27,"end"],[64,32,50,30],[65,4,51,2],[65,10,51,8,"endTime"],[65,17,51,15],[65,20,51,18,"reversed"],[65,28,51,26],[65,31,51,29],[65,32,51,30,"start"],[65,37,51,35],[65,40,51,38],[65,41,51,39,"end"],[65,44,51,42],[66,4,52,2],[66,8,52,6,"date"],[66,12,52,10],[66,15,52,13,"reversed"],[66,23,52,21],[66,26,52,24,"end"],[66,29,52,27],[66,32,52,30,"start"],[66,37,52,35],[67,4,54,2],[67,8,54,6,"step"],[67,12,54,10],[67,15,54,13,"options"],[67,22,54,20],[67,24,54,22,"step"],[67,28,54,26],[67,32,54,30],[67,33,54,31],[68,4,55,2],[68,8,55,6],[68,9,55,7,"step"],[68,13,55,11],[68,15,55,13],[68,22,55,20],[68,24,55,22],[69,4,56,2],[69,8,56,6,"step"],[69,12,56,10],[69,15,56,13],[69,16,56,14],[69,18,56,16],[70,6,57,4,"step"],[70,10,57,8],[70,13,57,11],[70,14,57,12,"step"],[70,18,57,16],[71,6,58,4,"reversed"],[71,14,58,12],[71,17,58,15],[71,18,58,16,"reversed"],[71,26,58,24],[72,4,59,2],[73,4,61,2],[73,10,61,8,"dates"],[73,15,61,13],[73,18,61,16],[73,20,61,18],[74,4,63,2],[74,11,63,9],[74,12,63,10,"date"],[74,16,63,14],[74,20,63,18,"endTime"],[74,27,63,25],[74,29,63,27],[75,6,64,4,"dates"],[75,11,64,9],[75,12,64,10,"push"],[75,16,64,14],[75,17,64,15],[75,21,64,15,"constructFrom"],[75,37,64,28],[75,38,64,28,"constructFrom"],[75,51,64,28],[75,53,64,29,"start"],[75,58,64,34],[75,60,64,36,"date"],[75,64,64,40],[75,65,64,41],[75,66,64,42],[76,6,65,4,"date"],[76,10,65,8],[76,13,65,11],[76,17,65,11,"addMinutes"],[76,30,65,21],[76,31,65,21,"addMinutes"],[76,41,65,21],[76,43,65,22,"date"],[76,47,65,26],[76,49,65,28,"step"],[76,53,65,32],[76,54,65,33],[77,4,66,2],[78,4,68,2],[78,11,68,9,"reversed"],[78,19,68,17],[78,22,68,20,"dates"],[78,27,68,25],[78,28,68,26,"reverse"],[78,35,68,33],[78,36,68,34],[78,37,68,35],[78,40,68,38,"dates"],[78,45,68,43],[79,2,69,0],[81,2,71,0],[82,2,72,0],[82,6,72,0,"_default"],[82,14,72,0],[82,17,72,15,"eachMinuteOfInterval"],[82,37,72,35],[83,0,72,36],[83,3]],"functionMap":{"names":["<global>","eachMinuteOfInterval"],"mappings":"AAA;OC4C;CDwB"},"hasCjsExports":false},"type":"js/module"}]}