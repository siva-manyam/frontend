{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.millisecondsToHours = millisecondsToHours;\n  var _constantsJs = require(_dependencyMap[0], \"./constants.js\");\n  /**\n   * @name millisecondsToHours\n   * @category Conversion Helpers\n   * @summary Convert milliseconds to hours.\n   *\n   * @description\n   * Convert a number of milliseconds to a full number of hours.\n   *\n   * @param milliseconds - The number of milliseconds to be converted\n   *\n   * @returns The number of milliseconds converted in hours\n   *\n   * @example\n   * // Convert 7200000 milliseconds to hours:\n   * const result = millisecondsToHours(7200000)\n   * //=> 2\n   *\n   * @example\n   * // It uses floor rounding:\n   * const result = millisecondsToHours(7199999)\n   * //=> 1\n   */\n  function millisecondsToHours(milliseconds) {\n    const hours = milliseconds / _constantsJs.millisecondsInHour;\n    return Math.trunc(hours);\n  }\n\n  // Fallback for modularized imports:\n  var _default = millisecondsToHours;\n});","lineCount":44,"map":[[7,2,31,0,"Object"],[7,8,31,0],[7,9,31,0,"defineProperty"],[7,23,31,0],[7,24,31,0,"exports"],[7,31,31,0],[8,4,31,0,"enumerable"],[8,14,31,0],[9,4,31,0,"get"],[9,7,31,0],[9,18,31,0,"get"],[9,19,31,0],[10,6,31,0],[10,13,31,0,"_default"],[10,21,31,0],[11,4,31,0],[12,2,31,0],[13,2,25,0,"exports"],[13,9,25,0],[13,10,25,0,"millisecondsToHours"],[13,29,25,0],[13,32,25,0,"millisecondsToHours"],[13,51,25,0],[14,2,1,0],[14,6,1,0,"_constantsJs"],[14,18,1,0],[14,21,1,0,"require"],[14,28,1,0],[14,29,1,0,"_dependencyMap"],[14,43,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,2,25,7],[37,11,25,16,"millisecondsToHours"],[37,30,25,35,"millisecondsToHours"],[37,31,25,36,"milliseconds"],[37,43,25,48],[37,45,25,50],[38,4,26,2],[38,10,26,8,"hours"],[38,15,26,13],[38,18,26,16,"milliseconds"],[38,30,26,28],[38,33,26,31,"millisecondsInHour"],[38,45,26,49],[38,46,26,49,"millisecondsInHour"],[38,64,26,49],[39,4,27,2],[39,11,27,9,"Math"],[39,15,27,13],[39,16,27,14,"trunc"],[39,21,27,19],[39,22,27,20,"hours"],[39,27,27,25],[39,28,27,26],[40,2,28,0],[42,2,30,0],[43,2,31,0],[43,6,31,0,"_default"],[43,14,31,0],[43,17,31,15,"millisecondsToHours"],[43,36,31,34],[44,0,31,35],[44,3]],"functionMap":{"names":["<global>","millisecondsToHours"],"mappings":"AAA;OCwB;CDG"},"hasCjsExports":false},"type":"js/module"}]}