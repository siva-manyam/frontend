{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.constructNow = constructNow;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  /**\n   * @name constructNow\n   * @category Generic Helpers\n   * @summary Constructs a new current date using the passed value constructor.\n   * @pure false\n   *\n   * @description\n   * The function constructs a new current date using the constructor from\n   * the reference date. It helps to build generic functions that accept date\n   * extensions and use the current date.\n   *\n   * It defaults to `Date` if the passed reference date is a number or a string.\n   *\n   * @param date - The reference date to take constructor from\n   *\n   * @returns Current date initialized using the given date constructor\n   *\n   * @example\n   * import { constructNow, isSameDay } from 'date-fns'\n   *\n   * function isToday<DateType extends Date>(\n   *   date: DateArg<DateType>,\n   * ): boolean {\n   *   // If we were to use `new Date()` directly, the function would  behave\n   *   // differently in different timezones and return false for the same date.\n   *   return isSameDay(date, constructNow(date));\n   * }\n   */\n  function constructNow(date) {\n    return (0, _constructFromJs.constructFrom)(date, Date.now());\n  }\n\n  // Fallback for modularized imports:\n  var _default = constructNow;\n});","lineCount":49,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"_default"],[10,21,36,0],[11,4,36,0],[12,2,36,0],[13,2,31,0,"exports"],[13,9,31,0],[13,10,31,0,"constructNow"],[13,22,31,0],[13,25,31,0,"constructNow"],[13,37,31,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,2,31,7],[43,11,31,16,"constructNow"],[43,23,31,28,"constructNow"],[43,24,31,29,"date"],[43,28,31,33],[43,30,31,35],[44,4,32,2],[44,11,32,9],[44,15,32,9,"constructFrom"],[44,31,32,22],[44,32,32,22,"constructFrom"],[44,45,32,22],[44,47,32,23,"date"],[44,51,32,27],[44,53,32,29,"Date"],[44,57,32,33],[44,58,32,34,"now"],[44,61,32,37],[44,62,32,38],[44,63,32,39],[44,64,32,40],[45,2,33,0],[47,2,35,0],[48,2,36,0],[48,6,36,0,"_default"],[48,14,36,0],[48,17,36,15,"constructNow"],[48,29,36,27],[49,0,36,28],[49,3]],"functionMap":{"names":["<global>","constructNow"],"mappings":"AAA;OC8B;CDE"},"hasCjsExports":false},"type":"js/module"}]}