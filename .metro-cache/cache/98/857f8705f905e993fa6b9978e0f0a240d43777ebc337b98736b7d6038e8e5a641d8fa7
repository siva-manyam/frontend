{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.compareDesc = compareDesc;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * @name compareDesc\n   * @category Common Helpers\n   * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n   *\n   * @description\n   * Compare the two dates and return -1 if the first date is after the second,\n   * 1 if the first date is before the second or 0 if dates are equal.\n   *\n   * @param dateLeft - The first date to compare\n   * @param dateRight - The second date to compare\n   *\n   * @returns The result of the comparison\n   *\n   * @example\n   * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n   * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n   * //=> 1\n   *\n   * @example\n   * // Sort the array of dates in reverse chronological order:\n   * const result = [\n   *   new Date(1995, 6, 2),\n   *   new Date(1987, 1, 11),\n   *   new Date(1989, 6, 10)\n   * ].sort(compareDesc)\n   * //=> [\n   * //   Sun Jul 02 1995 00:00:00,\n   * //   Mon Jul 10 1989 00:00:00,\n   * //   Wed Feb 11 1987 00:00:00\n   * // ]\n   */\n  function compareDesc(dateLeft, dateRight) {\n    const diff = +(0, _toDateJs.toDate)(dateLeft) - +(0, _toDateJs.toDate)(dateRight);\n    if (diff > 0) return -1;else if (diff < 0) return 1;\n\n    // Return 0 if diff is 0; return NaN if diff is NaN\n    return diff;\n  }\n\n  // Fallback for modularized imports:\n  var _default = compareDesc;\n});","lineCount":57,"map":[[7,2,46,0,"Object"],[7,8,46,0],[7,9,46,0,"defineProperty"],[7,23,46,0],[7,24,46,0,"exports"],[7,31,46,0],[8,4,46,0,"enumerable"],[8,14,46,0],[9,4,46,0,"get"],[9,7,46,0],[9,18,46,0,"get"],[9,19,46,0],[10,6,46,0],[10,13,46,0,"_default"],[10,21,46,0],[11,4,46,0],[12,2,46,0],[13,2,35,0,"exports"],[13,9,35,0],[13,10,35,0,"compareDesc"],[13,21,35,0],[13,24,35,0,"compareDesc"],[13,35,35,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,2,35,7],[47,11,35,16,"compareDesc"],[47,22,35,27,"compareDesc"],[47,23,35,28,"dateLeft"],[47,31,35,36],[47,33,35,38,"dateRight"],[47,42,35,47],[47,44,35,49],[48,4,36,2],[48,10,36,8,"diff"],[48,14,36,12],[48,17,36,15],[48,18,36,16],[48,22,36,16,"toDate"],[48,31,36,22],[48,32,36,22,"toDate"],[48,38,36,22],[48,40,36,23,"dateLeft"],[48,48,36,31],[48,49,36,32],[48,52,36,35],[48,53,36,36],[48,57,36,36,"toDate"],[48,66,36,42],[48,67,36,42,"toDate"],[48,73,36,42],[48,75,36,43,"dateRight"],[48,84,36,52],[48,85,36,53],[49,4,38,2],[49,8,38,6,"diff"],[49,12,38,10],[49,15,38,13],[49,16,38,14],[49,18,38,16],[49,25,38,23],[49,26,38,24],[49,27,38,25],[49,28,38,26],[49,33,39,7],[49,37,39,11,"diff"],[49,41,39,15],[49,44,39,18],[49,45,39,19],[49,47,39,21],[49,54,39,28],[49,55,39,29],[51,4,41,2],[52,4,42,2],[52,11,42,9,"diff"],[52,15,42,13],[53,2,43,0],[55,2,45,0],[56,2,46,0],[56,6,46,0,"_default"],[56,14,46,0],[56,17,46,15,"compareDesc"],[56,28,46,26],[57,0,46,27],[57,3]],"functionMap":{"names":["<global>","compareDesc"],"mappings":"AAA;OCkC;CDQ"},"hasCjsExports":false},"type":"js/module"}]}