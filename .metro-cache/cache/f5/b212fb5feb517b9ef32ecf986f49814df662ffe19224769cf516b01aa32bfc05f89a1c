{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"longFormatters\", {\n    enumerable: true,\n    get: function () {\n      return longFormatters;\n    }\n  });\n  const dateLongFormatter = (pattern, formatLong) => {\n    switch (pattern) {\n      case \"P\":\n        return formatLong.date({\n          width: \"short\"\n        });\n      case \"PP\":\n        return formatLong.date({\n          width: \"medium\"\n        });\n      case \"PPP\":\n        return formatLong.date({\n          width: \"long\"\n        });\n      case \"PPPP\":\n      default:\n        return formatLong.date({\n          width: \"full\"\n        });\n    }\n  };\n  const timeLongFormatter = (pattern, formatLong) => {\n    switch (pattern) {\n      case \"p\":\n        return formatLong.time({\n          width: \"short\"\n        });\n      case \"pp\":\n        return formatLong.time({\n          width: \"medium\"\n        });\n      case \"ppp\":\n        return formatLong.time({\n          width: \"long\"\n        });\n      case \"pppp\":\n      default:\n        return formatLong.time({\n          width: \"full\"\n        });\n    }\n  };\n  const dateTimeLongFormatter = (pattern, formatLong) => {\n    const matchResult = pattern.match(/(P+)(p+)?/) || [];\n    const datePattern = matchResult[1];\n    const timePattern = matchResult[2];\n    if (!timePattern) {\n      return dateLongFormatter(pattern, formatLong);\n    }\n    let dateTimeFormat;\n    switch (datePattern) {\n      case \"P\":\n        dateTimeFormat = formatLong.dateTime({\n          width: \"short\"\n        });\n        break;\n      case \"PP\":\n        dateTimeFormat = formatLong.dateTime({\n          width: \"medium\"\n        });\n        break;\n      case \"PPP\":\n        dateTimeFormat = formatLong.dateTime({\n          width: \"long\"\n        });\n        break;\n      case \"PPPP\":\n      default:\n        dateTimeFormat = formatLong.dateTime({\n          width: \"full\"\n        });\n        break;\n    }\n    return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n  };\n  const longFormatters = {\n    p: timeLongFormatter,\n    P: dateTimeLongFormatter\n  };\n});","lineCount":92,"map":[[7,2,61,0,"Object"],[7,8,61,0],[7,9,61,0,"defineProperty"],[7,23,61,0],[7,24,61,0,"exports"],[7,31,61,0],[8,4,61,0,"enumerable"],[8,14,61,0],[9,4,61,0,"get"],[9,7,61,0],[9,18,61,0,"get"],[9,19,61,0],[10,6,61,0],[10,13,61,0,"longFormatters"],[10,27,61,0],[11,4,61,0],[12,2,61,0],[13,2,1,0],[13,8,1,6,"dateLongFormatter"],[13,25,1,23],[13,28,1,26,"dateLongFormatter"],[13,29,1,27,"pattern"],[13,36,1,34],[13,38,1,36,"formatLong"],[13,48,1,46],[13,53,1,51],[14,4,2,2],[14,12,2,10,"pattern"],[14,19,2,17],[15,6,3,4],[15,11,3,9],[15,14,3,12],[16,8,4,6],[16,15,4,13,"formatLong"],[16,25,4,23],[16,26,4,24,"date"],[16,30,4,28],[16,31,4,29],[17,10,4,31,"width"],[17,15,4,36],[17,17,4,38],[18,8,4,46],[18,9,4,47],[18,10,4,48],[19,6,5,4],[19,11,5,9],[19,15,5,13],[20,8,6,6],[20,15,6,13,"formatLong"],[20,25,6,23],[20,26,6,24,"date"],[20,30,6,28],[20,31,6,29],[21,10,6,31,"width"],[21,15,6,36],[21,17,6,38],[22,8,6,47],[22,9,6,48],[22,10,6,49],[23,6,7,4],[23,11,7,9],[23,16,7,14],[24,8,8,6],[24,15,8,13,"formatLong"],[24,25,8,23],[24,26,8,24,"date"],[24,30,8,28],[24,31,8,29],[25,10,8,31,"width"],[25,15,8,36],[25,17,8,38],[26,8,8,45],[26,9,8,46],[26,10,8,47],[27,6,9,4],[27,11,9,9],[27,17,9,15],[28,6,10,4],[29,8,11,6],[29,15,11,13,"formatLong"],[29,25,11,23],[29,26,11,24,"date"],[29,30,11,28],[29,31,11,29],[30,10,11,31,"width"],[30,15,11,36],[30,17,11,38],[31,8,11,45],[31,9,11,46],[31,10,11,47],[32,4,12,2],[33,2,13,0],[33,3,13,1],[34,2,15,0],[34,8,15,6,"timeLongFormatter"],[34,25,15,23],[34,28,15,26,"timeLongFormatter"],[34,29,15,27,"pattern"],[34,36,15,34],[34,38,15,36,"formatLong"],[34,48,15,46],[34,53,15,51],[35,4,16,2],[35,12,16,10,"pattern"],[35,19,16,17],[36,6,17,4],[36,11,17,9],[36,14,17,12],[37,8,18,6],[37,15,18,13,"formatLong"],[37,25,18,23],[37,26,18,24,"time"],[37,30,18,28],[37,31,18,29],[38,10,18,31,"width"],[38,15,18,36],[38,17,18,38],[39,8,18,46],[39,9,18,47],[39,10,18,48],[40,6,19,4],[40,11,19,9],[40,15,19,13],[41,8,20,6],[41,15,20,13,"formatLong"],[41,25,20,23],[41,26,20,24,"time"],[41,30,20,28],[41,31,20,29],[42,10,20,31,"width"],[42,15,20,36],[42,17,20,38],[43,8,20,47],[43,9,20,48],[43,10,20,49],[44,6,21,4],[44,11,21,9],[44,16,21,14],[45,8,22,6],[45,15,22,13,"formatLong"],[45,25,22,23],[45,26,22,24,"time"],[45,30,22,28],[45,31,22,29],[46,10,22,31,"width"],[46,15,22,36],[46,17,22,38],[47,8,22,45],[47,9,22,46],[47,10,22,47],[48,6,23,4],[48,11,23,9],[48,17,23,15],[49,6,24,4],[50,8,25,6],[50,15,25,13,"formatLong"],[50,25,25,23],[50,26,25,24,"time"],[50,30,25,28],[50,31,25,29],[51,10,25,31,"width"],[51,15,25,36],[51,17,25,38],[52,8,25,45],[52,9,25,46],[52,10,25,47],[53,4,26,2],[54,2,27,0],[54,3,27,1],[55,2,29,0],[55,8,29,6,"dateTimeLongFormatter"],[55,29,29,27],[55,32,29,30,"dateTimeLongFormatter"],[55,33,29,31,"pattern"],[55,40,29,38],[55,42,29,40,"formatLong"],[55,52,29,50],[55,57,29,55],[56,4,30,2],[56,10,30,8,"matchResult"],[56,21,30,19],[56,24,30,22,"pattern"],[56,31,30,29],[56,32,30,30,"match"],[56,37,30,35],[56,38,30,36],[56,49,30,47],[56,50,30,48],[56,54,30,52],[56,56,30,54],[57,4,31,2],[57,10,31,8,"datePattern"],[57,21,31,19],[57,24,31,22,"matchResult"],[57,35,31,33],[57,36,31,34],[57,37,31,35],[57,38,31,36],[58,4,32,2],[58,10,32,8,"timePattern"],[58,21,32,19],[58,24,32,22,"matchResult"],[58,35,32,33],[58,36,32,34],[58,37,32,35],[58,38,32,36],[59,4,34,2],[59,8,34,6],[59,9,34,7,"timePattern"],[59,20,34,18],[59,22,34,20],[60,6,35,4],[60,13,35,11,"dateLongFormatter"],[60,30,35,28],[60,31,35,29,"pattern"],[60,38,35,36],[60,40,35,38,"formatLong"],[60,50,35,48],[60,51,35,49],[61,4,36,2],[62,4,38,2],[62,8,38,6,"dateTimeFormat"],[62,22,38,20],[63,4,40,2],[63,12,40,10,"datePattern"],[63,23,40,21],[64,6,41,4],[64,11,41,9],[64,14,41,12],[65,8,42,6,"dateTimeFormat"],[65,22,42,20],[65,25,42,23,"formatLong"],[65,35,42,33],[65,36,42,34,"dateTime"],[65,44,42,42],[65,45,42,43],[66,10,42,45,"width"],[66,15,42,50],[66,17,42,52],[67,8,42,60],[67,9,42,61],[67,10,42,62],[68,8,43,6],[69,6,44,4],[69,11,44,9],[69,15,44,13],[70,8,45,6,"dateTimeFormat"],[70,22,45,20],[70,25,45,23,"formatLong"],[70,35,45,33],[70,36,45,34,"dateTime"],[70,44,45,42],[70,45,45,43],[71,10,45,45,"width"],[71,15,45,50],[71,17,45,52],[72,8,45,61],[72,9,45,62],[72,10,45,63],[73,8,46,6],[74,6,47,4],[74,11,47,9],[74,16,47,14],[75,8,48,6,"dateTimeFormat"],[75,22,48,20],[75,25,48,23,"formatLong"],[75,35,48,33],[75,36,48,34,"dateTime"],[75,44,48,42],[75,45,48,43],[76,10,48,45,"width"],[76,15,48,50],[76,17,48,52],[77,8,48,59],[77,9,48,60],[77,10,48,61],[78,8,49,6],[79,6,50,4],[79,11,50,9],[79,17,50,15],[80,6,51,4],[81,8,52,6,"dateTimeFormat"],[81,22,52,20],[81,25,52,23,"formatLong"],[81,35,52,33],[81,36,52,34,"dateTime"],[81,44,52,42],[81,45,52,43],[82,10,52,45,"width"],[82,15,52,50],[82,17,52,52],[83,8,52,59],[83,9,52,60],[83,10,52,61],[84,8,53,6],[85,4,54,2],[86,4,56,2],[86,11,56,9,"dateTimeFormat"],[86,25,56,23],[86,26,57,5,"replace"],[86,33,57,12],[86,34,57,13],[86,44,57,23],[86,46,57,25,"dateLongFormatter"],[86,63,57,42],[86,64,57,43,"datePattern"],[86,75,57,54],[86,77,57,56,"formatLong"],[86,87,57,66],[86,88,57,67],[86,89,57,68],[86,90,58,5,"replace"],[86,97,58,12],[86,98,58,13],[86,108,58,23],[86,110,58,25,"timeLongFormatter"],[86,127,58,42],[86,128,58,43,"timePattern"],[86,139,58,54],[86,141,58,56,"formatLong"],[86,151,58,66],[86,152,58,67],[86,153,58,68],[87,2,59,0],[87,3,59,1],[88,2,61,7],[88,8,61,13,"longFormatters"],[88,22,61,27],[88,25,61,30],[89,4,62,2,"p"],[89,5,62,3],[89,7,62,5,"timeLongFormatter"],[89,24,62,22],[90,4,63,2,"P"],[90,5,63,3],[90,7,63,5,"dateTimeLongFormatter"],[91,2,64,0],[91,3,64,1],[92,0,64,2],[92,3]],"functionMap":{"names":["<global>","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter"],"mappings":"AAA,0BC;CDY;0BEE;CFY;8BGE;CH8B"},"hasCjsExports":false},"type":"js/module"}]}