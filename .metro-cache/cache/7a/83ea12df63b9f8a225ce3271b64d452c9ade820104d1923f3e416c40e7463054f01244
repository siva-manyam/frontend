{"dependencies":[{"name":"./getWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"JQpCU31TSQ7VLZQh7BLQCEFtbGo=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":37,"index":77}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setWeek = setWeek;\n  var _getWeekJs = require(_dependencyMap[0], \"./getWeek.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link setWeek} function options.\n   */\n\n  /**\n   * @name setWeek\n   * @category Week Helpers\n   * @summary Set the local week to the given date.\n   *\n   * @description\n   * Set the local week to the given date, saving the weekday number.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param week - The week of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the local week set\n   *\n   * @example\n   * // Set the 1st week to 2 January 2005 with default options:\n   * const result = setWeek(new Date(2005, 0, 2), 1)\n   * //=> Sun Dec 26 2004 00:00:00\n   *\n   * @example\n   * // Set the 1st week to 2 January 2005,\n   * // if Monday is the first day of the week,\n   * // and the first week of the year always contains 4 January:\n   * const result = setWeek(new Date(2005, 0, 2), 1, {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> Sun Jan 4 2004 00:00:00\n   */\n  function setWeek(date, week, options) {\n    const date_ = (0, _toDateJs.toDate)(date, options?.in);\n    const diff = (0, _getWeekJs.getWeek)(date_, options) - week;\n    date_.setDate(date_.getDate() - diff * 7);\n    return (0, _toDateJs.toDate)(date_, options?.in);\n  }\n\n  // Fallback for modularized imports:\n  var _default = setWeek;\n});","lineCount":67,"map":[[7,2,54,0,"Object"],[7,8,54,0],[7,9,54,0,"defineProperty"],[7,23,54,0],[7,24,54,0,"exports"],[7,31,54,0],[8,4,54,0,"enumerable"],[8,14,54,0],[9,4,54,0,"get"],[9,7,54,0],[9,18,54,0,"get"],[9,19,54,0],[10,6,54,0],[10,13,54,0,"_default"],[10,21,54,0],[11,4,54,0],[12,2,54,0],[13,2,46,0,"exports"],[13,9,46,0],[13,10,46,0,"setWeek"],[13,17,46,0],[13,20,46,0,"setWeek"],[13,27,46,0],[14,2,1,0],[14,6,1,0,"_getWeekJs"],[14,16,1,0],[14,19,1,0,"require"],[14,26,1,0],[14,27,1,0,"_dependencyMap"],[14,41,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,2,46,7],[58,11,46,16,"setWeek"],[58,18,46,23,"setWeek"],[58,19,46,24,"date"],[58,23,46,28],[58,25,46,30,"week"],[58,29,46,34],[58,31,46,36,"options"],[58,38,46,43],[58,40,46,45],[59,4,47,2],[59,10,47,8,"date_"],[59,15,47,13],[59,18,47,16],[59,22,47,16,"toDate"],[59,31,47,22],[59,32,47,22,"toDate"],[59,38,47,22],[59,40,47,23,"date"],[59,44,47,27],[59,46,47,29,"options"],[59,53,47,36],[59,55,47,38,"in"],[59,57,47,40],[59,58,47,41],[60,4,48,2],[60,10,48,8,"diff"],[60,14,48,12],[60,17,48,15],[60,21,48,15,"getWeek"],[60,31,48,22],[60,32,48,22,"getWeek"],[60,39,48,22],[60,41,48,23,"date_"],[60,46,48,28],[60,48,48,30,"options"],[60,55,48,37],[60,56,48,38],[60,59,48,41,"week"],[60,63,48,45],[61,4,49,2,"date_"],[61,9,49,7],[61,10,49,8,"setDate"],[61,17,49,15],[61,18,49,16,"date_"],[61,23,49,21],[61,24,49,22,"getDate"],[61,31,49,29],[61,32,49,30],[61,33,49,31],[61,36,49,34,"diff"],[61,40,49,38],[61,43,49,41],[61,44,49,42],[61,45,49,43],[62,4,50,2],[62,11,50,9],[62,15,50,9,"toDate"],[62,24,50,15],[62,25,50,15,"toDate"],[62,31,50,15],[62,33,50,16,"date_"],[62,38,50,21],[62,40,50,23,"options"],[62,47,50,30],[62,49,50,32,"in"],[62,51,50,34],[62,52,50,35],[63,2,51,0],[65,2,53,0],[66,2,54,0],[66,6,54,0,"_default"],[66,14,54,0],[66,17,54,15,"setWeek"],[66,24,54,22],[67,0,54,23],[67,3]],"functionMap":{"names":["<global>","setWeek"],"mappings":"AAA;OC6C;CDK"},"hasCjsExports":false},"type":"js/module"}]}