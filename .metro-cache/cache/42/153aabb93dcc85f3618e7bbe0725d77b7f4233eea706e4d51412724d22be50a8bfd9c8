{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.milliseconds = milliseconds;\n  var _constantsJs = require(_dependencyMap[0], \"./constants.js\");\n  /**\n   * @name milliseconds\n   * @category Millisecond Helpers\n   * @summary\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * @description\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * One years equals 365.2425 days according to the formula:\n   *\n   * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n   * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n   *\n   * One month is a year divided by 12.\n   *\n   * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n   *\n   * @returns The milliseconds\n   *\n   * @example\n   * // 1 year in milliseconds\n   * milliseconds({ years: 1 })\n   * //=> 31556952000\n   *\n   * // 3 months in milliseconds\n   * milliseconds({ months: 3 })\n   * //=> 7889238000\n   */\n  function milliseconds({\n    years,\n    months,\n    weeks,\n    days,\n    hours,\n    minutes,\n    seconds\n  }) {\n    let totalDays = 0;\n    if (years) totalDays += years * _constantsJs.daysInYear;\n    if (months) totalDays += months * (_constantsJs.daysInYear / 12);\n    if (weeks) totalDays += weeks * 7;\n    if (days) totalDays += days;\n    let totalSeconds = totalDays * 24 * 60 * 60;\n    if (hours) totalSeconds += hours * 60 * 60;\n    if (minutes) totalSeconds += minutes * 60;\n    if (seconds) totalSeconds += seconds;\n    return Math.trunc(totalSeconds * 1000);\n  }\n\n  // Fallback for modularized imports:\n  var _default = milliseconds;\n});","lineCount":67,"map":[[7,2,58,0,"Object"],[7,8,58,0],[7,9,58,0,"defineProperty"],[7,23,58,0],[7,24,58,0,"exports"],[7,31,58,0],[8,4,58,0,"enumerable"],[8,14,58,0],[9,4,58,0,"get"],[9,7,58,0],[9,18,58,0,"get"],[9,19,58,0],[10,6,58,0],[10,13,58,0,"_default"],[10,21,58,0],[11,4,58,0],[12,2,58,0],[13,2,32,0,"exports"],[13,9,32,0],[13,10,32,0,"milliseconds"],[13,22,32,0],[13,25,32,0,"milliseconds"],[13,37,32,0],[14,2,1,0],[14,6,1,0,"_constantsJs"],[14,18,1,0],[14,21,1,0,"require"],[14,28,1,0],[14,29,1,0,"_dependencyMap"],[14,43,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,2,32,7],[44,11,32,16,"milliseconds"],[44,23,32,28,"milliseconds"],[44,24,32,29],[45,4,33,2,"years"],[45,9,33,7],[46,4,34,2,"months"],[46,10,34,8],[47,4,35,2,"weeks"],[47,9,35,7],[48,4,36,2,"days"],[48,8,36,6],[49,4,37,2,"hours"],[49,9,37,7],[50,4,38,2,"minutes"],[50,11,38,9],[51,4,39,2,"seconds"],[52,2,40,0],[52,3,40,1],[52,5,40,3],[53,4,41,2],[53,8,41,6,"totalDays"],[53,17,41,15],[53,20,41,18],[53,21,41,19],[54,4,43,2],[54,8,43,6,"years"],[54,13,43,11],[54,15,43,13,"totalDays"],[54,24,43,22],[54,28,43,26,"years"],[54,33,43,31],[54,36,43,34,"daysInYear"],[54,48,43,44],[54,49,43,44,"daysInYear"],[54,59,43,44],[55,4,44,2],[55,8,44,6,"months"],[55,14,44,12],[55,16,44,14,"totalDays"],[55,25,44,23],[55,29,44,27,"months"],[55,35,44,33],[55,39,44,37,"daysInYear"],[55,51,44,47],[55,52,44,47,"daysInYear"],[55,62,44,47],[55,65,44,50],[55,67,44,52],[55,68,44,53],[56,4,45,2],[56,8,45,6,"weeks"],[56,13,45,11],[56,15,45,13,"totalDays"],[56,24,45,22],[56,28,45,26,"weeks"],[56,33,45,31],[56,36,45,34],[56,37,45,35],[57,4,46,2],[57,8,46,6,"days"],[57,12,46,10],[57,14,46,12,"totalDays"],[57,23,46,21],[57,27,46,25,"days"],[57,31,46,29],[58,4,48,2],[58,8,48,6,"totalSeconds"],[58,20,48,18],[58,23,48,21,"totalDays"],[58,32,48,30],[58,35,48,33],[58,37,48,35],[58,40,48,38],[58,42,48,40],[58,45,48,43],[58,47,48,45],[59,4,50,2],[59,8,50,6,"hours"],[59,13,50,11],[59,15,50,13,"totalSeconds"],[59,27,50,25],[59,31,50,29,"hours"],[59,36,50,34],[59,39,50,37],[59,41,50,39],[59,44,50,42],[59,46,50,44],[60,4,51,2],[60,8,51,6,"minutes"],[60,15,51,13],[60,17,51,15,"totalSeconds"],[60,29,51,27],[60,33,51,31,"minutes"],[60,40,51,38],[60,43,51,41],[60,45,51,43],[61,4,52,2],[61,8,52,6,"seconds"],[61,15,52,13],[61,17,52,15,"totalSeconds"],[61,29,52,27],[61,33,52,31,"seconds"],[61,40,52,38],[62,4,54,2],[62,11,54,9,"Math"],[62,15,54,13],[62,16,54,14,"trunc"],[62,21,54,19],[62,22,54,20,"totalSeconds"],[62,34,54,32],[62,37,54,35],[62,41,54,39],[62,42,54,40],[63,2,55,0],[65,2,57,0],[66,2,58,0],[66,6,58,0,"_default"],[66,14,58,0],[66,17,58,15,"milliseconds"],[66,29,58,27],[67,0,58,28],[67,3]],"functionMap":{"names":["<global>","milliseconds"],"mappings":"AAA;OC+B;CDuB"},"hasCjsExports":false},"type":"js/module"}]}