{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.addMonths = addMonths;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link addMonths} function options.\n   */\n\n  /**\n   * @name addMonths\n   * @category Month Helpers\n   * @summary Add the specified number of months to the given date.\n   *\n   * @description\n   * Add the specified number of months to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of months to be added.\n   * @param options - The options object\n   *\n   * @returns The new date with the months added\n   *\n   * @example\n   * // Add 5 months to 1 September 2014:\n   * const result = addMonths(new Date(2014, 8, 1), 5)\n   * //=> Sun Feb 01 2015 00:00:00\n   *\n   * // Add one month to 30 January 2023:\n   * const result = addMonths(new Date(2023, 0, 30), 1)\n   * //=> Tue Feb 28 2023 00:00:00\n   */\n  function addMonths(date, amount, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    if (isNaN(amount)) return (0, _constructFromJs.constructFrom)(options?.in || date, NaN);\n    if (!amount) {\n      // If 0 months, no-op to avoid changing times in the hour before end of DST\n      return _date;\n    }\n    const dayOfMonth = _date.getDate();\n\n    // The JS Date object supports date math by accepting out-of-bounds values for\n    // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n    // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n    // want except that dates will wrap around the end of a month, meaning that\n    // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n    // we'll default to the end of the desired month by adding 1 to the desired\n    // month and using a date of 0 to back up one day to the end of the desired\n    // month.\n    const endOfDesiredMonth = (0, _constructFromJs.constructFrom)(options?.in || date, _date.getTime());\n    endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n    const daysInMonth = endOfDesiredMonth.getDate();\n    if (dayOfMonth >= daysInMonth) {\n      // If we're already at the end of the month, then this is the correct date\n      // and we're done.\n      return endOfDesiredMonth;\n    } else {\n      // Otherwise, we now know that setting the original day-of-month value won't\n      // cause an overflow, so set the desired day-of-month. Note that we can't\n      // just set the date of `endOfDesiredMonth` because that object may have had\n      // its time changed in the unusual case where where a DST transition was on\n      // the last day of the month and its local time was in the hour skipped or\n      // repeated next to a DST transition.  So we use `date` instead which is\n      // guaranteed to still have the original time.\n      _date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n      return _date;\n    }\n  }\n\n  // Fallback for modularized imports:\n  var _default = addMonths;\n});","lineCount":85,"map":[[7,2,76,0,"Object"],[7,8,76,0],[7,9,76,0,"defineProperty"],[7,23,76,0],[7,24,76,0,"exports"],[7,31,76,0],[8,4,76,0,"enumerable"],[8,14,76,0],[9,4,76,0,"get"],[9,7,76,0],[9,18,76,0,"get"],[9,19,76,0],[10,6,76,0],[10,13,76,0,"_default"],[10,21,76,0],[11,4,76,0],[12,2,76,0],[13,2,34,0,"exports"],[13,9,34,0],[13,10,34,0,"addMonths"],[13,19,34,0],[13,22,34,0,"addMonths"],[13,31,34,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,2,34,7],[46,11,34,16,"addMonths"],[46,20,34,25,"addMonths"],[46,21,34,26,"date"],[46,25,34,30],[46,27,34,32,"amount"],[46,33,34,38],[46,35,34,40,"options"],[46,42,34,47],[46,44,34,49],[47,4,35,2],[47,10,35,8,"_date"],[47,15,35,13],[47,18,35,16],[47,22,35,16,"toDate"],[47,31,35,22],[47,32,35,22,"toDate"],[47,38,35,22],[47,40,35,23,"date"],[47,44,35,27],[47,46,35,29,"options"],[47,53,35,36],[47,55,35,38,"in"],[47,57,35,40],[47,58,35,41],[48,4,36,2],[48,8,36,6,"isNaN"],[48,13,36,11],[48,14,36,12,"amount"],[48,20,36,18],[48,21,36,19],[48,23,36,21],[48,30,36,28],[48,34,36,28,"constructFrom"],[48,50,36,41],[48,51,36,41,"constructFrom"],[48,64,36,41],[48,66,36,42,"options"],[48,73,36,49],[48,75,36,51,"in"],[48,77,36,53],[48,81,36,57,"date"],[48,85,36,61],[48,87,36,63,"NaN"],[48,90,36,66],[48,91,36,67],[49,4,37,2],[49,8,37,6],[49,9,37,7,"amount"],[49,15,37,13],[49,17,37,15],[50,6,38,4],[51,6,39,4],[51,13,39,11,"_date"],[51,18,39,16],[52,4,40,2],[53,4,41,2],[53,10,41,8,"dayOfMonth"],[53,20,41,18],[53,23,41,21,"_date"],[53,28,41,26],[53,29,41,27,"getDate"],[53,36,41,34],[53,37,41,35],[53,38,41,36],[55,4,43,2],[56,4,44,2],[57,4,45,2],[58,4,46,2],[59,4,47,2],[60,4,48,2],[61,4,49,2],[62,4,50,2],[63,4,51,2],[63,10,51,8,"endOfDesiredMonth"],[63,27,51,25],[63,30,51,28],[63,34,51,28,"constructFrom"],[63,50,51,41],[63,51,51,41,"constructFrom"],[63,64,51,41],[63,66,51,42,"options"],[63,73,51,49],[63,75,51,51,"in"],[63,77,51,53],[63,81,51,57,"date"],[63,85,51,61],[63,87,51,63,"_date"],[63,92,51,68],[63,93,51,69,"getTime"],[63,100,51,76],[63,101,51,77],[63,102,51,78],[63,103,51,79],[64,4,52,2,"endOfDesiredMonth"],[64,21,52,19],[64,22,52,20,"setMonth"],[64,30,52,28],[64,31,52,29,"_date"],[64,36,52,34],[64,37,52,35,"getMonth"],[64,45,52,43],[64,46,52,44],[64,47,52,45],[64,50,52,48,"amount"],[64,56,52,54],[64,59,52,57],[64,60,52,58],[64,62,52,60],[64,63,52,61],[64,64,52,62],[65,4,53,2],[65,10,53,8,"daysInMonth"],[65,21,53,19],[65,24,53,22,"endOfDesiredMonth"],[65,41,53,39],[65,42,53,40,"getDate"],[65,49,53,47],[65,50,53,48],[65,51,53,49],[66,4,54,2],[66,8,54,6,"dayOfMonth"],[66,18,54,16],[66,22,54,20,"daysInMonth"],[66,33,54,31],[66,35,54,33],[67,6,55,4],[68,6,56,4],[69,6,57,4],[69,13,57,11,"endOfDesiredMonth"],[69,30,57,28],[70,4,58,2],[70,5,58,3],[70,11,58,9],[71,6,59,4],[72,6,60,4],[73,6,61,4],[74,6,62,4],[75,6,63,4],[76,6,64,4],[77,6,65,4],[78,6,66,4,"_date"],[78,11,66,9],[78,12,66,10,"setFullYear"],[78,23,66,21],[78,24,67,6,"endOfDesiredMonth"],[78,41,67,23],[78,42,67,24,"getFullYear"],[78,53,67,35],[78,54,67,36],[78,55,67,37],[78,57,68,6,"endOfDesiredMonth"],[78,74,68,23],[78,75,68,24,"getMonth"],[78,83,68,32],[78,84,68,33],[78,85,68,34],[78,87,69,6,"dayOfMonth"],[78,97,70,4],[78,98,70,5],[79,6,71,4],[79,13,71,11,"_date"],[79,18,71,16],[80,4,72,2],[81,2,73,0],[83,2,75,0],[84,2,76,0],[84,6,76,0,"_default"],[84,14,76,0],[84,17,76,15,"addMonths"],[84,26,76,24],[85,0,76,25],[85,3]],"functionMap":{"names":["<global>","addMonths"],"mappings":"AAA;OCiC;CDuC"},"hasCjsExports":false},"type":"js/module"}]}