{"dependencies":[{"name":"./isDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"03WtQA+Ko8Xa0FsxL75+n0Zuz38=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":38},"end":{"line":2,"column":37,"index":75}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.isValid = isValid;\n  var _isDateJs = require(_dependencyMap[0], \"./isDate.js\");\n  var _toDateJs = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * @name isValid\n   * @category Common Helpers\n   * @summary Is the given date valid?\n   *\n   * @description\n   * Returns false if argument is Invalid Date and true otherwise.\n   * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n   * Invalid Date is a Date, whose time value is NaN.\n   *\n   * Time value of Date: http://es5.github.io/#x15.9.1.1\n   *\n   * @param date - The date to check\n   *\n   * @returns The date is valid\n   *\n   * @example\n   * // For the valid date:\n   * const result = isValid(new Date(2014, 1, 31))\n   * //=> true\n   *\n   * @example\n   * // For the value, convertible into a date:\n   * const result = isValid(1393804800000)\n   * //=> true\n   *\n   * @example\n   * // For the invalid date:\n   * const result = isValid(new Date(''))\n   * //=> false\n   */\n  function isValid(date) {\n    return !(!(0, _isDateJs.isDate)(date) && typeof date !== \"number\" || isNaN(+(0, _toDateJs.toDate)(date)));\n  }\n\n  // Fallback for modularized imports:\n  var _default = isValid;\n});","lineCount":53,"map":[[7,2,40,0,"Object"],[7,8,40,0],[7,9,40,0,"defineProperty"],[7,23,40,0],[7,24,40,0,"exports"],[7,31,40,0],[8,4,40,0,"enumerable"],[8,14,40,0],[9,4,40,0,"get"],[9,7,40,0],[9,18,40,0,"get"],[9,19,40,0],[10,6,40,0],[10,13,40,0,"_default"],[10,21,40,0],[11,4,40,0],[12,2,40,0],[13,2,35,0,"exports"],[13,9,35,0],[13,10,35,0,"isValid"],[13,17,35,0],[13,20,35,0,"isValid"],[13,27,35,0],[14,2,1,0],[14,6,1,0,"_isDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,2,0],[15,6,2,0,"_toDateJs"],[15,15,2,0],[15,18,2,0,"require"],[15,25,2,0],[15,26,2,0,"_dependencyMap"],[15,40,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,2,35,7],[47,11,35,16,"isValid"],[47,18,35,23,"isValid"],[47,19,35,24,"date"],[47,23,35,28],[47,25,35,30],[48,4,36,2],[48,11,36,9],[48,13,36,12],[48,14,36,13],[48,18,36,13,"isDate"],[48,27,36,19],[48,28,36,19,"isDate"],[48,34,36,19],[48,36,36,20,"date"],[48,40,36,24],[48,41,36,25],[48,45,36,29],[48,52,36,36,"date"],[48,56,36,40],[48,61,36,45],[48,69,36,53],[48,73,36,58,"isNaN"],[48,78,36,63],[48,79,36,64],[48,80,36,65],[48,84,36,65,"toDate"],[48,93,36,71],[48,94,36,71,"toDate"],[48,100,36,71],[48,102,36,72,"date"],[48,106,36,76],[48,107,36,77],[48,108,36,78],[48,109,36,79],[49,2,37,0],[51,2,39,0],[52,2,40,0],[52,6,40,0,"_default"],[52,14,40,0],[52,17,40,15,"isValid"],[52,24,40,22],[53,0,40,23],[53,3]],"functionMap":{"names":["<global>","isValid"],"mappings":"AAA;OCkC;CDE"},"hasCjsExports":false},"type":"js/module"}]}