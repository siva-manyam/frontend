{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.isLeapYear = isLeapYear;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * @name isLeapYear\n   * @category Year Helpers\n   * @summary Is the given date in the leap year?\n   *\n   * @description\n   * Is the given date in the leap year?\n   *\n   * @param date - The date to check\n   * @param options - The options object\n   *\n   * @returns The date is in the leap year\n   *\n   * @example\n   * // Is 1 September 2012 in the leap year?\n   * const result = isLeapYear(new Date(2012, 8, 1))\n   * //=> true\n   */\n  function isLeapYear(date, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    const year = _date.getFullYear();\n    return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n  }\n\n  // Fallback for modularized imports:\n  var _default = isLeapYear;\n});","lineCount":41,"map":[[7,2,28,0,"Object"],[7,8,28,0],[7,9,28,0,"defineProperty"],[7,23,28,0],[7,24,28,0,"exports"],[7,31,28,0],[8,4,28,0,"enumerable"],[8,14,28,0],[9,4,28,0,"get"],[9,7,28,0],[9,18,28,0,"get"],[9,19,28,0],[10,6,28,0],[10,13,28,0,"_default"],[10,21,28,0],[11,4,28,0],[12,2,28,0],[13,2,21,0,"exports"],[13,9,21,0],[13,10,21,0,"isLeapYear"],[13,20,21,0],[13,23,21,0,"isLeapYear"],[13,33,21,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,2,21,7],[33,11,21,16,"isLeapYear"],[33,21,21,26,"isLeapYear"],[33,22,21,27,"date"],[33,26,21,31],[33,28,21,33,"options"],[33,35,21,40],[33,37,21,42],[34,4,22,2],[34,10,22,8,"_date"],[34,15,22,13],[34,18,22,16],[34,22,22,16,"toDate"],[34,31,22,22],[34,32,22,22,"toDate"],[34,38,22,22],[34,40,22,23,"date"],[34,44,22,27],[34,46,22,29,"options"],[34,53,22,36],[34,55,22,38,"in"],[34,57,22,40],[34,58,22,41],[35,4,23,2],[35,10,23,8,"year"],[35,14,23,12],[35,17,23,15,"_date"],[35,22,23,20],[35,23,23,21,"getFullYear"],[35,34,23,32],[35,35,23,33],[35,36,23,34],[36,4,24,2],[36,11,24,9,"year"],[36,15,24,13],[36,18,24,16],[36,21,24,19],[36,26,24,24],[36,27,24,25],[36,31,24,30,"year"],[36,35,24,34],[36,38,24,37],[36,39,24,38],[36,44,24,43],[36,45,24,44],[36,49,24,48,"year"],[36,53,24,52],[36,56,24,55],[36,59,24,58],[36,64,24,63],[36,65,24,65],[37,2,25,0],[39,2,27,0],[40,2,28,0],[40,6,28,0,"_default"],[40,14,28,0],[40,17,28,15,"isLeapYear"],[40,27,28,25],[41,0,28,26],[41,3]],"functionMap":{"names":["<global>","isLeapYear"],"mappings":"AAA;OCoB;CDI"},"hasCjsExports":false},"type":"js/module"}]}