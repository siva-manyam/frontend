{"dependencies":[{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"],"imports":1}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":73,"index":132}}],"key":"imq/EGPR6TLwAkGUJvGZSPH1SeI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.differenceInDays = differenceInDays;\n  var _libNormalizeDatesJs = require(_dependencyMap[0], \"./_lib/normalizeDates.js\");\n  var _differenceInCalendarDaysJs = require(_dependencyMap[1], \"./differenceInCalendarDays.js\");\n  /**\n   * The {@link differenceInDays} function options.\n   */\n\n  /**\n   * @name differenceInDays\n   * @category Day Helpers\n   * @summary Get the number of full days between the given dates.\n   *\n   * @description\n   * Get the number of full day periods between two dates. Fractional days are\n   * truncated towards zero.\n   *\n   * One \"full day\" is the distance between a local time in one day to the same\n   * local time on the next or previous day. A full day can sometimes be less than\n   * or more than 24 hours if a daylight savings change happens between two dates.\n   *\n   * To ignore DST and only measure exact 24-hour periods, use this instead:\n   * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n   *\n   * @param laterDate - The later date\n   * @param earlierDate - The earlier date\n   * @param options - An object with options\n   *\n   * @returns The number of full days according to the local timezone\n   *\n   * @example\n   * // How many full days are between\n   * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n   * const result = differenceInDays(\n   *   new Date(2012, 6, 2, 0, 0),\n   *   new Date(2011, 6, 2, 23, 0)\n   * )\n   * //=> 365\n   *\n   * @example\n   * // How many full days are between\n   * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n   * const result = differenceInDays(\n   *   new Date(2011, 6, 3, 0, 1),\n   *   new Date(2011, 6, 2, 23, 59)\n   * )\n   * //=> 0\n   *\n   * @example\n   * // How many full days are between\n   * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n   * // Note: because local time is used, the\n   * // result will always be 92 days, even in\n   * // time zones where DST starts and the\n   * // period has only 92*24-1 hours.\n   * const result = differenceInDays(\n   *   new Date(2020, 5, 1),\n   *   new Date(2020, 2, 1)\n   * )\n   * //=> 92\n   */\n  function differenceInDays(laterDate, earlierDate, options) {\n    const [laterDate_, earlierDate_] = (0, _libNormalizeDatesJs.normalizeDates)(options?.in, laterDate, earlierDate);\n    const sign = compareLocalAsc(laterDate_, earlierDate_);\n    const difference = Math.abs((0, _differenceInCalendarDaysJs.differenceInCalendarDays)(laterDate_, earlierDate_));\n    laterDate_.setDate(laterDate_.getDate() - sign * difference);\n\n    // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n    // If so, result must be decreased by 1 in absolute value\n    const isLastDayNotFull = Number(compareLocalAsc(laterDate_, earlierDate_) === -sign);\n    const result = sign * (difference - isLastDayNotFull);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  }\n\n  // Like `compareAsc` but uses local time not UTC, which is needed\n  // for accurate equality comparisons of UTC timestamps that end up\n  // having the same representation in local time, e.g. one hour before\n  // DST ends vs. the instant that DST ends.\n  function compareLocalAsc(laterDate, earlierDate) {\n    const diff = laterDate.getFullYear() - earlierDate.getFullYear() || laterDate.getMonth() - earlierDate.getMonth() || laterDate.getDate() - earlierDate.getDate() || laterDate.getHours() - earlierDate.getHours() || laterDate.getMinutes() - earlierDate.getMinutes() || laterDate.getSeconds() - earlierDate.getSeconds() || laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n    if (diff < 0) return -1;\n    if (diff > 0) return 1;\n\n    // Return 0 if diff is 0; return NaN if diff is NaN\n    return diff;\n  }\n\n  // Fallback for modularized imports:\n  var _default = differenceInDays;\n});","lineCount":102,"map":[[7,2,108,0,"Object"],[7,8,108,0],[7,9,108,0,"defineProperty"],[7,23,108,0],[7,24,108,0,"exports"],[7,31,108,0],[8,4,108,0,"enumerable"],[8,14,108,0],[9,4,108,0,"get"],[9,7,108,0],[9,18,108,0,"get"],[9,19,108,0],[10,6,108,0],[10,13,108,0,"_default"],[10,21,108,0],[11,4,108,0],[12,2,108,0],[13,2,61,0,"exports"],[13,9,61,0],[13,10,61,0,"differenceInDays"],[13,26,61,0],[13,29,61,0,"differenceInDays"],[13,45,61,0],[14,2,1,0],[14,6,1,0,"_libNormalizeDatesJs"],[14,26,1,0],[14,29,1,0,"require"],[14,36,1,0],[14,37,1,0,"_dependencyMap"],[14,51,1,0],[15,2,2,0],[15,6,2,0,"_differenceInCalendarDaysJs"],[15,33,2,0],[15,36,2,0,"require"],[15,43,2,0],[15,44,2,0,"_dependencyMap"],[15,58,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,0,49,0],[62,0,50,0],[63,0,51,0],[64,0,52,0],[65,0,53,0],[66,0,54,0],[67,0,55,0],[68,0,56,0],[69,0,57,0],[70,0,58,0],[71,0,59,0],[72,0,60,0],[73,2,61,7],[73,11,61,16,"differenceInDays"],[73,27,61,32,"differenceInDays"],[73,28,61,33,"laterDate"],[73,37,61,42],[73,39,61,44,"earlierDate"],[73,50,61,55],[73,52,61,57,"options"],[73,59,61,64],[73,61,61,66],[74,4,62,2],[74,10,62,8],[74,11,62,9,"laterDate_"],[74,21,62,19],[74,23,62,21,"earlierDate_"],[74,35,62,33],[74,36,62,34],[74,39,62,37],[74,43,62,37,"normalizeDates"],[74,63,62,51],[74,64,62,51,"normalizeDates"],[74,78,62,51],[74,80,63,4,"options"],[74,87,63,11],[74,89,63,13,"in"],[74,91,63,15],[74,93,64,4,"laterDate"],[74,102,64,13],[74,104,65,4,"earlierDate"],[74,115,66,2],[74,116,66,3],[75,4,68,2],[75,10,68,8,"sign"],[75,14,68,12],[75,17,68,15,"compareLocalAsc"],[75,32,68,30],[75,33,68,31,"laterDate_"],[75,43,68,41],[75,45,68,43,"earlierDate_"],[75,57,68,55],[75,58,68,56],[76,4,69,2],[76,10,69,8,"difference"],[76,20,69,18],[76,23,69,21,"Math"],[76,27,69,25],[76,28,69,26,"abs"],[76,31,69,29],[76,32,70,4],[76,36,70,4,"differenceInCalendarDays"],[76,63,70,28],[76,64,70,28,"differenceInCalendarDays"],[76,88,70,28],[76,90,70,29,"laterDate_"],[76,100,70,39],[76,102,70,41,"earlierDate_"],[76,114,70,53],[76,115,71,2],[76,116,71,3],[77,4,73,2,"laterDate_"],[77,14,73,12],[77,15,73,13,"setDate"],[77,22,73,20],[77,23,73,21,"laterDate_"],[77,33,73,31],[77,34,73,32,"getDate"],[77,41,73,39],[77,42,73,40],[77,43,73,41],[77,46,73,44,"sign"],[77,50,73,48],[77,53,73,51,"difference"],[77,63,73,61],[77,64,73,62],[79,4,75,2],[80,4,76,2],[81,4,77,2],[81,10,77,8,"isLastDayNotFull"],[81,26,77,24],[81,29,77,27,"Number"],[81,35,77,33],[81,36,78,4,"compareLocalAsc"],[81,51,78,19],[81,52,78,20,"laterDate_"],[81,62,78,30],[81,64,78,32,"earlierDate_"],[81,76,78,44],[81,77,78,45],[81,82,78,50],[81,83,78,51,"sign"],[81,87,79,2],[81,88,79,3],[82,4,81,2],[82,10,81,8,"result"],[82,16,81,14],[82,19,81,17,"sign"],[82,23,81,21],[82,27,81,25,"difference"],[82,37,81,35],[82,40,81,38,"isLastDayNotFull"],[82,56,81,54],[82,57,81,55],[83,4,82,2],[84,4,83,2],[84,11,83,9,"result"],[84,17,83,15],[84,22,83,20],[84,23,83,21],[84,26,83,24],[84,27,83,25],[84,30,83,28,"result"],[84,36,83,34],[85,2,84,0],[87,2,86,0],[88,2,87,0],[89,2,88,0],[90,2,89,0],[91,2,90,0],[91,11,90,9,"compareLocalAsc"],[91,26,90,24,"compareLocalAsc"],[91,27,90,25,"laterDate"],[91,36,90,34],[91,38,90,36,"earlierDate"],[91,49,90,47],[91,51,90,49],[92,4,91,2],[92,10,91,8,"diff"],[92,14,91,12],[92,17,92,4,"laterDate"],[92,26,92,13],[92,27,92,14,"getFullYear"],[92,38,92,25],[92,39,92,26],[92,40,92,27],[92,43,92,30,"earlierDate"],[92,54,92,41],[92,55,92,42,"getFullYear"],[92,66,92,53],[92,67,92,54],[92,68,92,55],[92,72,93,4,"laterDate"],[92,81,93,13],[92,82,93,14,"getMonth"],[92,90,93,22],[92,91,93,23],[92,92,93,24],[92,95,93,27,"earlierDate"],[92,106,93,38],[92,107,93,39,"getMonth"],[92,115,93,47],[92,116,93,48],[92,117,93,49],[92,121,94,4,"laterDate"],[92,130,94,13],[92,131,94,14,"getDate"],[92,138,94,21],[92,139,94,22],[92,140,94,23],[92,143,94,26,"earlierDate"],[92,154,94,37],[92,155,94,38,"getDate"],[92,162,94,45],[92,163,94,46],[92,164,94,47],[92,168,95,4,"laterDate"],[92,177,95,13],[92,178,95,14,"getHours"],[92,186,95,22],[92,187,95,23],[92,188,95,24],[92,191,95,27,"earlierDate"],[92,202,95,38],[92,203,95,39,"getHours"],[92,211,95,47],[92,212,95,48],[92,213,95,49],[92,217,96,4,"laterDate"],[92,226,96,13],[92,227,96,14,"getMinutes"],[92,237,96,24],[92,238,96,25],[92,239,96,26],[92,242,96,29,"earlierDate"],[92,253,96,40],[92,254,96,41,"getMinutes"],[92,264,96,51],[92,265,96,52],[92,266,96,53],[92,270,97,4,"laterDate"],[92,279,97,13],[92,280,97,14,"getSeconds"],[92,290,97,24],[92,291,97,25],[92,292,97,26],[92,295,97,29,"earlierDate"],[92,306,97,40],[92,307,97,41,"getSeconds"],[92,317,97,51],[92,318,97,52],[92,319,97,53],[92,323,98,4,"laterDate"],[92,332,98,13],[92,333,98,14,"getMilliseconds"],[92,348,98,29],[92,349,98,30],[92,350,98,31],[92,353,98,34,"earlierDate"],[92,364,98,45],[92,365,98,46,"getMilliseconds"],[92,380,98,61],[92,381,98,62],[92,382,98,63],[93,4,100,2],[93,8,100,6,"diff"],[93,12,100,10],[93,15,100,13],[93,16,100,14],[93,18,100,16],[93,25,100,23],[93,26,100,24],[93,27,100,25],[94,4,101,2],[94,8,101,6,"diff"],[94,12,101,10],[94,15,101,13],[94,16,101,14],[94,18,101,16],[94,25,101,23],[94,26,101,24],[96,4,103,2],[97,4,104,2],[97,11,104,9,"diff"],[97,15,104,13],[98,2,105,0],[100,2,107,0],[101,2,108,0],[101,6,108,0,"_default"],[101,14,108,0],[101,17,108,15,"differenceInDays"],[101,33,108,31],[102,0,108,32],[102,3]],"functionMap":{"names":["<global>","differenceInDays","compareLocalAsc"],"mappings":"AAA;OC4D;CDuB;AEM;CFe"},"hasCjsExports":false},"type":"js/module"}]}