{"dependencies":[{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"],"imports":1}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":38,"index":89}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":8,"column":21,"index":179}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"DayOfYearParser\", {\n    enumerable: true,\n    get: function () {\n      return DayOfYearParser;\n    }\n  });\n  var _constantsJs = require(_dependencyMap[0], \"../constants.js\");\n  var _ParserJs = require(_dependencyMap[1], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[2], \"../utils.js\");\n  class DayOfYearParser extends _ParserJs.Parser {\n    priority = 90;\n    subpriority = 1;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"D\":\n        case \"DD\":\n          return (0, _utilsJs.parseNumericPattern)(_constantsJs.numericPatterns.dayOfYear, dateString);\n        case \"Do\":\n          return match.ordinalNumber(dateString, {\n            unit: \"date\"\n          });\n        default:\n          return (0, _utilsJs.parseNDigits)(token.length, dateString);\n      }\n    }\n    validate(date, value) {\n      const year = date.getFullYear();\n      const isLeapYear = (0, _utilsJs.isLeapYearIndex)(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    }\n    set(date, _flags, value) {\n      date.setMonth(0, value);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"E\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n  }\n});","lineCount":48,"map":[[7,2,10,0,"Object"],[7,8,10,0],[7,9,10,0,"defineProperty"],[7,23,10,0],[7,24,10,0,"exports"],[7,31,10,0],[8,4,10,0,"enumerable"],[8,14,10,0],[9,4,10,0,"get"],[9,7,10,0],[9,18,10,0,"get"],[9,19,10,0],[10,6,10,0],[10,13,10,0,"DayOfYearParser"],[10,28,10,0],[11,4,10,0],[12,2,10,0],[13,2,1,0],[13,6,1,0,"_constantsJs"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,2,0],[14,6,2,0,"_ParserJs"],[14,15,2,0],[14,18,2,0,"require"],[14,25,2,0],[14,26,2,0,"_dependencyMap"],[14,40,2,0],[15,2,4,0],[15,6,4,0,"_utilsJs"],[15,14,4,0],[15,17,4,0,"require"],[15,24,4,0],[15,25,4,0,"_dependencyMap"],[15,39,4,0],[16,2,10,7],[16,8,10,13,"DayOfYearParser"],[16,23,10,28],[16,32,10,37,"Parser"],[16,41,10,43],[16,42,10,43,"Parser"],[16,48,10,43],[16,49,10,44],[17,4,11,2,"priority"],[17,12,11,10],[17,15,11,13],[17,17,11,15],[18,4,13,2,"subpriority"],[18,15,13,13],[18,18,13,16],[18,19,13,17],[19,4,15,2,"parse"],[19,9,15,7,"parse"],[19,10,15,8,"dateString"],[19,20,15,18],[19,22,15,20,"token"],[19,27,15,25],[19,29,15,27,"match"],[19,34,15,32],[19,36,15,34],[20,6,16,4],[20,14,16,12,"token"],[20,19,16,17],[21,8,17,6],[21,13,17,11],[21,16,17,14],[22,8,18,6],[22,13,18,11],[22,17,18,15],[23,10,19,8],[23,17,19,15],[23,21,19,15,"parseNumericPattern"],[23,29,19,34],[23,30,19,34,"parseNumericPattern"],[23,49,19,34],[23,51,19,35,"numericPatterns"],[23,63,19,50],[23,64,19,50,"numericPatterns"],[23,79,19,50],[23,80,19,51,"dayOfYear"],[23,89,19,60],[23,91,19,62,"dateString"],[23,101,19,72],[23,102,19,73],[24,8,20,6],[24,13,20,11],[24,17,20,15],[25,10,21,8],[25,17,21,15,"match"],[25,22,21,20],[25,23,21,21,"ordinalNumber"],[25,36,21,34],[25,37,21,35,"dateString"],[25,47,21,45],[25,49,21,47],[26,12,21,49,"unit"],[26,16,21,53],[26,18,21,55],[27,10,21,62],[27,11,21,63],[27,12,21,64],[28,8,22,6],[29,10,23,8],[29,17,23,15],[29,21,23,15,"parseNDigits"],[29,29,23,27],[29,30,23,27,"parseNDigits"],[29,42,23,27],[29,44,23,28,"token"],[29,49,23,33],[29,50,23,34,"length"],[29,56,23,40],[29,58,23,42,"dateString"],[29,68,23,52],[29,69,23,53],[30,6,24,4],[31,4,25,2],[32,4,27,2,"validate"],[32,12,27,10,"validate"],[32,13,27,11,"date"],[32,17,27,15],[32,19,27,17,"value"],[32,24,27,22],[32,26,27,24],[33,6,28,4],[33,12,28,10,"year"],[33,16,28,14],[33,19,28,17,"date"],[33,23,28,21],[33,24,28,22,"getFullYear"],[33,35,28,33],[33,36,28,34],[33,37,28,35],[34,6,29,4],[34,12,29,10,"isLeapYear"],[34,22,29,20],[34,25,29,23],[34,29,29,23,"isLeapYearIndex"],[34,37,29,38],[34,38,29,38,"isLeapYearIndex"],[34,53,29,38],[34,55,29,39,"year"],[34,59,29,43],[34,60,29,44],[35,6,30,4],[35,10,30,8,"isLeapYear"],[35,20,30,18],[35,22,30,20],[36,8,31,6],[36,15,31,13,"value"],[36,20,31,18],[36,24,31,22],[36,25,31,23],[36,29,31,27,"value"],[36,34,31,32],[36,38,31,36],[36,41,31,39],[37,6,32,4],[37,7,32,5],[37,13,32,11],[38,8,33,6],[38,15,33,13,"value"],[38,20,33,18],[38,24,33,22],[38,25,33,23],[38,29,33,27,"value"],[38,34,33,32],[38,38,33,36],[38,41,33,39],[39,6,34,4],[40,4,35,2],[41,4,37,2,"set"],[41,7,37,5,"set"],[41,8,37,6,"date"],[41,12,37,10],[41,14,37,12,"_flags"],[41,20,37,18],[41,22,37,20,"value"],[41,27,37,25],[41,29,37,27],[42,6,38,4,"date"],[42,10,38,8],[42,11,38,9,"setMonth"],[42,19,38,17],[42,20,38,18],[42,21,38,19],[42,23,38,21,"value"],[42,28,38,26],[42,29,38,27],[43,6,39,4,"date"],[43,10,39,8],[43,11,39,9,"setHours"],[43,19,39,17],[43,20,39,18],[43,21,39,19],[43,23,39,21],[43,24,39,22],[43,26,39,24],[43,27,39,25],[43,29,39,27],[43,30,39,28],[43,31,39,29],[44,6,40,4],[44,13,40,11,"date"],[44,17,40,15],[45,4,41,2],[46,4,43,2,"incompatibleTokens"],[46,22,43,20],[46,25,43,23],[46,26,44,4],[46,29,44,7],[46,31,45,4],[46,34,45,7],[46,36,46,4],[46,39,46,7],[46,41,47,4],[46,44,47,7],[46,46,48,4],[46,49,48,7],[46,51,49,4],[46,54,49,7],[46,56,50,4],[46,59,50,7],[46,61,51,4],[46,64,51,7],[46,66,52,4],[46,69,52,7],[46,71,53,4],[46,74,53,7],[46,76,54,4],[46,79,54,7],[46,81,55,4],[46,84,55,7],[46,86,56,4],[46,89,56,7],[46,91,57,4],[46,94,57,7],[46,96,58,4],[46,99,58,7],[46,100,59,3],[47,2,60,0],[48,0,60,1],[48,3]],"functionMap":{"names":["<global>","DayOfYearParser","parse","validate","set"],"mappings":"AAA;OCS;ECK;GDU;EEE;GFQ;EGE;GHI;CDmB"},"hasCjsExports":false},"type":"js/module"}]}