{"dependencies":[{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":43,"index":83}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"QuarterParser\", {\n    enumerable: true,\n    get: function () {\n      return QuarterParser;\n    }\n  });\n  var _ParserJs = require(_dependencyMap[0], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[1], \"../utils.js\");\n  class QuarterParser extends _ParserJs.Parser {\n    priority = 120;\n    parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case \"Q\":\n        case \"QQ\":\n          // 01, 02, 03, 04\n          return (0, _utilsJs.parseNDigits)(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case \"Qo\":\n          return match.ordinalNumber(dateString, {\n            unit: \"quarter\"\n          });\n        // Q1, Q2, Q3, Q4\n        case \"QQQ\":\n          return match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case \"QQQQQ\":\n          return match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        // 1st quarter, 2nd quarter, ...\n        case \"QQQQ\":\n        default:\n          return match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n    validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n    set(date, _flags, value) {\n      date.setMonth((value - 1) * 3, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n  }\n});","lineCount":70,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"QuarterParser"],[10,26,5,0],[11,4,5,0],[12,2,5,0],[13,2,1,0],[13,6,1,0,"_ParserJs"],[13,15,1,0],[13,18,1,0,"require"],[13,25,1,0],[13,26,1,0,"_dependencyMap"],[13,40,1,0],[14,2,3,0],[14,6,3,0,"_utilsJs"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,5,7],[15,8,5,13,"QuarterParser"],[15,21,5,26],[15,30,5,35,"Parser"],[15,39,5,41],[15,40,5,41,"Parser"],[15,46,5,41],[15,47,5,42],[16,4,6,2,"priority"],[16,12,6,10],[16,15,6,13],[16,18,6,16],[17,4,8,2,"parse"],[17,9,8,7,"parse"],[17,10,8,8,"dateString"],[17,20,8,18],[17,22,8,20,"token"],[17,27,8,25],[17,29,8,27,"match"],[17,34,8,32],[17,36,8,34],[18,6,9,4],[18,14,9,12,"token"],[18,19,9,17],[19,8,10,6],[20,8,11,6],[20,13,11,11],[20,16,11,14],[21,8,12,6],[21,13,12,11],[21,17,12,15],[22,10,12,17],[23,10,13,8],[23,17,13,15],[23,21,13,15,"parseNDigits"],[23,29,13,27],[23,30,13,27,"parseNDigits"],[23,42,13,27],[23,44,13,28,"token"],[23,49,13,33],[23,50,13,34,"length"],[23,56,13,40],[23,58,13,42,"dateString"],[23,68,13,52],[23,69,13,53],[24,8,14,6],[25,8,15,6],[25,13,15,11],[25,17,15,15],[26,10,16,8],[26,17,16,15,"match"],[26,22,16,20],[26,23,16,21,"ordinalNumber"],[26,36,16,34],[26,37,16,35,"dateString"],[26,47,16,45],[26,49,16,47],[27,12,16,49,"unit"],[27,16,16,53],[27,18,16,55],[28,10,16,65],[28,11,16,66],[28,12,16,67],[29,8,17,6],[30,8,18,6],[30,13,18,11],[30,18,18,16],[31,10,19,8],[31,17,20,10,"match"],[31,22,20,15],[31,23,20,16,"quarter"],[31,30,20,23],[31,31,20,24,"dateString"],[31,41,20,34],[31,43,20,36],[32,12,21,12,"width"],[32,17,21,17],[32,19,21,19],[32,32,21,32],[33,12,22,12,"context"],[33,19,22,19],[33,21,22,21],[34,10,23,10],[34,11,23,11],[34,12,23,12],[34,16,24,10,"match"],[34,21,24,15],[34,22,24,16,"quarter"],[34,29,24,23],[34,30,24,24,"dateString"],[34,40,24,34],[34,42,24,36],[35,12,25,12,"width"],[35,17,25,17],[35,19,25,19],[35,27,25,27],[36,12,26,12,"context"],[36,19,26,19],[36,21,26,21],[37,10,27,10],[37,11,27,11],[37,12,27,12],[39,8,30,6],[40,8,31,6],[40,13,31,11],[40,20,31,18],[41,10,32,8],[41,17,32,15,"match"],[41,22,32,20],[41,23,32,21,"quarter"],[41,30,32,28],[41,31,32,29,"dateString"],[41,41,32,39],[41,43,32,41],[42,12,33,10,"width"],[42,17,33,15],[42,19,33,17],[42,27,33,25],[43,12,34,10,"context"],[43,19,34,17],[43,21,34,19],[44,10,35,8],[44,11,35,9],[44,12,35,10],[45,8,36,6],[46,8,37,6],[46,13,37,11],[46,19,37,17],[47,8,38,6],[48,10,39,8],[48,17,40,10,"match"],[48,22,40,15],[48,23,40,16,"quarter"],[48,30,40,23],[48,31,40,24,"dateString"],[48,41,40,34],[48,43,40,36],[49,12,41,12,"width"],[49,17,41,17],[49,19,41,19],[49,25,41,25],[50,12,42,12,"context"],[50,19,42,19],[50,21,42,21],[51,10,43,10],[51,11,43,11],[51,12,43,12],[51,16,44,10,"match"],[51,21,44,15],[51,22,44,16,"quarter"],[51,29,44,23],[51,30,44,24,"dateString"],[51,40,44,34],[51,42,44,36],[52,12,45,12,"width"],[52,17,45,17],[52,19,45,19],[52,32,45,32],[53,12,46,12,"context"],[53,19,46,19],[53,21,46,21],[54,10,47,10],[54,11,47,11],[54,12,47,12],[54,16,48,10,"match"],[54,21,48,15],[54,22,48,16,"quarter"],[54,29,48,23],[54,30,48,24,"dateString"],[54,40,48,34],[54,42,48,36],[55,12,49,12,"width"],[55,17,49,17],[55,19,49,19],[55,27,49,27],[56,12,50,12,"context"],[56,19,50,19],[56,21,50,21],[57,10,51,10],[57,11,51,11],[57,12,51,12],[58,6,53,4],[59,4,54,2],[60,4,56,2,"validate"],[60,12,56,10,"validate"],[60,13,56,11,"_date"],[60,18,56,16],[60,20,56,18,"value"],[60,25,56,23],[60,27,56,25],[61,6,57,4],[61,13,57,11,"value"],[61,18,57,16],[61,22,57,20],[61,23,57,21],[61,27,57,25,"value"],[61,32,57,30],[61,36,57,34],[61,37,57,35],[62,4,58,2],[63,4,60,2,"set"],[63,7,60,5,"set"],[63,8,60,6,"date"],[63,12,60,10],[63,14,60,12,"_flags"],[63,20,60,18],[63,22,60,20,"value"],[63,27,60,25],[63,29,60,27],[64,6,61,4,"date"],[64,10,61,8],[64,11,61,9,"setMonth"],[64,19,61,17],[64,20,61,18],[64,21,61,19,"value"],[64,26,61,24],[64,29,61,27],[64,30,61,28],[64,34,61,32],[64,35,61,33],[64,37,61,35],[64,38,61,36],[64,39,61,37],[65,6,62,4,"date"],[65,10,62,8],[65,11,62,9,"setHours"],[65,19,62,17],[65,20,62,18],[65,21,62,19],[65,23,62,21],[65,24,62,22],[65,26,62,24],[65,27,62,25],[65,29,62,27],[65,30,62,28],[65,31,62,29],[66,6,63,4],[66,13,63,11,"date"],[66,17,63,15],[67,4,64,2],[68,4,66,2,"incompatibleTokens"],[68,22,66,20],[68,25,66,23],[68,26,67,4],[68,29,67,7],[68,31,68,4],[68,34,68,7],[68,36,69,4],[68,39,69,7],[68,41,70,4],[68,44,70,7],[68,46,71,4],[68,49,71,7],[68,51,72,4],[68,54,72,7],[68,56,73,4],[68,59,73,7],[68,61,74,4],[68,64,74,7],[68,66,75,4],[68,69,75,7],[68,71,76,4],[68,74,76,7],[68,76,77,4],[68,79,77,7],[68,81,78,4],[68,84,78,7],[68,86,79,4],[68,89,79,7],[68,91,80,4],[68,94,80,7],[68,95,81,3],[69,2,82,0],[70,0,82,1],[70,3]],"functionMap":{"names":["<global>","QuarterParser","parse","validate","set"],"mappings":"AAA;OCI;ECG;GD8C;EEE;GFE;EGE;GHI;CDkB"},"hasCjsExports":false},"type":"js/module"}]}