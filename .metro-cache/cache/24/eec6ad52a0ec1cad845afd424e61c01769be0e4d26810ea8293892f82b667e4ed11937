{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachDayOfInterval = eachDayOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachDayOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachDayOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachDayOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of dates within the specified time interval.\n   *\n   * @description\n   * Return the array of dates within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of days from the day of the interval start to the day of the interval end\n   *\n   * @example\n   * // Each day between 6 October 2014 and 10 October 2014:\n   * const result = eachDayOfInterval({\n   *   start: new Date(2014, 9, 6),\n   *   end: new Date(2014, 9, 10)\n   * })\n   * //=> [\n   * //   Mon Oct 06 2014 00:00:00,\n   * //   Tue Oct 07 2014 00:00:00,\n   * //   Wed Oct 08 2014 00:00:00,\n   * //   Thu Oct 09 2014 00:00:00,\n   * //   Fri Oct 10 2014 00:00:00\n   * // ]\n   */\n  function eachDayOfInterval(interval, options) {\n    const {\n      start,\n      end\n    } = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval);\n    let reversed = +start > +end;\n    const endTime = reversed ? +start : +end;\n    const date = reversed ? end : start;\n    date.setHours(0, 0, 0, 0);\n    let step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    const dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date.setDate(date.getDate() + step);\n      date.setHours(0, 0, 0, 0);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachDayOfInterval;\n});","lineCount":83,"map":[[7,2,72,0,"Object"],[7,8,72,0],[7,9,72,0,"defineProperty"],[7,23,72,0],[7,24,72,0,"exports"],[7,31,72,0],[8,4,72,0,"enumerable"],[8,14,72,0],[9,4,72,0,"get"],[9,7,72,0],[9,18,72,0,"get"],[9,19,72,0],[10,6,72,0],[10,13,72,0,"_default"],[10,21,72,0],[11,4,72,0],[12,2,72,0],[13,2,45,0,"exports"],[13,9,45,0],[13,10,45,0,"eachDayOfInterval"],[13,27,45,0],[13,30,45,0,"eachDayOfInterval"],[13,47,45,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[27,2,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,2,45,7],[57,11,45,16,"eachDayOfInterval"],[57,28,45,33,"eachDayOfInterval"],[57,29,45,34,"interval"],[57,37,45,42],[57,39,45,44,"options"],[57,46,45,51],[57,48,45,53],[58,4,46,2],[58,10,46,8],[59,6,46,10,"start"],[59,11,46,15],[60,6,46,17,"end"],[61,4,46,21],[61,5,46,22],[61,8,46,25],[61,12,46,25,"normalizeInterval"],[61,35,46,42],[61,36,46,42,"normalizeInterval"],[61,53,46,42],[61,55,46,43,"options"],[61,62,46,50],[61,64,46,52,"in"],[61,66,46,54],[61,68,46,56,"interval"],[61,76,46,64],[61,77,46,65],[62,4,48,2],[62,8,48,6,"reversed"],[62,16,48,14],[62,19,48,17],[62,20,48,18,"start"],[62,25,48,23],[62,28,48,26],[62,29,48,27,"end"],[62,32,48,30],[63,4,49,2],[63,10,49,8,"endTime"],[63,17,49,15],[63,20,49,18,"reversed"],[63,28,49,26],[63,31,49,29],[63,32,49,30,"start"],[63,37,49,35],[63,40,49,38],[63,41,49,39,"end"],[63,44,49,42],[64,4,50,2],[64,10,50,8,"date"],[64,14,50,12],[64,17,50,15,"reversed"],[64,25,50,23],[64,28,50,26,"end"],[64,31,50,29],[64,34,50,32,"start"],[64,39,50,37],[65,4,51,2,"date"],[65,8,51,6],[65,9,51,7,"setHours"],[65,17,51,15],[65,18,51,16],[65,19,51,17],[65,21,51,19],[65,22,51,20],[65,24,51,22],[65,25,51,23],[65,27,51,25],[65,28,51,26],[65,29,51,27],[66,4,53,2],[66,8,53,6,"step"],[66,12,53,10],[66,15,53,13,"options"],[66,22,53,20],[66,24,53,22,"step"],[66,28,53,26],[66,32,53,30],[66,33,53,31],[67,4,54,2],[67,8,54,6],[67,9,54,7,"step"],[67,13,54,11],[67,15,54,13],[67,22,54,20],[67,24,54,22],[68,4,55,2],[68,8,55,6,"step"],[68,12,55,10],[68,15,55,13],[68,16,55,14],[68,18,55,16],[69,6,56,4,"step"],[69,10,56,8],[69,13,56,11],[69,14,56,12,"step"],[69,18,56,16],[70,6,57,4,"reversed"],[70,14,57,12],[70,17,57,15],[70,18,57,16,"reversed"],[70,26,57,24],[71,4,58,2],[72,4,60,2],[72,10,60,8,"dates"],[72,15,60,13],[72,18,60,16],[72,20,60,18],[73,4,62,2],[73,11,62,9],[73,12,62,10,"date"],[73,16,62,14],[73,20,62,18,"endTime"],[73,27,62,25],[73,29,62,27],[74,6,63,4,"dates"],[74,11,63,9],[74,12,63,10,"push"],[74,16,63,14],[74,17,63,15],[74,21,63,15,"constructFrom"],[74,37,63,28],[74,38,63,28,"constructFrom"],[74,51,63,28],[74,53,63,29,"start"],[74,58,63,34],[74,60,63,36,"date"],[74,64,63,40],[74,65,63,41],[74,66,63,42],[75,6,64,4,"date"],[75,10,64,8],[75,11,64,9,"setDate"],[75,18,64,16],[75,19,64,17,"date"],[75,23,64,21],[75,24,64,22,"getDate"],[75,31,64,29],[75,32,64,30],[75,33,64,31],[75,36,64,34,"step"],[75,40,64,38],[75,41,64,39],[76,6,65,4,"date"],[76,10,65,8],[76,11,65,9,"setHours"],[76,19,65,17],[76,20,65,18],[76,21,65,19],[76,23,65,21],[76,24,65,22],[76,26,65,24],[76,27,65,25],[76,29,65,27],[76,30,65,28],[76,31,65,29],[77,4,66,2],[78,4,68,2],[78,11,68,9,"reversed"],[78,19,68,17],[78,22,68,20,"dates"],[78,27,68,25],[78,28,68,26,"reverse"],[78,35,68,33],[78,36,68,34],[78,37,68,35],[78,40,68,38,"dates"],[78,45,68,43],[79,2,69,0],[81,2,71,0],[82,2,72,0],[82,6,72,0,"_default"],[82,14,72,0],[82,17,72,15,"eachDayOfInterval"],[82,34,72,32],[83,0,72,33],[83,3]],"functionMap":{"names":["<global>","eachDayOfInterval"],"mappings":"AAA;OC4C;CDwB"},"hasCjsExports":false},"type":"js/module"}]}