{"dependencies":[{"name":"./eachWeekendOfInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"kHzxcXJdPWCiie76SLaSz9Flrdw=","exportNames":["*"],"imports":1}},{"name":"./endOfYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":68},"end":{"line":2,"column":43,"index":111}}],"key":"nlHtLmkOttlBPCFEDuhPeoQOyyw=","exportNames":["*"],"imports":1}},{"name":"./startOfYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":112},"end":{"line":3,"column":47,"index":159}}],"key":"kZigjf4o2ZO+yvkGaB4UcLXqSxw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachWeekendOfYear = eachWeekendOfYear;\n  var _eachWeekendOfIntervalJs = require(_dependencyMap[0], \"./eachWeekendOfInterval.js\");\n  var _endOfYearJs = require(_dependencyMap[1], \"./endOfYear.js\");\n  var _startOfYearJs = require(_dependencyMap[2], \"./startOfYear.js\");\n  /**\n   * The {@link eachWeekendOfYear} function options.\n   */\n\n  /**\n   * @name eachWeekendOfYear\n   * @category Year Helpers\n   * @summary List all the Saturdays and Sundays in the year.\n   *\n   * @description\n   * Get all the Saturdays and Sundays in the year.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The given year\n   * @param options - An object with options\n   *\n   * @returns An array containing all the Saturdays and Sundays\n   *\n   * @example\n   * // Lists all Saturdays and Sundays in the year\n   * const result = eachWeekendOfYear(new Date(2020, 1, 1))\n   * //=> [\n   * //   Sat Jan 03 2020 00:00:00,\n   * //   Sun Jan 04 2020 00:00:00,\n   * //   ...\n   * //   Sun Dec 27 2020 00:00:00\n   * // ]\n   * ]\n   */\n  function eachWeekendOfYear(date, options) {\n    const start = (0, _startOfYearJs.startOfYear)(date, options);\n    const end = (0, _endOfYearJs.endOfYear)(date, options);\n    return (0, _eachWeekendOfIntervalJs.eachWeekendOfInterval)({\n      start,\n      end\n    }, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachWeekendOfYear;\n});","lineCount":59,"map":[[7,2,43,0,"Object"],[7,8,43,0],[7,9,43,0,"defineProperty"],[7,23,43,0],[7,24,43,0,"exports"],[7,31,43,0],[8,4,43,0,"enumerable"],[8,14,43,0],[9,4,43,0,"get"],[9,7,43,0],[9,18,43,0,"get"],[9,19,43,0],[10,6,43,0],[10,13,43,0,"_default"],[10,21,43,0],[11,4,43,0],[12,2,43,0],[13,2,36,0,"exports"],[13,9,36,0],[13,10,36,0,"eachWeekendOfYear"],[13,27,36,0],[13,30,36,0,"eachWeekendOfYear"],[13,47,36,0],[14,2,1,0],[14,6,1,0,"_eachWeekendOfIntervalJs"],[14,30,1,0],[14,33,1,0,"require"],[14,40,1,0],[14,41,1,0,"_dependencyMap"],[14,55,1,0],[15,2,2,0],[15,6,2,0,"_endOfYearJs"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,3,0],[16,6,3,0,"_startOfYearJs"],[16,20,3,0],[16,23,3,0,"require"],[16,30,3,0],[16,31,3,0,"_dependencyMap"],[16,45,3,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[21,2,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,2,36,7],[48,11,36,16,"eachWeekendOfYear"],[48,28,36,33,"eachWeekendOfYear"],[48,29,36,34,"date"],[48,33,36,38],[48,35,36,40,"options"],[48,42,36,47],[48,44,36,49],[49,4,37,2],[49,10,37,8,"start"],[49,15,37,13],[49,18,37,16],[49,22,37,16,"startOfYear"],[49,36,37,27],[49,37,37,27,"startOfYear"],[49,48,37,27],[49,50,37,28,"date"],[49,54,37,32],[49,56,37,34,"options"],[49,63,37,41],[49,64,37,42],[50,4,38,2],[50,10,38,8,"end"],[50,13,38,11],[50,16,38,14],[50,20,38,14,"endOfYear"],[50,32,38,23],[50,33,38,23,"endOfYear"],[50,42,38,23],[50,44,38,24,"date"],[50,48,38,28],[50,50,38,30,"options"],[50,57,38,37],[50,58,38,38],[51,4,39,2],[51,11,39,9],[51,15,39,9,"eachWeekendOfInterval"],[51,39,39,30],[51,40,39,30,"eachWeekendOfInterval"],[51,61,39,30],[51,63,39,31],[52,6,39,33,"start"],[52,11,39,38],[53,6,39,40,"end"],[54,4,39,44],[54,5,39,45],[54,7,39,47,"options"],[54,14,39,54],[54,15,39,55],[55,2,40,0],[57,2,42,0],[58,2,43,0],[58,6,43,0,"_default"],[58,14,43,0],[58,17,43,15,"eachWeekendOfYear"],[58,34,43,32],[59,0,43,33],[59,3]],"functionMap":{"names":["<global>","eachWeekendOfYear"],"mappings":"AAA;OCmC;CDI"},"hasCjsExports":false},"type":"js/module"}]}