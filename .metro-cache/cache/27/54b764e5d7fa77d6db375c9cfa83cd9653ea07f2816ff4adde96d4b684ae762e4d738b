{"dependencies":[{"name":"./addMilliseconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"C53oCWhhjr5oIwLVb4GhkJeYi/Y=","exportNames":["*"],"imports":1}},{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":52,"index":108}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.addHours = addHours;\n  var _addMillisecondsJs = require(_dependencyMap[0], \"./addMilliseconds.js\");\n  var _constantsJs = require(_dependencyMap[1], \"./constants.js\");\n  /**\n   * The {@link addHours} function options.\n   */\n\n  /**\n   * @name addHours\n   * @category Hour Helpers\n   * @summary Add the specified number of hours to the given date.\n   *\n   * @description\n   * Add the specified number of hours to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of hours to be added\n   * @param options - An object with options\n   *\n   * @returns The new date with the hours added\n   *\n   * @example\n   * // Add 2 hours to 10 July 2014 23:00:00:\n   * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n   * //=> Fri Jul 11 2014 01:00:00\n   */\n  function addHours(date, amount, options) {\n    return (0, _addMillisecondsJs.addMilliseconds)(date, amount * _constantsJs.millisecondsInHour, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = addHours;\n});","lineCount":48,"map":[[7,2,35,0,"Object"],[7,8,35,0],[7,9,35,0,"defineProperty"],[7,23,35,0],[7,24,35,0,"exports"],[7,31,35,0],[8,4,35,0,"enumerable"],[8,14,35,0],[9,4,35,0,"get"],[9,7,35,0],[9,18,35,0,"get"],[9,19,35,0],[10,6,35,0],[10,13,35,0,"_default"],[10,21,35,0],[11,4,35,0],[12,2,35,0],[13,2,30,0,"exports"],[13,9,30,0],[13,10,30,0,"addHours"],[13,18,30,0],[13,21,30,0,"addHours"],[13,29,30,0],[14,2,1,0],[14,6,1,0,"_addMillisecondsJs"],[14,24,1,0],[14,27,1,0,"require"],[14,34,1,0],[14,35,1,0,"_dependencyMap"],[14,49,1,0],[15,2,2,0],[15,6,2,0,"_constantsJs"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,2,30,7],[42,11,30,16,"addHours"],[42,19,30,24,"addHours"],[42,20,30,25,"date"],[42,24,30,29],[42,26,30,31,"amount"],[42,32,30,37],[42,34,30,39,"options"],[42,41,30,46],[42,43,30,48],[43,4,31,2],[43,11,31,9],[43,15,31,9,"addMilliseconds"],[43,33,31,24],[43,34,31,24,"addMilliseconds"],[43,49,31,24],[43,51,31,25,"date"],[43,55,31,29],[43,57,31,31,"amount"],[43,63,31,37],[43,66,31,40,"millisecondsInHour"],[43,78,31,58],[43,79,31,58,"millisecondsInHour"],[43,97,31,58],[43,99,31,60,"options"],[43,106,31,67],[43,107,31,68],[44,2,32,0],[46,2,34,0],[47,2,35,0],[47,6,35,0,"_default"],[47,14,35,0],[47,17,35,15,"addHours"],[47,25,35,23],[48,0,35,24],[48,3]],"functionMap":{"names":["<global>","addHours"],"mappings":"AAA;OC6B;CDE"},"hasCjsExports":false},"type":"js/module"}]}