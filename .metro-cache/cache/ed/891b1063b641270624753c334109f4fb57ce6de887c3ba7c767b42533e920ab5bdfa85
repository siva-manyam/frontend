{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.transpose = transpose;\n  var _constructFromJs = require(_dependencyMap[0], \"./constructFrom.js\");\n  /**\n   * @name transpose\n   * @category Generic Helpers\n   * @summary Transpose the date to the given constructor.\n   *\n   * @description\n   * The function transposes the date to the given constructor. It helps you\n   * to transpose the date in the system time zone to say `UTCDate` or any other\n   * date extension.\n   *\n   * @typeParam InputDate - The input `Date` type derived from the passed argument.\n   * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n   *\n   * @param date - The date to use values from\n   * @param constructor - The date constructor to use\n   *\n   * @returns Date transposed to the given constructor\n   *\n   * @example\n   * // Create July 10, 2022 00:00 in locale time zone\n   * const date = new Date(2022, 6, 10)\n   * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n   *\n   * @example\n   * // Transpose the date to July 10, 2022 00:00 in UTC\n   * transpose(date, UTCDate)\n   * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n   */\n  function transpose(date, constructor) {\n    const date_ = isConstructor(constructor) ? new constructor(0) : (0, _constructFromJs.constructFrom)(constructor, 0);\n    date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    date_.setHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return date_;\n  }\n  function isConstructor(constructor) {\n    return typeof constructor === \"function\" && constructor.prototype?.constructor === constructor;\n  }\n\n  // Fallback for modularized imports:\n  var _default = transpose;\n});","lineCount":55,"map":[[7,2,53,0,"Object"],[7,8,53,0],[7,9,53,0,"defineProperty"],[7,23,53,0],[7,24,53,0,"exports"],[7,31,53,0],[8,4,53,0,"enumerable"],[8,14,53,0],[9,4,53,0,"get"],[9,7,53,0],[9,18,53,0,"get"],[9,19,53,0],[10,6,53,0],[10,13,53,0,"_default"],[10,21,53,0],[11,4,53,0],[12,2,53,0],[13,2,31,0,"exports"],[13,9,31,0],[13,10,31,0,"transpose"],[13,19,31,0],[13,22,31,0,"transpose"],[13,31,31,0],[14,2,1,0],[14,6,1,0,"_constructFromJs"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,2,31,7],[43,11,31,16,"transpose"],[43,20,31,25,"transpose"],[43,21,31,26,"date"],[43,25,31,30],[43,27,31,32,"constructor"],[43,38,31,43],[43,40,31,45],[44,4,32,2],[44,10,32,8,"date_"],[44,15,32,13],[44,18,32,16,"isConstructor"],[44,31,32,29],[44,32,32,30,"constructor"],[44,43,32,41],[44,44,32,42],[44,47,33,6],[44,51,33,10,"constructor"],[44,62,33,21],[44,63,33,22],[44,64,33,23],[44,65,33,24],[44,68,34,6],[44,72,34,6,"constructFrom"],[44,88,34,19],[44,89,34,19,"constructFrom"],[44,102,34,19],[44,104,34,20,"constructor"],[44,115,34,31],[44,117,34,33],[44,118,34,34],[44,119,34,35],[45,4,35,2,"date_"],[45,9,35,7],[45,10,35,8,"setFullYear"],[45,21,35,19],[45,22,35,20,"date"],[45,26,35,24],[45,27,35,25,"getFullYear"],[45,38,35,36],[45,39,35,37],[45,40,35,38],[45,42,35,40,"date"],[45,46,35,44],[45,47,35,45,"getMonth"],[45,55,35,53],[45,56,35,54],[45,57,35,55],[45,59,35,57,"date"],[45,63,35,61],[45,64,35,62,"getDate"],[45,71,35,69],[45,72,35,70],[45,73,35,71],[45,74,35,72],[46,4,36,2,"date_"],[46,9,36,7],[46,10,36,8,"setHours"],[46,18,36,16],[46,19,37,4,"date"],[46,23,37,8],[46,24,37,9,"getHours"],[46,32,37,17],[46,33,37,18],[46,34,37,19],[46,36,38,4,"date"],[46,40,38,8],[46,41,38,9,"getMinutes"],[46,51,38,19],[46,52,38,20],[46,53,38,21],[46,55,39,4,"date"],[46,59,39,8],[46,60,39,9,"getSeconds"],[46,70,39,19],[46,71,39,20],[46,72,39,21],[46,74,40,4,"date"],[46,78,40,8],[46,79,40,9,"getMilliseconds"],[46,94,40,24],[46,95,40,25],[46,96,41,2],[46,97,41,3],[47,4,42,2],[47,11,42,9,"date_"],[47,16,42,14],[48,2,43,0],[49,2,45,0],[49,11,45,9,"isConstructor"],[49,24,45,22,"isConstructor"],[49,25,45,23,"constructor"],[49,36,45,34],[49,38,45,36],[50,4,46,2],[50,11,47,4],[50,18,47,11,"constructor"],[50,29,47,22],[50,34,47,27],[50,44,47,37],[50,48,48,4,"constructor"],[50,59,48,15],[50,60,48,16,"prototype"],[50,69,48,25],[50,71,48,27,"constructor"],[50,82,48,38],[50,87,48,43,"constructor"],[50,98,48,54],[51,2,50,0],[53,2,52,0],[54,2,53,0],[54,6,53,0,"_default"],[54,14,53,0],[54,17,53,15,"transpose"],[54,26,53,24],[55,0,53,25],[55,3]],"functionMap":{"names":["<global>","transpose","isConstructor"],"mappings":"AAA;OC8B;CDY;AEE;CFK"},"hasCjsExports":false},"type":"js/module"}]}