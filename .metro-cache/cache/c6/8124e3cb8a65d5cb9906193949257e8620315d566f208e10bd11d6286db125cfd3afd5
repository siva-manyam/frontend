{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./Device.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"x8dA+Oqh1iivvx03WEHujA7b658=","exportNames":["*"],"imports":1}},{"name":"./ExpoDevice","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":38,"index":140}}],"key":"0fzk2E6Nr6o2GHNufKcTmV29N+Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"DeviceType\", {\n    enumerable: true,\n    get: function () {\n      return _DeviceTypes.DeviceType;\n    }\n  });\n  Object.defineProperty(exports, \"isDevice\", {\n    enumerable: true,\n    get: function () {\n      return isDevice;\n    }\n  });\n  Object.defineProperty(exports, \"brand\", {\n    enumerable: true,\n    get: function () {\n      return brand;\n    }\n  });\n  Object.defineProperty(exports, \"manufacturer\", {\n    enumerable: true,\n    get: function () {\n      return manufacturer;\n    }\n  });\n  Object.defineProperty(exports, \"modelId\", {\n    enumerable: true,\n    get: function () {\n      return modelId;\n    }\n  });\n  Object.defineProperty(exports, \"modelName\", {\n    enumerable: true,\n    get: function () {\n      return modelName;\n    }\n  });\n  Object.defineProperty(exports, \"designName\", {\n    enumerable: true,\n    get: function () {\n      return designName;\n    }\n  });\n  Object.defineProperty(exports, \"productName\", {\n    enumerable: true,\n    get: function () {\n      return productName;\n    }\n  });\n  Object.defineProperty(exports, \"deviceType\", {\n    enumerable: true,\n    get: function () {\n      return deviceType;\n    }\n  });\n  Object.defineProperty(exports, \"deviceYearClass\", {\n    enumerable: true,\n    get: function () {\n      return deviceYearClass;\n    }\n  });\n  Object.defineProperty(exports, \"totalMemory\", {\n    enumerable: true,\n    get: function () {\n      return totalMemory;\n    }\n  });\n  Object.defineProperty(exports, \"supportedCpuArchitectures\", {\n    enumerable: true,\n    get: function () {\n      return supportedCpuArchitectures;\n    }\n  });\n  Object.defineProperty(exports, \"osName\", {\n    enumerable: true,\n    get: function () {\n      return osName;\n    }\n  });\n  Object.defineProperty(exports, \"osVersion\", {\n    enumerable: true,\n    get: function () {\n      return osVersion;\n    }\n  });\n  Object.defineProperty(exports, \"osBuildId\", {\n    enumerable: true,\n    get: function () {\n      return osBuildId;\n    }\n  });\n  Object.defineProperty(exports, \"osInternalBuildId\", {\n    enumerable: true,\n    get: function () {\n      return osInternalBuildId;\n    }\n  });\n  Object.defineProperty(exports, \"osBuildFingerprint\", {\n    enumerable: true,\n    get: function () {\n      return osBuildFingerprint;\n    }\n  });\n  Object.defineProperty(exports, \"platformApiLevel\", {\n    enumerable: true,\n    get: function () {\n      return platformApiLevel;\n    }\n  });\n  Object.defineProperty(exports, \"deviceName\", {\n    enumerable: true,\n    get: function () {\n      return deviceName;\n    }\n  });\n  exports.getDeviceTypeAsync = getDeviceTypeAsync;\n  exports.getUptimeAsync = getUptimeAsync;\n  exports.getMaxMemoryAsync = getMaxMemoryAsync;\n  exports.isRootedExperimentalAsync = isRootedExperimentalAsync;\n  exports.isSideLoadingEnabledAsync = isSideLoadingEnabledAsync;\n  exports.getPlatformFeaturesAsync = getPlatformFeaturesAsync;\n  exports.hasPlatformFeatureAsync = hasPlatformFeatureAsync;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _DeviceTypes = require(_dependencyMap[1], \"./Device.types\");\n  var _ExpoDevice = require(_dependencyMap[2], \"./ExpoDevice\");\n  var ExpoDevice = _interopDefault(_ExpoDevice);\n  /**\n   * `true` if the app is running on a real device and `false` if running in a simulator or emulator.\n   * On web, this is always set to `true`.\n   */\n  const isDevice = ExpoDevice.default ? ExpoDevice.default.isDevice : true;\n  /**\n   * The device brand. The consumer-visible brand of the product/hardware. On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.brand; // Android: \"google\", \"xiaomi\"; iOS: \"Apple\"; web: null\n   * ```\n   * @platform android\n   * @platform ios\n   */\n  const brand = ExpoDevice.default ? ExpoDevice.default.brand : null;\n  /**\n   * The actual device manufacturer of the product or hardware. This value of this field may be `null` if it cannot be determined.\n   *\n   * To view difference between `brand` and `manufacturer` on Android see [official documentation](https://developer.android.com/reference/android/os/Build).\n   *\n   * @example\n   * ```js\n   * Device.manufacturer; // Android: \"Google\", \"xiaomi\"; iOS: \"Apple\"; web: \"Google\", null\n   * ```\n   */\n  const manufacturer = ExpoDevice.default ? ExpoDevice.default.manufacturer : null;\n  /**\n   * The internal model ID of the device. This is useful for programmatically identifying the type of device and is not a human-friendly string.\n   * On web and Android, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.modelId; // iOS: \"iPhone7,2\"; Android: null; web: null\n   * ```\n   * @platform ios\n   */\n  const modelId = ExpoDevice.default ? ExpoDevice.default.modelId || null : null;\n  /**\n   * The human-friendly name of the device model. This is the name that people would typically use to refer to the device rather than a programmatic model identifier.\n   * This value of this field may be `null` if it cannot be determined.\n   *\n   * @example\n   * ```js\n   * Device.modelName; // Android: \"Pixel 2\"; iOS: \"iPhone XS Max\"; web: \"iPhone\", null\n   * ```\n   */\n  const modelName = ExpoDevice.default ? ExpoDevice.default.modelName : null;\n  /**\n   * The specific configuration or name of the industrial design. It represents the device's name when it was designed during manufacturing into mass production.\n   * On Android, it corresponds to [`Build.DEVICE`](https://developer.android.com/reference/android/os/Build#DEVICE). On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.designName; // Android: \"kminilte\"; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  const designName = ExpoDevice.default ? ExpoDevice.default.designName || null : null;\n  /**\n   * The device's overall product name chosen by the device implementer containing the development name or code name of the device.\n   * Corresponds to [`Build.PRODUCT`](https://developer.android.com/reference/android/os/Build#PRODUCT). On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.productName; // Android: \"kminiltexx\"; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  const productName = ExpoDevice.default ? ExpoDevice.default.productName || null : null;\n  /**\n   * The type of the device as a [`DeviceType`](#devicetype) enum value.\n   *\n   * On Android, for devices other than TVs, the device type is determined by the screen resolution (screen diagonal size), so the result may not be completely accurate.\n   * If the screen diagonal length is between 3\" and 6.9\", the method returns `DeviceType.PHONE`. For lengths between 7\" and 18\", the method returns `DeviceType.TABLET`.\n   * Otherwise, the method returns `DeviceType.UNKNOWN`.\n   *\n   * @example\n   * ```js\n   * Device.deviceType; // UNKNOWN, PHONE, TABLET, TV, DESKTOP\n   * ```\n   */\n  const deviceType = ExpoDevice.default ? ExpoDevice.default.deviceType : null;\n  /**\n   * The [device year class](https://github.com/facebook/device-year-class) of this device. On web, this value is always `null`.\n   */\n  const deviceYearClass = ExpoDevice.default ? ExpoDevice.default.deviceYearClass : null;\n  /**\n   * The device's total memory, in bytes. This is the total memory accessible to the kernel, but not necessarily to a single app.\n   * This is basically the amount of RAM the device has, not including below-kernel fixed allocations like DMA buffers, RAM for the baseband CPU, etcâ€¦\n   * On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.totalMemory; // 17179869184\n   * ```\n   */\n  const totalMemory = ExpoDevice.default ? ExpoDevice.default.totalMemory : null;\n  /**\n   * A list of supported processor architecture versions. The device expects the binaries it runs to be compiled for one of these architectures.\n   * This value is `null` if the supported architectures could not be determined, particularly on web.\n   *\n   * @example\n   * ```js\n   * Device.supportedCpuArchitectures; // ['arm64 v8', 'Intel x86-64h Haswell', 'arm64-v8a', 'armeabi-v7a\", 'armeabi']\n   * ```\n   */\n  const supportedCpuArchitectures = ExpoDevice.default ? ExpoDevice.default.supportedCpuArchitectures : null;\n  /**\n   * The name of the OS running on the device.\n   *\n   * @example\n   * ```js\n   * Device.osName; // Android: \"Android\"; iOS: \"iOS\" or \"iPadOS\"; web: \"iOS\", \"Android\", \"Windows\"\n   * ```\n   */\n  const osName = ExpoDevice.default ? ExpoDevice.default.osName : null;\n  /**\n   * The human-readable OS version string. Note that the version string may not always contain three numbers separated by dots.\n   *\n   * @example\n   * ```js\n   * Device.osVersion; // Android: \"4.0.3\"; iOS: \"12.3.1\"; web: \"11.0\", \"8.1.0\"\n   * ```\n   */\n  const osVersion = ExpoDevice.default ? ExpoDevice.default.osVersion : null;\n  /**\n   * The build ID of the OS that more precisely identifies the version of the OS. On Android, this corresponds to `Build.DISPLAY` (not `Build.ID`)\n   * and currently is a string as described [here](https://source.android.com/setup/start/build-numbers). On iOS, this corresponds to `kern.osversion`\n   * and is the detailed OS version sometimes displayed next to the more human-readable version. On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osBuildId; // Android: \"PSR1.180720.075\"; iOS: \"16F203\"; web: null\n   * ```\n   */\n  const osBuildId = ExpoDevice.default ? ExpoDevice.default.osBuildId : null;\n  /**\n   * The internal build ID of the OS running on the device. On Android, this corresponds to `Build.ID`.\n   * On iOS, this is the same value as [`Device.osBuildId`](#deviceosbuildid). On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osInternalBuildId; // Android: \"MMB29K\"; iOS: \"16F203\"; web: null,\n   * ```\n   */\n  const osInternalBuildId = ExpoDevice.default ? ExpoDevice.default.osInternalBuildId : null;\n  /**\n   * A string that uniquely identifies the build of the currently running system OS. On Android, it follows this template:\n   * - `$(BRAND)/$(PRODUCT)/$(DEVICE)/$(BOARD):$(VERSION.RELEASE)/$(ID)/$(VERSION.INCREMENTAL):$(TYPE)/\\$(TAGS)`\n   * On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osBuildFingerprint;\n   * // Android: \"google/sdk_gphone_x86/generic_x86:9/PSR1.180720.075/5124027:user/release-keys\";\n   * // iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  const osBuildFingerprint = ExpoDevice.default ? ExpoDevice.default.osBuildFingerprint || null : null;\n  /**\n   * The Android SDK version of the software currently running on this hardware device. This value never changes while a device is booted,\n   * but it may increase when the hardware manufacturer provides an OS update. See [here](https://developer.android.com/reference/android/os/Build.VERSION_CODES.html)\n   * to see all possible version codes and corresponding versions. On iOS and web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.platformApiLevel; // Android: 19; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  const platformApiLevel = ExpoDevice.default ? ExpoDevice.default.platformApiLevel || null : null;\n  /**\n   * The human-readable name of the device, which may be set by the device's user. If the device name is unavailable, particularly on web, this value is `null`.\n   *\n   * > On iOS 16 and newer, this value will be set to generic \"iPhone\" until you add the correct entitlement, see [iOS Capabilities page](/build-reference/ios-capabilities)\n   * > to learn how to add one and check out [Apple documentation](https://developer.apple.com/documentation/uikit/uidevice/1620015-name#discussion)\n   * > for more details on this change.\n   *\n   * @example\n   * ```js\n   * Device.deviceName; // \"Vivian's iPhone XS\"\n   * ```\n   */\n  const deviceName = ExpoDevice.default ? ExpoDevice.default.deviceName : null;\n  /**\n   * Checks the type of the device as a [`DeviceType`](#devicetype) enum value.\n   *\n   * On Android, for devices other than TVs, the device type is determined by the screen resolution (screen diagonal size), so the result may not be completely accurate.\n   * If the screen diagonal length is between 3\" and 6.9\", the method returns `DeviceType.PHONE`. For lengths between 7\" and 18\", the method returns `DeviceType.TABLET`.\n   * Otherwise, the method returns `DeviceType.UNKNOWN`.\n   *\n   * @return Returns a promise that resolves to a [`DeviceType`](#devicetype) enum value.\n   * @example\n   * ```js\n   * await Device.getDeviceTypeAsync();\n   * // DeviceType.PHONE\n   * ```\n   */\n  async function getDeviceTypeAsync() {\n    if (!ExpoDevice.default.getDeviceTypeAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n    }\n    return await ExpoDevice.default.getDeviceTypeAsync();\n  }\n  /**\n   * Gets the uptime since the last reboot of the device, in milliseconds. Android devices do not count time spent in deep sleep.\n   * @return Returns a promise that resolves to a `number` that represents the milliseconds since last reboot.\n   * @example\n   * ```js\n   * await Device.getUptimeAsync();\n   * // 4371054\n   * ```\n   * @platform android\n   * @platform ios\n   */\n  async function getUptimeAsync() {\n    if (!ExpoDevice.default.getUptimeAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-device', 'getUptimeAsync');\n    }\n    return await ExpoDevice.default.getUptimeAsync();\n  }\n  /**\n   * Returns the maximum amount of memory that the Java VM will attempt to use. If there is no inherent limit then `Number.MAX_SAFE_INTEGER` is returned.\n   * @return Returns a promise that resolves to the maximum available memory that the Java VM will use, in bytes.\n   * @example\n   * ```js\n   * await Device.getMaxMemoryAsync();\n   * // 402653184\n   * ```\n   * @platform android\n   */\n  async function getMaxMemoryAsync() {\n    if (!ExpoDevice.default.getMaxMemoryAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n    }\n    let maxMemory = await ExpoDevice.default.getMaxMemoryAsync();\n    if (maxMemory === -1) {\n      maxMemory = Number.MAX_SAFE_INTEGER;\n    }\n    return maxMemory;\n  }\n  /**\n   * > **warning** This method is experimental and is not completely reliable. See description below.\n   *\n   * Checks whether the device has been rooted (Android) or jailbroken (iOS). This is not completely reliable because there exist solutions to bypass root-detection\n   * on both [iOS](https://www.theiphonewiki.com/wiki/XCon) and [Android](https://tweakerlinks.com/how-to-bypass-apps-root-detection-in-android-device/).\n   * Further, many root-detection checks can be bypassed via reverse engineering.\n   * - On Android, it's implemented in a way to find all possible files paths that contain the `\"su\"` executable but some devices that are not rooted may also have this executable. Therefore, there's no guarantee that this method will always return correctly.\n   * - On iOS, [these jailbreak checks](https://www.theiphonewiki.com/wiki/Bypassing_Jailbreak_Detection) are used to detect if a device is rooted/jailbroken. However, since there are closed-sourced solutions such as [xCon](https://www.theiphonewiki.com/wiki/XCon) that aim to hook every known method and function responsible for informing an application of a jailbroken device, this method may not reliably detect devices that have xCon or similar packages installed.\n   * - On web, this always resolves to `false` even if the device is rooted.\n   * @return Returns a promise that resolves to a `boolean` that specifies whether this device is rooted.\n   * @example\n   * ```js\n   * await Device.isRootedExperimentalAsync();\n   * // true or false\n   * ```\n   */\n  async function isRootedExperimentalAsync() {\n    if (!ExpoDevice.default.isRootedExperimentalAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n    }\n    return await ExpoDevice.default.isRootedExperimentalAsync();\n  }\n  /**\n   * **Using this method requires you to [add the `REQUEST_INSTALL_PACKAGES` permission](./../config/app/#permissions).**\n   * Returns whether applications can be installed for this user via the system's [`ACTION_INSTALL_PACKAGE`](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_PACKAGE)\n   * mechanism rather than through the OS's default app store, like Google Play.\n   * @return Returns a promise that resolves to a `boolean` that represents whether the calling package is allowed to request package installation.\n   * @example\n   * ```js\n   * await Device.isSideLoadingEnabledAsync();\n   * // true or false\n   * ```\n   * @platform android\n   */\n  async function isSideLoadingEnabledAsync() {\n    if (!ExpoDevice.default.isSideLoadingEnabledAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n    }\n    return await ExpoDevice.default.isSideLoadingEnabledAsync();\n  }\n  /**\n   * Gets a list of features that are available on the system. The feature names are platform-specific.\n   * See [Android documentation](<https://developer.android.com/reference/android/content/pm/PackageManager#getSystemAvailableFeatures()>)\n   * to learn more about this implementation.\n   * @return Returns a promise that resolves to an array of strings, each of which is a platform-specific name of a feature available on the current device.\n   * On iOS and web, the promise always resolves to an empty array.\n   * @example\n   * ```js\n   * await Device.getPlatformFeaturesAsync();\n   * // [\n   * //   'android.software.adoptable_storage',\n   * //   'android.software.backup',\n   * //   'android.hardware.sensor.accelerometer',\n   * //   'android.hardware.touchscreen',\n   * // ]\n   * ```\n   * @platform android\n   */\n  async function getPlatformFeaturesAsync() {\n    if (!ExpoDevice.default.getPlatformFeaturesAsync) {\n      return [];\n    }\n    return await ExpoDevice.default.getPlatformFeaturesAsync();\n  }\n  /**\n   * Tells if the device has a specific system feature.\n   * @param feature The platform-specific name of the feature to check for on the device. You can get all available system features with `Device.getSystemFeatureAsync()`.\n   * See [Android documentation](<https://developer.android.com/reference/android/content/pm/PackageManager#hasSystemFeature(java.lang.String)>) to view acceptable feature strings.\n   * @return Returns a promise that resolves to a boolean value indicating whether the device has the specified system feature.\n   * On iOS and web, the promise always resolves to `false`.\n   * @example\n   * ```js\n   * await Device.hasPlatformFeatureAsync('amazon.hardware.fire_tv');\n   * // true or false\n   * ```\n   * @platform android\n   */\n  async function hasPlatformFeatureAsync(feature) {\n    if (!ExpoDevice.default.hasPlatformFeatureAsync) {\n      return false;\n    }\n    return await ExpoDevice.default.hasPlatformFeatureAsync(feature);\n  }\n});","lineCount":463,"map":[[12,2,4,0,"Object"],[12,8,4,0],[12,9,4,0,"defineProperty"],[12,23,4,0],[12,24,4,0,"exports"],[12,31,4,0],[13,4,4,0,"enumerable"],[13,14,4,0],[14,4,4,0,"get"],[14,7,4,0],[14,18,4,0,"get"],[14,19,4,0],[15,6,4,0],[15,13,4,9,"DeviceType"],[15,25,4,19],[15,26,4,19,"DeviceType"],[15,36,4,19],[16,4,4,19],[17,2,4,19],[18,2,9,0,"Object"],[18,8,9,0],[18,9,9,0,"defineProperty"],[18,23,9,0],[18,24,9,0,"exports"],[18,31,9,0],[19,4,9,0,"enumerable"],[19,14,9,0],[20,4,9,0,"get"],[20,7,9,0],[20,18,9,0,"get"],[20,19,9,0],[21,6,9,0],[21,13,9,0,"isDevice"],[21,21,9,0],[22,4,9,0],[23,2,9,0],[24,2,20,0,"Object"],[24,8,20,0],[24,9,20,0,"defineProperty"],[24,23,20,0],[24,24,20,0,"exports"],[24,31,20,0],[25,4,20,0,"enumerable"],[25,14,20,0],[26,4,20,0,"get"],[26,7,20,0],[26,18,20,0,"get"],[26,19,20,0],[27,6,20,0],[27,13,20,0,"brand"],[27,18,20,0],[28,4,20,0],[29,2,20,0],[30,2,31,0,"Object"],[30,8,31,0],[30,9,31,0,"defineProperty"],[30,23,31,0],[30,24,31,0,"exports"],[30,31,31,0],[31,4,31,0,"enumerable"],[31,14,31,0],[32,4,31,0,"get"],[32,7,31,0],[32,18,31,0,"get"],[32,19,31,0],[33,6,31,0],[33,13,31,0,"manufacturer"],[33,25,31,0],[34,4,31,0],[35,2,31,0],[36,2,42,0,"Object"],[36,8,42,0],[36,9,42,0,"defineProperty"],[36,23,42,0],[36,24,42,0,"exports"],[36,31,42,0],[37,4,42,0,"enumerable"],[37,14,42,0],[38,4,42,0,"get"],[38,7,42,0],[38,18,42,0,"get"],[38,19,42,0],[39,6,42,0],[39,13,42,0,"modelId"],[39,20,42,0],[40,4,42,0],[41,2,42,0],[42,2,52,0,"Object"],[42,8,52,0],[42,9,52,0,"defineProperty"],[42,23,52,0],[42,24,52,0,"exports"],[42,31,52,0],[43,4,52,0,"enumerable"],[43,14,52,0],[44,4,52,0,"get"],[44,7,52,0],[44,18,52,0,"get"],[44,19,52,0],[45,6,52,0],[45,13,52,0,"modelName"],[45,22,52,0],[46,4,52,0],[47,2,52,0],[48,2,63,0,"Object"],[48,8,63,0],[48,9,63,0,"defineProperty"],[48,23,63,0],[48,24,63,0,"exports"],[48,31,63,0],[49,4,63,0,"enumerable"],[49,14,63,0],[50,4,63,0,"get"],[50,7,63,0],[50,18,63,0,"get"],[50,19,63,0],[51,6,63,0],[51,13,63,0,"designName"],[51,23,63,0],[52,4,63,0],[53,2,63,0],[54,2,74,0,"Object"],[54,8,74,0],[54,9,74,0,"defineProperty"],[54,23,74,0],[54,24,74,0,"exports"],[54,31,74,0],[55,4,74,0,"enumerable"],[55,14,74,0],[56,4,74,0,"get"],[56,7,74,0],[56,18,74,0,"get"],[56,19,74,0],[57,6,74,0],[57,13,74,0,"productName"],[57,24,74,0],[58,4,74,0],[59,2,74,0],[60,2,87,0,"Object"],[60,8,87,0],[60,9,87,0,"defineProperty"],[60,23,87,0],[60,24,87,0,"exports"],[60,31,87,0],[61,4,87,0,"enumerable"],[61,14,87,0],[62,4,87,0,"get"],[62,7,87,0],[62,18,87,0,"get"],[62,19,87,0],[63,6,87,0],[63,13,87,0,"deviceType"],[63,23,87,0],[64,4,87,0],[65,2,87,0],[66,2,91,0,"Object"],[66,8,91,0],[66,9,91,0,"defineProperty"],[66,23,91,0],[66,24,91,0,"exports"],[66,31,91,0],[67,4,91,0,"enumerable"],[67,14,91,0],[68,4,91,0,"get"],[68,7,91,0],[68,18,91,0,"get"],[68,19,91,0],[69,6,91,0],[69,13,91,0,"deviceYearClass"],[69,28,91,0],[70,4,91,0],[71,2,91,0],[72,2,102,0,"Object"],[72,8,102,0],[72,9,102,0,"defineProperty"],[72,23,102,0],[72,24,102,0,"exports"],[72,31,102,0],[73,4,102,0,"enumerable"],[73,14,102,0],[74,4,102,0,"get"],[74,7,102,0],[74,18,102,0,"get"],[74,19,102,0],[75,6,102,0],[75,13,102,0,"totalMemory"],[75,24,102,0],[76,4,102,0],[77,2,102,0],[78,2,112,0,"Object"],[78,8,112,0],[78,9,112,0,"defineProperty"],[78,23,112,0],[78,24,112,0,"exports"],[78,31,112,0],[79,4,112,0,"enumerable"],[79,14,112,0],[80,4,112,0,"get"],[80,7,112,0],[80,18,112,0,"get"],[80,19,112,0],[81,6,112,0],[81,13,112,0,"supportedCpuArchitectures"],[81,38,112,0],[82,4,112,0],[83,2,112,0],[84,2,123,0,"Object"],[84,8,123,0],[84,9,123,0,"defineProperty"],[84,23,123,0],[84,24,123,0,"exports"],[84,31,123,0],[85,4,123,0,"enumerable"],[85,14,123,0],[86,4,123,0,"get"],[86,7,123,0],[86,18,123,0,"get"],[86,19,123,0],[87,6,123,0],[87,13,123,0,"osName"],[87,19,123,0],[88,4,123,0],[89,2,123,0],[90,2,132,0,"Object"],[90,8,132,0],[90,9,132,0,"defineProperty"],[90,23,132,0],[90,24,132,0,"exports"],[90,31,132,0],[91,4,132,0,"enumerable"],[91,14,132,0],[92,4,132,0,"get"],[92,7,132,0],[92,18,132,0,"get"],[92,19,132,0],[93,6,132,0],[93,13,132,0,"osVersion"],[93,22,132,0],[94,4,132,0],[95,2,132,0],[96,2,143,0,"Object"],[96,8,143,0],[96,9,143,0,"defineProperty"],[96,23,143,0],[96,24,143,0,"exports"],[96,31,143,0],[97,4,143,0,"enumerable"],[97,14,143,0],[98,4,143,0,"get"],[98,7,143,0],[98,18,143,0,"get"],[98,19,143,0],[99,6,143,0],[99,13,143,0,"osBuildId"],[99,22,143,0],[100,4,143,0],[101,2,143,0],[102,2,153,0,"Object"],[102,8,153,0],[102,9,153,0,"defineProperty"],[102,23,153,0],[102,24,153,0,"exports"],[102,31,153,0],[103,4,153,0,"enumerable"],[103,14,153,0],[104,4,153,0,"get"],[104,7,153,0],[104,18,153,0,"get"],[104,19,153,0],[105,6,153,0],[105,13,153,0,"osInternalBuildId"],[105,30,153,0],[106,4,153,0],[107,2,153,0],[108,2,167,0,"Object"],[108,8,167,0],[108,9,167,0,"defineProperty"],[108,23,167,0],[108,24,167,0,"exports"],[108,31,167,0],[109,4,167,0,"enumerable"],[109,14,167,0],[110,4,167,0,"get"],[110,7,167,0],[110,18,167,0,"get"],[110,19,167,0],[111,6,167,0],[111,13,167,0,"osBuildFingerprint"],[111,31,167,0],[112,4,167,0],[113,2,167,0],[114,2,181,0,"Object"],[114,8,181,0],[114,9,181,0,"defineProperty"],[114,23,181,0],[114,24,181,0,"exports"],[114,31,181,0],[115,4,181,0,"enumerable"],[115,14,181,0],[116,4,181,0,"get"],[116,7,181,0],[116,18,181,0,"get"],[116,19,181,0],[117,6,181,0],[117,13,181,0,"platformApiLevel"],[117,29,181,0],[118,4,181,0],[119,2,181,0],[120,2,196,0,"Object"],[120,8,196,0],[120,9,196,0,"defineProperty"],[120,23,196,0],[120,24,196,0,"exports"],[120,31,196,0],[121,4,196,0,"enumerable"],[121,14,196,0],[122,4,196,0,"get"],[122,7,196,0],[122,18,196,0,"get"],[122,19,196,0],[123,6,196,0],[123,13,196,0,"deviceName"],[123,23,196,0],[124,4,196,0],[125,2,196,0],[126,2,211,0,"exports"],[126,9,211,0],[126,10,211,0,"getDeviceTypeAsync"],[126,28,211,0],[126,31,211,0,"getDeviceTypeAsync"],[126,49,211,0],[127,2,228,0,"exports"],[127,9,228,0],[127,10,228,0,"getUptimeAsync"],[127,24,228,0],[127,27,228,0,"getUptimeAsync"],[127,41,228,0],[128,2,244,0,"exports"],[128,9,244,0],[128,10,244,0,"getMaxMemoryAsync"],[128,27,244,0],[128,30,244,0,"getMaxMemoryAsync"],[128,47,244,0],[129,2,270,0,"exports"],[129,9,270,0],[129,10,270,0,"isRootedExperimentalAsync"],[129,35,270,0],[129,38,270,0,"isRootedExperimentalAsync"],[129,63,270,0],[130,2,288,0,"exports"],[130,9,288,0],[130,10,288,0,"isSideLoadingEnabledAsync"],[130,35,288,0],[130,38,288,0,"isSideLoadingEnabledAsync"],[130,63,288,0],[131,2,312,0,"exports"],[131,9,312,0],[131,10,312,0,"getPlatformFeaturesAsync"],[131,34,312,0],[131,37,312,0,"getPlatformFeaturesAsync"],[131,61,312,0],[132,2,331,0,"exports"],[132,9,331,0],[132,10,331,0,"hasPlatformFeatureAsync"],[132,33,331,0],[132,36,331,0,"hasPlatformFeatureAsync"],[132,59,331,0],[133,2,1,0],[133,6,1,0,"_expoModulesCore"],[133,22,1,0],[133,25,1,0,"require"],[133,32,1,0],[133,33,1,0,"_dependencyMap"],[133,47,1,0],[134,2,2,0],[134,6,2,0,"_DeviceTypes"],[134,18,2,0],[134,21,2,0,"require"],[134,28,2,0],[134,29,2,0,"_dependencyMap"],[134,43,2,0],[135,2,3,0],[135,6,3,0,"_ExpoDevice"],[135,17,3,0],[135,20,3,0,"require"],[135,27,3,0],[135,28,3,0,"_dependencyMap"],[135,42,3,0],[136,2,3,0],[136,6,3,0,"ExpoDevice"],[136,16,3,0],[136,19,3,0,"_interopDefault"],[136,34,3,0],[136,35,3,0,"_ExpoDevice"],[136,46,3,0],[137,2,5,0],[138,0,6,0],[139,0,7,0],[140,0,8,0],[141,2,9,7],[141,8,9,13,"isDevice"],[141,16,9,21],[141,19,9,24,"ExpoDevice"],[141,29,9,34],[141,30,9,34,"default"],[141,37,9,34],[141,40,9,37,"ExpoDevice"],[141,50,9,47],[141,51,9,47,"default"],[141,58,9,47],[141,59,9,48,"isDevice"],[141,67,9,56],[141,70,9,59],[141,74,9,63],[142,2,10,0],[143,0,11,0],[144,0,12,0],[145,0,13,0],[146,0,14,0],[147,0,15,0],[148,0,16,0],[149,0,17,0],[150,0,18,0],[151,0,19,0],[152,2,20,7],[152,8,20,13,"brand"],[152,13,20,18],[152,16,20,21,"ExpoDevice"],[152,26,20,31],[152,27,20,31,"default"],[152,34,20,31],[152,37,20,34,"ExpoDevice"],[152,47,20,44],[152,48,20,44,"default"],[152,55,20,44],[152,56,20,45,"brand"],[152,61,20,50],[152,64,20,53],[152,68,20,57],[153,2,21,0],[154,0,22,0],[155,0,23,0],[156,0,24,0],[157,0,25,0],[158,0,26,0],[159,0,27,0],[160,0,28,0],[161,0,29,0],[162,0,30,0],[163,2,31,7],[163,8,31,13,"manufacturer"],[163,20,31,25],[163,23,31,28,"ExpoDevice"],[163,33,31,38],[163,34,31,38,"default"],[163,41,31,38],[163,44,31,41,"ExpoDevice"],[163,54,31,51],[163,55,31,51,"default"],[163,62,31,51],[163,63,31,52,"manufacturer"],[163,75,31,64],[163,78,31,67],[163,82,31,71],[164,2,32,0],[165,0,33,0],[166,0,34,0],[167,0,35,0],[168,0,36,0],[169,0,37,0],[170,0,38,0],[171,0,39,0],[172,0,40,0],[173,0,41,0],[174,2,42,7],[174,8,42,13,"modelId"],[174,15,42,20],[174,18,42,23,"ExpoDevice"],[174,28,42,33],[174,29,42,33,"default"],[174,36,42,33],[174,39,42,36,"ExpoDevice"],[174,49,42,46],[174,50,42,46,"default"],[174,57,42,46],[174,58,42,47,"modelId"],[174,65,42,54],[174,69,42,58],[174,73,42,62],[174,76,42,65],[174,80,42,69],[175,2,43,0],[176,0,44,0],[177,0,45,0],[178,0,46,0],[179,0,47,0],[180,0,48,0],[181,0,49,0],[182,0,50,0],[183,0,51,0],[184,2,52,7],[184,8,52,13,"modelName"],[184,17,52,22],[184,20,52,25,"ExpoDevice"],[184,30,52,35],[184,31,52,35,"default"],[184,38,52,35],[184,41,52,38,"ExpoDevice"],[184,51,52,48],[184,52,52,48,"default"],[184,59,52,48],[184,60,52,49,"modelName"],[184,69,52,58],[184,72,52,61],[184,76,52,65],[185,2,53,0],[186,0,54,0],[187,0,55,0],[188,0,56,0],[189,0,57,0],[190,0,58,0],[191,0,59,0],[192,0,60,0],[193,0,61,0],[194,0,62,0],[195,2,63,7],[195,8,63,13,"designName"],[195,18,63,23],[195,21,63,26,"ExpoDevice"],[195,31,63,36],[195,32,63,36,"default"],[195,39,63,36],[195,42,63,39,"ExpoDevice"],[195,52,63,49],[195,53,63,49,"default"],[195,60,63,49],[195,61,63,50,"designName"],[195,71,63,60],[195,75,63,64],[195,79,63,68],[195,82,63,71],[195,86,63,75],[196,2,64,0],[197,0,65,0],[198,0,66,0],[199,0,67,0],[200,0,68,0],[201,0,69,0],[202,0,70,0],[203,0,71,0],[204,0,72,0],[205,0,73,0],[206,2,74,7],[206,8,74,13,"productName"],[206,19,74,24],[206,22,74,27,"ExpoDevice"],[206,32,74,37],[206,33,74,37,"default"],[206,40,74,37],[206,43,74,40,"ExpoDevice"],[206,53,74,50],[206,54,74,50,"default"],[206,61,74,50],[206,62,74,51,"productName"],[206,73,74,62],[206,77,74,66],[206,81,74,70],[206,84,74,73],[206,88,74,77],[207,2,75,0],[208,0,76,0],[209,0,77,0],[210,0,78,0],[211,0,79,0],[212,0,80,0],[213,0,81,0],[214,0,82,0],[215,0,83,0],[216,0,84,0],[217,0,85,0],[218,0,86,0],[219,2,87,7],[219,8,87,13,"deviceType"],[219,18,87,23],[219,21,87,26,"ExpoDevice"],[219,31,87,36],[219,32,87,36,"default"],[219,39,87,36],[219,42,87,39,"ExpoDevice"],[219,52,87,49],[219,53,87,49,"default"],[219,60,87,49],[219,61,87,50,"deviceType"],[219,71,87,60],[219,74,87,63],[219,78,87,67],[220,2,88,0],[221,0,89,0],[222,0,90,0],[223,2,91,7],[223,8,91,13,"deviceYearClass"],[223,23,91,28],[223,26,91,31,"ExpoDevice"],[223,36,91,41],[223,37,91,41,"default"],[223,44,91,41],[223,47,91,44,"ExpoDevice"],[223,57,91,54],[223,58,91,54,"default"],[223,65,91,54],[223,66,91,55,"deviceYearClass"],[223,81,91,70],[223,84,91,73],[223,88,91,77],[224,2,92,0],[225,0,93,0],[226,0,94,0],[227,0,95,0],[228,0,96,0],[229,0,97,0],[230,0,98,0],[231,0,99,0],[232,0,100,0],[233,0,101,0],[234,2,102,7],[234,8,102,13,"totalMemory"],[234,19,102,24],[234,22,102,27,"ExpoDevice"],[234,32,102,37],[234,33,102,37,"default"],[234,40,102,37],[234,43,102,40,"ExpoDevice"],[234,53,102,50],[234,54,102,50,"default"],[234,61,102,50],[234,62,102,51,"totalMemory"],[234,73,102,62],[234,76,102,65],[234,80,102,69],[235,2,103,0],[236,0,104,0],[237,0,105,0],[238,0,106,0],[239,0,107,0],[240,0,108,0],[241,0,109,0],[242,0,110,0],[243,0,111,0],[244,2,112,7],[244,8,112,13,"supportedCpuArchitectures"],[244,33,112,38],[244,36,112,41,"ExpoDevice"],[244,46,112,51],[244,47,112,51,"default"],[244,54,112,51],[244,57,113,6,"ExpoDevice"],[244,67,113,16],[244,68,113,16,"default"],[244,75,113,16],[244,76,113,17,"supportedCpuArchitectures"],[244,101,113,42],[244,104,114,6],[244,108,114,10],[245,2,115,0],[246,0,116,0],[247,0,117,0],[248,0,118,0],[249,0,119,0],[250,0,120,0],[251,0,121,0],[252,0,122,0],[253,2,123,7],[253,8,123,13,"osName"],[253,14,123,19],[253,17,123,22,"ExpoDevice"],[253,27,123,32],[253,28,123,32,"default"],[253,35,123,32],[253,38,123,35,"ExpoDevice"],[253,48,123,45],[253,49,123,45,"default"],[253,56,123,45],[253,57,123,46,"osName"],[253,63,123,52],[253,66,123,55],[253,70,123,59],[254,2,124,0],[255,0,125,0],[256,0,126,0],[257,0,127,0],[258,0,128,0],[259,0,129,0],[260,0,130,0],[261,0,131,0],[262,2,132,7],[262,8,132,13,"osVersion"],[262,17,132,22],[262,20,132,25,"ExpoDevice"],[262,30,132,35],[262,31,132,35,"default"],[262,38,132,35],[262,41,132,38,"ExpoDevice"],[262,51,132,48],[262,52,132,48,"default"],[262,59,132,48],[262,60,132,49,"osVersion"],[262,69,132,58],[262,72,132,61],[262,76,132,65],[263,2,133,0],[264,0,134,0],[265,0,135,0],[266,0,136,0],[267,0,137,0],[268,0,138,0],[269,0,139,0],[270,0,140,0],[271,0,141,0],[272,0,142,0],[273,2,143,7],[273,8,143,13,"osBuildId"],[273,17,143,22],[273,20,143,25,"ExpoDevice"],[273,30,143,35],[273,31,143,35,"default"],[273,38,143,35],[273,41,143,38,"ExpoDevice"],[273,51,143,48],[273,52,143,48,"default"],[273,59,143,48],[273,60,143,49,"osBuildId"],[273,69,143,58],[273,72,143,61],[273,76,143,65],[274,2,144,0],[275,0,145,0],[276,0,146,0],[277,0,147,0],[278,0,148,0],[279,0,149,0],[280,0,150,0],[281,0,151,0],[282,0,152,0],[283,2,153,7],[283,8,153,13,"osInternalBuildId"],[283,25,153,30],[283,28,153,33,"ExpoDevice"],[283,38,153,43],[283,39,153,43,"default"],[283,46,153,43],[283,49,153,46,"ExpoDevice"],[283,59,153,56],[283,60,153,56,"default"],[283,67,153,56],[283,68,153,57,"osInternalBuildId"],[283,85,153,74],[283,88,153,77],[283,92,153,81],[284,2,154,0],[285,0,155,0],[286,0,156,0],[287,0,157,0],[288,0,158,0],[289,0,159,0],[290,0,160,0],[291,0,161,0],[292,0,162,0],[293,0,163,0],[294,0,164,0],[295,0,165,0],[296,0,166,0],[297,2,167,7],[297,8,167,13,"osBuildFingerprint"],[297,26,167,31],[297,29,167,34,"ExpoDevice"],[297,39,167,44],[297,40,167,44,"default"],[297,47,167,44],[297,50,168,6,"ExpoDevice"],[297,60,168,16],[297,61,168,16,"default"],[297,68,168,16],[297,69,168,17,"osBuildFingerprint"],[297,87,168,35],[297,91,168,39],[297,95,168,43],[297,98,169,6],[297,102,169,10],[298,2,170,0],[299,0,171,0],[300,0,172,0],[301,0,173,0],[302,0,174,0],[303,0,175,0],[304,0,176,0],[305,0,177,0],[306,0,178,0],[307,0,179,0],[308,0,180,0],[309,2,181,7],[309,8,181,13,"platformApiLevel"],[309,24,181,29],[309,27,181,32,"ExpoDevice"],[309,37,181,42],[309,38,181,42,"default"],[309,45,181,42],[309,48,182,6,"ExpoDevice"],[309,58,182,16],[309,59,182,16,"default"],[309,66,182,16],[309,67,182,17,"platformApiLevel"],[309,83,182,33],[309,87,182,37],[309,91,182,41],[309,94,183,6],[309,98,183,10],[310,2,184,0],[311,0,185,0],[312,0,186,0],[313,0,187,0],[314,0,188,0],[315,0,189,0],[316,0,190,0],[317,0,191,0],[318,0,192,0],[319,0,193,0],[320,0,194,0],[321,0,195,0],[322,2,196,7],[322,8,196,13,"deviceName"],[322,18,196,23],[322,21,196,26,"ExpoDevice"],[322,31,196,36],[322,32,196,36,"default"],[322,39,196,36],[322,42,196,39,"ExpoDevice"],[322,52,196,49],[322,53,196,49,"default"],[322,60,196,49],[322,61,196,50,"deviceName"],[322,71,196,60],[322,74,196,63],[322,78,196,67],[323,2,197,0],[324,0,198,0],[325,0,199,0],[326,0,200,0],[327,0,201,0],[328,0,202,0],[329,0,203,0],[330,0,204,0],[331,0,205,0],[332,0,206,0],[333,0,207,0],[334,0,208,0],[335,0,209,0],[336,0,210,0],[337,2,211,7],[337,17,211,22,"getDeviceTypeAsync"],[337,35,211,40,"getDeviceTypeAsync"],[337,36,211,40],[337,38,211,43],[338,4,212,4],[338,8,212,8],[338,9,212,9,"ExpoDevice"],[338,19,212,19],[338,20,212,19,"default"],[338,27,212,19],[338,28,212,20,"getDeviceTypeAsync"],[338,46,212,38],[338,48,212,40],[339,6,213,8],[339,12,213,14],[339,16,213,18,"UnavailabilityError"],[339,32,213,37],[339,33,213,37,"UnavailabilityError"],[339,52,213,37],[339,53,213,38],[339,66,213,51],[339,68,213,53],[339,88,213,73],[339,89,213,74],[340,4,214,4],[341,4,215,4],[341,11,215,11],[341,17,215,17,"ExpoDevice"],[341,27,215,27],[341,28,215,27,"default"],[341,35,215,27],[341,36,215,28,"getDeviceTypeAsync"],[341,54,215,46],[341,55,215,47],[341,56,215,48],[342,2,216,0],[343,2,217,0],[344,0,218,0],[345,0,219,0],[346,0,220,0],[347,0,221,0],[348,0,222,0],[349,0,223,0],[350,0,224,0],[351,0,225,0],[352,0,226,0],[353,0,227,0],[354,2,228,7],[354,17,228,22,"getUptimeAsync"],[354,31,228,36,"getUptimeAsync"],[354,32,228,36],[354,34,228,39],[355,4,229,4],[355,8,229,8],[355,9,229,9,"ExpoDevice"],[355,19,229,19],[355,20,229,19,"default"],[355,27,229,19],[355,28,229,20,"getUptimeAsync"],[355,42,229,34],[355,44,229,36],[356,6,230,8],[356,12,230,14],[356,16,230,18,"UnavailabilityError"],[356,32,230,37],[356,33,230,37,"UnavailabilityError"],[356,52,230,37],[356,53,230,38],[356,66,230,51],[356,68,230,53],[356,84,230,69],[356,85,230,70],[357,4,231,4],[358,4,232,4],[358,11,232,11],[358,17,232,17,"ExpoDevice"],[358,27,232,27],[358,28,232,27,"default"],[358,35,232,27],[358,36,232,28,"getUptimeAsync"],[358,50,232,42],[358,51,232,43],[358,52,232,44],[359,2,233,0],[360,2,234,0],[361,0,235,0],[362,0,236,0],[363,0,237,0],[364,0,238,0],[365,0,239,0],[366,0,240,0],[367,0,241,0],[368,0,242,0],[369,0,243,0],[370,2,244,7],[370,17,244,22,"getMaxMemoryAsync"],[370,34,244,39,"getMaxMemoryAsync"],[370,35,244,39],[370,37,244,42],[371,4,245,4],[371,8,245,8],[371,9,245,9,"ExpoDevice"],[371,19,245,19],[371,20,245,19,"default"],[371,27,245,19],[371,28,245,20,"getMaxMemoryAsync"],[371,45,245,37],[371,47,245,39],[372,6,246,8],[372,12,246,14],[372,16,246,18,"UnavailabilityError"],[372,32,246,37],[372,33,246,37,"UnavailabilityError"],[372,52,246,37],[372,53,246,38],[372,66,246,51],[372,68,246,53],[372,87,246,72],[372,88,246,73],[373,4,247,4],[374,4,248,4],[374,8,248,8,"maxMemory"],[374,17,248,17],[374,20,248,20],[374,26,248,26,"ExpoDevice"],[374,36,248,36],[374,37,248,36,"default"],[374,44,248,36],[374,45,248,37,"getMaxMemoryAsync"],[374,62,248,54],[374,63,248,55],[374,64,248,56],[375,4,249,4],[375,8,249,8,"maxMemory"],[375,17,249,17],[375,22,249,22],[375,23,249,23],[375,24,249,24],[375,26,249,26],[376,6,250,8,"maxMemory"],[376,15,250,17],[376,18,250,20,"Number"],[376,24,250,26],[376,25,250,27,"MAX_SAFE_INTEGER"],[376,41,250,43],[377,4,251,4],[378,4,252,4],[378,11,252,11,"maxMemory"],[378,20,252,20],[379,2,253,0],[380,2,254,0],[381,0,255,0],[382,0,256,0],[383,0,257,0],[384,0,258,0],[385,0,259,0],[386,0,260,0],[387,0,261,0],[388,0,262,0],[389,0,263,0],[390,0,264,0],[391,0,265,0],[392,0,266,0],[393,0,267,0],[394,0,268,0],[395,0,269,0],[396,2,270,7],[396,17,270,22,"isRootedExperimentalAsync"],[396,42,270,47,"isRootedExperimentalAsync"],[396,43,270,47],[396,45,270,50],[397,4,271,4],[397,8,271,8],[397,9,271,9,"ExpoDevice"],[397,19,271,19],[397,20,271,19,"default"],[397,27,271,19],[397,28,271,20,"isRootedExperimentalAsync"],[397,53,271,45],[397,55,271,47],[398,6,272,8],[398,12,272,14],[398,16,272,18,"UnavailabilityError"],[398,32,272,37],[398,33,272,37,"UnavailabilityError"],[398,52,272,37],[398,53,272,38],[398,66,272,51],[398,68,272,53],[398,95,272,80],[398,96,272,81],[399,4,273,4],[400,4,274,4],[400,11,274,11],[400,17,274,17,"ExpoDevice"],[400,27,274,27],[400,28,274,27,"default"],[400,35,274,27],[400,36,274,28,"isRootedExperimentalAsync"],[400,61,274,53],[400,62,274,54],[400,63,274,55],[401,2,275,0],[402,2,276,0],[403,0,277,0],[404,0,278,0],[405,0,279,0],[406,0,280,0],[407,0,281,0],[408,0,282,0],[409,0,283,0],[410,0,284,0],[411,0,285,0],[412,0,286,0],[413,0,287,0],[414,2,288,7],[414,17,288,22,"isSideLoadingEnabledAsync"],[414,42,288,47,"isSideLoadingEnabledAsync"],[414,43,288,47],[414,45,288,50],[415,4,289,4],[415,8,289,8],[415,9,289,9,"ExpoDevice"],[415,19,289,19],[415,20,289,19,"default"],[415,27,289,19],[415,28,289,20,"isSideLoadingEnabledAsync"],[415,53,289,45],[415,55,289,47],[416,6,290,8],[416,12,290,14],[416,16,290,18,"UnavailabilityError"],[416,32,290,37],[416,33,290,37,"UnavailabilityError"],[416,52,290,37],[416,53,290,38],[416,66,290,51],[416,68,290,53],[416,95,290,80],[416,96,290,81],[417,4,291,4],[418,4,292,4],[418,11,292,11],[418,17,292,17,"ExpoDevice"],[418,27,292,27],[418,28,292,27,"default"],[418,35,292,27],[418,36,292,28,"isSideLoadingEnabledAsync"],[418,61,292,53],[418,62,292,54],[418,63,292,55],[419,2,293,0],[420,2,294,0],[421,0,295,0],[422,0,296,0],[423,0,297,0],[424,0,298,0],[425,0,299,0],[426,0,300,0],[427,0,301,0],[428,0,302,0],[429,0,303,0],[430,0,304,0],[431,0,305,0],[432,0,306,0],[433,0,307,0],[434,0,308,0],[435,0,309,0],[436,0,310,0],[437,0,311,0],[438,2,312,7],[438,17,312,22,"getPlatformFeaturesAsync"],[438,41,312,46,"getPlatformFeaturesAsync"],[438,42,312,46],[438,44,312,49],[439,4,313,4],[439,8,313,8],[439,9,313,9,"ExpoDevice"],[439,19,313,19],[439,20,313,19,"default"],[439,27,313,19],[439,28,313,20,"getPlatformFeaturesAsync"],[439,52,313,44],[439,54,313,46],[440,6,314,8],[440,13,314,15],[440,15,314,17],[441,4,315,4],[442,4,316,4],[442,11,316,11],[442,17,316,17,"ExpoDevice"],[442,27,316,27],[442,28,316,27,"default"],[442,35,316,27],[442,36,316,28,"getPlatformFeaturesAsync"],[442,60,316,52],[442,61,316,53],[442,62,316,54],[443,2,317,0],[444,2,318,0],[445,0,319,0],[446,0,320,0],[447,0,321,0],[448,0,322,0],[449,0,323,0],[450,0,324,0],[451,0,325,0],[452,0,326,0],[453,0,327,0],[454,0,328,0],[455,0,329,0],[456,0,330,0],[457,2,331,7],[457,17,331,22,"hasPlatformFeatureAsync"],[457,40,331,45,"hasPlatformFeatureAsync"],[457,41,331,46,"feature"],[457,48,331,53],[457,50,331,55],[458,4,332,4],[458,8,332,8],[458,9,332,9,"ExpoDevice"],[458,19,332,19],[458,20,332,19,"default"],[458,27,332,19],[458,28,332,20,"hasPlatformFeatureAsync"],[458,51,332,43],[458,53,332,45],[459,6,333,8],[459,13,333,15],[459,18,333,20],[460,4,334,4],[461,4,335,4],[461,11,335,11],[461,17,335,17,"ExpoDevice"],[461,27,335,27],[461,28,335,27,"default"],[461,35,335,27],[461,36,335,28,"hasPlatformFeatureAsync"],[461,59,335,51],[461,60,335,52,"feature"],[461,67,335,59],[461,68,335,60],[462,2,336,0],[463,0,336,1],[463,3]],"functionMap":{"names":["<global>","getDeviceTypeAsync","getUptimeAsync","getMaxMemoryAsync","isRootedExperimentalAsync","isSideLoadingEnabledAsync","getPlatformFeaturesAsync","hasPlatformFeatureAsync"],"mappings":"AAA;OCkN;CDK;OEY;CFK;OGW;CHS;OIiB;CJK;OKa;CLK;OMmB;CNK;OOc;CPK"},"hasCjsExports":false},"type":"js/module"}]}