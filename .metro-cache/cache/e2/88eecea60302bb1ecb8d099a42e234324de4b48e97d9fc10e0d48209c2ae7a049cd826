{"dependencies":[{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":51,"index":113}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":47,"index":161}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"],"imports":1}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":37,"index":199}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.getWeekYear = getWeekYear;\n  var _libDefaultOptionsJs = require(_dependencyMap[0], \"./_lib/defaultOptions.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  var _startOfWeekJs = require(_dependencyMap[2], \"./startOfWeek.js\");\n  var _toDateJs = require(_dependencyMap[3], \"./toDate.js\");\n  /**\n   * The {@link getWeekYear} function options.\n   */\n\n  /**\n   * @name getWeekYear\n   * @category Week-Numbering Year Helpers\n   * @summary Get the local week-numbering year of the given date.\n   *\n   * @description\n   * Get the local week-numbering year of the given date.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @param date - The given date\n   * @param options - An object with options.\n   *\n   * @returns The local week-numbering year\n   *\n   * @example\n   * // Which week numbering year is 26 December 2004 with the default settings?\n   * const result = getWeekYear(new Date(2004, 11, 26))\n   * //=> 2005\n   *\n   * @example\n   * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n   * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n   * //=> 2004\n   *\n   * @example\n   * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n   * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n   * //=> 2004\n   */\n  function getWeekYear(date, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    const year = _date.getFullYear();\n    const defaultOptions = (0, _libDefaultOptionsJs.getDefaultOptions)();\n    const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n    const firstWeekOfNextYear = (0, _constructFromJs.constructFrom)(options?.in || date, 0);\n    firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n    firstWeekOfNextYear.setHours(0, 0, 0, 0);\n    const startOfNextYear = (0, _startOfWeekJs.startOfWeek)(firstWeekOfNextYear, options);\n    const firstWeekOfThisYear = (0, _constructFromJs.constructFrom)(options?.in || date, 0);\n    firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n    firstWeekOfThisYear.setHours(0, 0, 0, 0);\n    const startOfThisYear = (0, _startOfWeekJs.startOfWeek)(firstWeekOfThisYear, options);\n    if (+_date >= +startOfNextYear) {\n      return year + 1;\n    } else if (+_date >= +startOfThisYear) {\n      return year;\n    } else {\n      return year - 1;\n    }\n  }\n\n  // Fallback for modularized imports:\n  var _default = getWeekYear;\n});","lineCount":80,"map":[[7,2,76,0,"Object"],[7,8,76,0],[7,9,76,0,"defineProperty"],[7,23,76,0],[7,24,76,0,"exports"],[7,31,76,0],[8,4,76,0,"enumerable"],[8,14,76,0],[9,4,76,0,"get"],[9,7,76,0],[9,18,76,0,"get"],[9,19,76,0],[10,6,76,0],[10,13,76,0,"_default"],[10,21,76,0],[11,4,76,0],[12,2,76,0],[13,2,44,0,"exports"],[13,9,44,0],[13,10,44,0,"getWeekYear"],[13,21,44,0],[13,24,44,0,"getWeekYear"],[13,35,44,0],[14,2,1,0],[14,6,1,0,"_libDefaultOptionsJs"],[14,26,1,0],[14,29,1,0,"require"],[14,36,1,0],[14,37,1,0,"_dependencyMap"],[14,51,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,3,0],[16,6,3,0,"_startOfWeekJs"],[16,20,3,0],[16,23,3,0,"require"],[16,30,3,0],[16,31,3,0,"_dependencyMap"],[16,45,3,0],[17,2,4,0],[17,6,4,0,"_toDateJs"],[17,15,4,0],[17,18,4,0,"require"],[17,25,4,0],[17,26,4,0,"_dependencyMap"],[17,40,4,0],[18,2,6,0],[19,0,7,0],[20,0,8,0],[22,2,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,2,44,7],[56,11,44,16,"getWeekYear"],[56,22,44,27,"getWeekYear"],[56,23,44,28,"date"],[56,27,44,32],[56,29,44,34,"options"],[56,36,44,41],[56,38,44,43],[57,4,45,2],[57,10,45,8,"_date"],[57,15,45,13],[57,18,45,16],[57,22,45,16,"toDate"],[57,31,45,22],[57,32,45,22,"toDate"],[57,38,45,22],[57,40,45,23,"date"],[57,44,45,27],[57,46,45,29,"options"],[57,53,45,36],[57,55,45,38,"in"],[57,57,45,40],[57,58,45,41],[58,4,46,2],[58,10,46,8,"year"],[58,14,46,12],[58,17,46,15,"_date"],[58,22,46,20],[58,23,46,21,"getFullYear"],[58,34,46,32],[58,35,46,33],[58,36,46,34],[59,4,48,2],[59,10,48,8,"defaultOptions"],[59,24,48,22],[59,27,48,25],[59,31,48,25,"getDefaultOptions"],[59,51,48,42],[59,52,48,42,"getDefaultOptions"],[59,69,48,42],[59,71,48,43],[59,72,48,44],[60,4,49,2],[60,10,49,8,"firstWeekContainsDate"],[60,31,49,29],[60,34,50,4,"options"],[60,41,50,11],[60,43,50,13,"firstWeekContainsDate"],[60,64,50,34],[60,68,51,4,"options"],[60,75,51,11],[60,77,51,13,"locale"],[60,83,51,19],[60,85,51,21,"options"],[60,92,51,28],[60,94,51,30,"firstWeekContainsDate"],[60,115,51,51],[60,119,52,4,"defaultOptions"],[60,133,52,18],[60,134,52,19,"firstWeekContainsDate"],[60,155,52,40],[60,159,53,4,"defaultOptions"],[60,173,53,18],[60,174,53,19,"locale"],[60,180,53,25],[60,182,53,27,"options"],[60,189,53,34],[60,191,53,36,"firstWeekContainsDate"],[60,212,53,57],[60,216,54,4],[60,217,54,5],[61,4,56,2],[61,10,56,8,"firstWeekOfNextYear"],[61,29,56,27],[61,32,56,30],[61,36,56,30,"constructFrom"],[61,52,56,43],[61,53,56,43,"constructFrom"],[61,66,56,43],[61,68,56,44,"options"],[61,75,56,51],[61,77,56,53,"in"],[61,79,56,55],[61,83,56,59,"date"],[61,87,56,63],[61,89,56,65],[61,90,56,66],[61,91,56,67],[62,4,57,2,"firstWeekOfNextYear"],[62,23,57,21],[62,24,57,22,"setFullYear"],[62,35,57,33],[62,36,57,34,"year"],[62,40,57,38],[62,43,57,41],[62,44,57,42],[62,46,57,44],[62,47,57,45],[62,49,57,47,"firstWeekContainsDate"],[62,70,57,68],[62,71,57,69],[63,4,58,2,"firstWeekOfNextYear"],[63,23,58,21],[63,24,58,22,"setHours"],[63,32,58,30],[63,33,58,31],[63,34,58,32],[63,36,58,34],[63,37,58,35],[63,39,58,37],[63,40,58,38],[63,42,58,40],[63,43,58,41],[63,44,58,42],[64,4,59,2],[64,10,59,8,"startOfNextYear"],[64,25,59,23],[64,28,59,26],[64,32,59,26,"startOfWeek"],[64,46,59,37],[64,47,59,37,"startOfWeek"],[64,58,59,37],[64,60,59,38,"firstWeekOfNextYear"],[64,79,59,57],[64,81,59,59,"options"],[64,88,59,66],[64,89,59,67],[65,4,61,2],[65,10,61,8,"firstWeekOfThisYear"],[65,29,61,27],[65,32,61,30],[65,36,61,30,"constructFrom"],[65,52,61,43],[65,53,61,43,"constructFrom"],[65,66,61,43],[65,68,61,44,"options"],[65,75,61,51],[65,77,61,53,"in"],[65,79,61,55],[65,83,61,59,"date"],[65,87,61,63],[65,89,61,65],[65,90,61,66],[65,91,61,67],[66,4,62,2,"firstWeekOfThisYear"],[66,23,62,21],[66,24,62,22,"setFullYear"],[66,35,62,33],[66,36,62,34,"year"],[66,40,62,38],[66,42,62,40],[66,43,62,41],[66,45,62,43,"firstWeekContainsDate"],[66,66,62,64],[66,67,62,65],[67,4,63,2,"firstWeekOfThisYear"],[67,23,63,21],[67,24,63,22,"setHours"],[67,32,63,30],[67,33,63,31],[67,34,63,32],[67,36,63,34],[67,37,63,35],[67,39,63,37],[67,40,63,38],[67,42,63,40],[67,43,63,41],[67,44,63,42],[68,4,64,2],[68,10,64,8,"startOfThisYear"],[68,25,64,23],[68,28,64,26],[68,32,64,26,"startOfWeek"],[68,46,64,37],[68,47,64,37,"startOfWeek"],[68,58,64,37],[68,60,64,38,"firstWeekOfThisYear"],[68,79,64,57],[68,81,64,59,"options"],[68,88,64,66],[68,89,64,67],[69,4,66,2],[69,8,66,6],[69,9,66,7,"_date"],[69,14,66,12],[69,18,66,16],[69,19,66,17,"startOfNextYear"],[69,34,66,32],[69,36,66,34],[70,6,67,4],[70,13,67,11,"year"],[70,17,67,15],[70,20,67,18],[70,21,67,19],[71,4,68,2],[71,5,68,3],[71,11,68,9],[71,15,68,13],[71,16,68,14,"_date"],[71,21,68,19],[71,25,68,23],[71,26,68,24,"startOfThisYear"],[71,41,68,39],[71,43,68,41],[72,6,69,4],[72,13,69,11,"year"],[72,17,69,15],[73,4,70,2],[73,5,70,3],[73,11,70,9],[74,6,71,4],[74,13,71,11,"year"],[74,17,71,15],[74,20,71,18],[74,21,71,19],[75,4,72,2],[76,2,73,0],[78,2,75,0],[79,2,76,0],[79,6,76,0,"_default"],[79,14,76,0],[79,17,76,15,"getWeekYear"],[79,28,76,26],[80,0,76,27],[80,3]],"functionMap":{"names":["<global>","getWeekYear"],"mappings":"AAA;OC2C;CD6B"},"hasCjsExports":false},"type":"js/module"}]}