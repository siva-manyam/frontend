{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.startOfYear = startOfYear;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link startOfYear} function options.\n   */\n\n  /**\n   * @name startOfYear\n   * @category Year Helpers\n   * @summary Return the start of a year for the given date.\n   *\n   * @description\n   * Return the start of a year for the given date.\n   * The result will be in the local timezone.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The original date\n   * @param options - The options\n   *\n   * @returns The start of a year\n   *\n   * @example\n   * // The start of a year for 2 September 2014 11:55:00:\n   * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n   * //=> Wed Jan 01 2014 00:00:00\n   */\n  function startOfYear(date, options) {\n    const date_ = (0, _toDateJs.toDate)(date, options?.in);\n    date_.setFullYear(date_.getFullYear(), 0, 1);\n    date_.setHours(0, 0, 0, 0);\n    return date_;\n  }\n\n  // Fallback for modularized imports:\n  var _default = startOfYear;\n});","lineCount":50,"map":[[7,2,37,0,"Object"],[7,8,37,0],[7,9,37,0,"defineProperty"],[7,23,37,0],[7,24,37,0,"exports"],[7,31,37,0],[8,4,37,0,"enumerable"],[8,14,37,0],[9,4,37,0,"get"],[9,7,37,0],[9,18,37,0,"get"],[9,19,37,0],[10,6,37,0],[10,13,37,0,"_default"],[10,21,37,0],[11,4,37,0],[12,2,37,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"startOfYear"],[13,21,29,0],[13,24,29,0,"startOfYear"],[13,35,29,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,2,29,7],[41,11,29,16,"startOfYear"],[41,22,29,27,"startOfYear"],[41,23,29,28,"date"],[41,27,29,32],[41,29,29,34,"options"],[41,36,29,41],[41,38,29,43],[42,4,30,2],[42,10,30,8,"date_"],[42,15,30,13],[42,18,30,16],[42,22,30,16,"toDate"],[42,31,30,22],[42,32,30,22,"toDate"],[42,38,30,22],[42,40,30,23,"date"],[42,44,30,27],[42,46,30,29,"options"],[42,53,30,36],[42,55,30,38,"in"],[42,57,30,40],[42,58,30,41],[43,4,31,2,"date_"],[43,9,31,7],[43,10,31,8,"setFullYear"],[43,21,31,19],[43,22,31,20,"date_"],[43,27,31,25],[43,28,31,26,"getFullYear"],[43,39,31,37],[43,40,31,38],[43,41,31,39],[43,43,31,41],[43,44,31,42],[43,46,31,44],[43,47,31,45],[43,48,31,46],[44,4,32,2,"date_"],[44,9,32,7],[44,10,32,8,"setHours"],[44,18,32,16],[44,19,32,17],[44,20,32,18],[44,22,32,20],[44,23,32,21],[44,25,32,23],[44,26,32,24],[44,28,32,26],[44,29,32,27],[44,30,32,28],[45,4,33,2],[45,11,33,9,"date_"],[45,16,33,14],[46,2,34,0],[48,2,36,0],[49,2,37,0],[49,6,37,0,"_default"],[49,14,37,0],[49,17,37,15,"startOfYear"],[49,28,37,26],[50,0,37,27],[50,3]],"functionMap":{"names":["<global>","startOfYear"],"mappings":"AAA;OC4B;CDK"},"hasCjsExports":false},"type":"js/module"}]}