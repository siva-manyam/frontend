{"dependencies":[{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":51,"index":91}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"DayPeriodParser\", {\n    enumerable: true,\n    get: function () {\n      return DayPeriodParser;\n    }\n  });\n  var _ParserJs = require(_dependencyMap[0], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[1], \"../utils.js\");\n  // in the morning, in the afternoon, in the evening, at night\n  class DayPeriodParser extends _ParserJs.Parser {\n    priority = 80;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"B\":\n        case \"BB\":\n        case \"BBB\":\n          return match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"BBBBB\":\n          return match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"BBBB\":\n        default:\n          return match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n    set(date, _flags, value) {\n      date.setHours((0, _utilsJs.dayPeriodEnumToHours)(value), 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n  }\n});","lineCount":55,"map":[[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"DayPeriodParser"],[10,28,6,0],[11,4,6,0],[12,2,6,0],[13,2,1,0],[13,6,1,0,"_ParserJs"],[13,15,1,0],[13,18,1,0,"require"],[13,25,1,0],[13,26,1,0,"_dependencyMap"],[13,40,1,0],[14,2,3,0],[14,6,3,0,"_utilsJs"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,5,0],[16,2,6,7],[16,8,6,13,"DayPeriodParser"],[16,23,6,28],[16,32,6,37,"Parser"],[16,41,6,43],[16,42,6,43,"Parser"],[16,48,6,43],[16,49,6,44],[17,4,7,2,"priority"],[17,12,7,10],[17,15,7,13],[17,17,7,15],[18,4,9,2,"parse"],[18,9,9,7,"parse"],[18,10,9,8,"dateString"],[18,20,9,18],[18,22,9,20,"token"],[18,27,9,25],[18,29,9,27,"match"],[18,34,9,32],[18,36,9,34],[19,6,10,4],[19,14,10,12,"token"],[19,19,10,17],[20,8,11,6],[20,13,11,11],[20,16,11,14],[21,8,12,6],[21,13,12,11],[21,17,12,15],[22,8,13,6],[22,13,13,11],[22,18,13,16],[23,10,14,8],[23,17,15,10,"match"],[23,22,15,15],[23,23,15,16,"dayPeriod"],[23,32,15,25],[23,33,15,26,"dateString"],[23,43,15,36],[23,45,15,38],[24,12,16,12,"width"],[24,17,16,17],[24,19,16,19],[24,32,16,32],[25,12,17,12,"context"],[25,19,17,19],[25,21,17,21],[26,10,18,10],[26,11,18,11],[26,12,18,12],[26,16,19,10,"match"],[26,21,19,15],[26,22,19,16,"dayPeriod"],[26,31,19,25],[26,32,19,26,"dateString"],[26,42,19,36],[26,44,19,38],[27,12,20,12,"width"],[27,17,20,17],[27,19,20,19],[27,27,20,27],[28,12,21,12,"context"],[28,19,21,19],[28,21,21,21],[29,10,22,10],[29,11,22,11],[29,12,22,12],[30,8,25,6],[30,13,25,11],[30,20,25,18],[31,10,26,8],[31,17,26,15,"match"],[31,22,26,20],[31,23,26,21,"dayPeriod"],[31,32,26,30],[31,33,26,31,"dateString"],[31,43,26,41],[31,45,26,43],[32,12,27,10,"width"],[32,17,27,15],[32,19,27,17],[32,27,27,25],[33,12,28,10,"context"],[33,19,28,17],[33,21,28,19],[34,10,29,8],[34,11,29,9],[34,12,29,10],[35,8,30,6],[35,13,30,11],[35,19,30,17],[36,8,31,6],[37,10,32,8],[37,17,33,10,"match"],[37,22,33,15],[37,23,33,16,"dayPeriod"],[37,32,33,25],[37,33,33,26,"dateString"],[37,43,33,36],[37,45,33,38],[38,12,34,12,"width"],[38,17,34,17],[38,19,34,19],[38,25,34,25],[39,12,35,12,"context"],[39,19,35,19],[39,21,35,21],[40,10,36,10],[40,11,36,11],[40,12,36,12],[40,16,37,10,"match"],[40,21,37,15],[40,22,37,16,"dayPeriod"],[40,31,37,25],[40,32,37,26,"dateString"],[40,42,37,36],[40,44,37,38],[41,12,38,12,"width"],[41,17,38,17],[41,19,38,19],[41,32,38,32],[42,12,39,12,"context"],[42,19,39,19],[42,21,39,21],[43,10,40,10],[43,11,40,11],[43,12,40,12],[43,16,41,10,"match"],[43,21,41,15],[43,22,41,16,"dayPeriod"],[43,31,41,25],[43,32,41,26,"dateString"],[43,42,41,36],[43,44,41,38],[44,12,42,12,"width"],[44,17,42,17],[44,19,42,19],[44,27,42,27],[45,12,43,12,"context"],[45,19,43,19],[45,21,43,21],[46,10,44,10],[46,11,44,11],[46,12,44,12],[47,6,46,4],[48,4,47,2],[49,4,49,2,"set"],[49,7,49,5,"set"],[49,8,49,6,"date"],[49,12,49,10],[49,14,49,12,"_flags"],[49,20,49,18],[49,22,49,20,"value"],[49,27,49,25],[49,29,49,27],[50,6,50,4,"date"],[50,10,50,8],[50,11,50,9,"setHours"],[50,19,50,17],[50,20,50,18],[50,24,50,18,"dayPeriodEnumToHours"],[50,32,50,38],[50,33,50,38,"dayPeriodEnumToHours"],[50,53,50,38],[50,55,50,39,"value"],[50,60,50,44],[50,61,50,45],[50,63,50,47],[50,64,50,48],[50,66,50,50],[50,67,50,51],[50,69,50,53],[50,70,50,54],[50,71,50,55],[51,6,51,4],[51,13,51,11,"date"],[51,17,51,15],[52,4,52,2],[53,4,54,2,"incompatibleTokens"],[53,22,54,20],[53,25,54,23],[53,26,54,24],[53,29,54,27],[53,31,54,29],[53,34,54,32],[53,36,54,34],[53,39,54,37],[53,41,54,39],[53,44,54,42],[53,45,54,43],[54,2,55,0],[55,0,55,1],[55,3]],"functionMap":{"names":["<global>","DayPeriodParser","parse","set"],"mappings":"AAA;OCK;ECG;GDsC;EEE;GFG;CDG"},"hasCjsExports":false},"type":"js/module"}]}