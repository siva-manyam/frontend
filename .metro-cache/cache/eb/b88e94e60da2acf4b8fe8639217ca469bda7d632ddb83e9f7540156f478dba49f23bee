{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.areIntervalsOverlapping = areIntervalsOverlapping;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link areIntervalsOverlapping} function options.\n   */\n\n  /**\n   * @name areIntervalsOverlapping\n   * @category Interval Helpers\n   * @summary Is the given time interval overlapping with another time interval?\n   *\n   * @description\n   * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping unless `inclusive` is set to `true`.\n   *\n   * @param intervalLeft - The first interval to compare.\n   * @param intervalRight - The second interval to compare.\n   * @param options - The object with options\n   *\n   * @returns Whether the time intervals are overlapping\n   *\n   * @example\n   * // For overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n   * )\n   * //=> true\n   *\n   * @example\n   * // For non-overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // For adjacent time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // Using the inclusive option:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n   *   { inclusive: true }\n   * )\n   * //=> true\n   */\n  function areIntervalsOverlapping(intervalLeft, intervalRight, options) {\n    const [leftStartTime, leftEndTime] = [+(0, _toDateJs.toDate)(intervalLeft.start, options?.in), +(0, _toDateJs.toDate)(intervalLeft.end, options?.in)].sort((a, b) => a - b);\n    const [rightStartTime, rightEndTime] = [+(0, _toDateJs.toDate)(intervalRight.start, options?.in), +(0, _toDateJs.toDate)(intervalRight.end, options?.in)].sort((a, b) => a - b);\n    if (options?.inclusive) return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n    return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n  }\n\n  // Fallback for modularized imports:\n  var _default = areIntervalsOverlapping;\n});","lineCount":75,"map":[[7,2,71,0,"Object"],[7,8,71,0],[7,9,71,0,"defineProperty"],[7,23,71,0],[7,24,71,0,"exports"],[7,31,71,0],[8,4,71,0,"enumerable"],[8,14,71,0],[9,4,71,0,"get"],[9,7,71,0],[9,18,71,0,"get"],[9,19,71,0],[10,6,71,0],[10,13,71,0,"_default"],[10,21,71,0],[11,4,71,0],[12,2,71,0],[13,2,54,0,"exports"],[13,9,54,0],[13,10,54,0,"areIntervalsOverlapping"],[13,33,54,0],[13,36,54,0,"areIntervalsOverlapping"],[13,59,54,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,0,49,0],[62,0,50,0],[63,0,51,0],[64,0,52,0],[65,0,53,0],[66,2,54,7],[66,11,54,16,"areIntervalsOverlapping"],[66,34,54,39,"areIntervalsOverlapping"],[66,35,54,40,"intervalLeft"],[66,47,54,52],[66,49,54,54,"intervalRight"],[66,62,54,67],[66,64,54,69,"options"],[66,71,54,76],[66,73,54,78],[67,4,55,2],[67,10,55,8],[67,11,55,9,"leftStartTime"],[67,24,55,22],[67,26,55,24,"leftEndTime"],[67,37,55,35],[67,38,55,36],[67,41,55,39],[67,42,56,4],[67,43,56,5],[67,47,56,5,"toDate"],[67,56,56,11],[67,57,56,11,"toDate"],[67,63,56,11],[67,65,56,12,"intervalLeft"],[67,77,56,24],[67,78,56,25,"start"],[67,83,56,30],[67,85,56,32,"options"],[67,92,56,39],[67,94,56,41,"in"],[67,96,56,43],[67,97,56,44],[67,99,57,4],[67,100,57,5],[67,104,57,5,"toDate"],[67,113,57,11],[67,114,57,11,"toDate"],[67,120,57,11],[67,122,57,12,"intervalLeft"],[67,134,57,24],[67,135,57,25,"end"],[67,138,57,28],[67,140,57,30,"options"],[67,147,57,37],[67,149,57,39,"in"],[67,151,57,41],[67,152,57,42],[67,153,58,3],[67,154,58,4,"sort"],[67,158,58,8],[67,159,58,9],[67,160,58,10,"a"],[67,161,58,11],[67,163,58,13,"b"],[67,164,58,14],[67,169,58,19,"a"],[67,170,58,20],[67,173,58,23,"b"],[67,174,58,24],[67,175,58,25],[68,4,59,2],[68,10,59,8],[68,11,59,9,"rightStartTime"],[68,25,59,23],[68,27,59,25,"rightEndTime"],[68,39,59,37],[68,40,59,38],[68,43,59,41],[68,44,60,4],[68,45,60,5],[68,49,60,5,"toDate"],[68,58,60,11],[68,59,60,11,"toDate"],[68,65,60,11],[68,67,60,12,"intervalRight"],[68,80,60,25],[68,81,60,26,"start"],[68,86,60,31],[68,88,60,33,"options"],[68,95,60,40],[68,97,60,42,"in"],[68,99,60,44],[68,100,60,45],[68,102,61,4],[68,103,61,5],[68,107,61,5,"toDate"],[68,116,61,11],[68,117,61,11,"toDate"],[68,123,61,11],[68,125,61,12,"intervalRight"],[68,138,61,25],[68,139,61,26,"end"],[68,142,61,29],[68,144,61,31,"options"],[68,151,61,38],[68,153,61,40,"in"],[68,155,61,42],[68,156,61,43],[68,157,62,3],[68,158,62,4,"sort"],[68,162,62,8],[68,163,62,9],[68,164,62,10,"a"],[68,165,62,11],[68,167,62,13,"b"],[68,168,62,14],[68,173,62,19,"a"],[68,174,62,20],[68,177,62,23,"b"],[68,178,62,24],[68,179,62,25],[69,4,64,2],[69,8,64,6,"options"],[69,15,64,13],[69,17,64,15,"inclusive"],[69,26,64,24],[69,28,65,4],[69,35,65,11,"leftStartTime"],[69,48,65,24],[69,52,65,28,"rightEndTime"],[69,64,65,40],[69,68,65,44,"rightStartTime"],[69,82,65,58],[69,86,65,62,"leftEndTime"],[69,97,65,73],[70,4,67,2],[70,11,67,9,"leftStartTime"],[70,24,67,22],[70,27,67,25,"rightEndTime"],[70,39,67,37],[70,43,67,41,"rightStartTime"],[70,57,67,55],[70,60,67,58,"leftEndTime"],[70,71,67,69],[71,2,68,0],[73,2,70,0],[74,2,71,0],[74,6,71,0,"_default"],[74,14,71,0],[74,17,71,15,"areIntervalsOverlapping"],[74,40,71,38],[75,0,71,39],[75,3]],"functionMap":{"names":["<global>","areIntervalsOverlapping","sort$argument_0"],"mappings":"AAA;OCqD;SCI,eD;SCI,eD;CDM"},"hasCjsExports":false},"type":"js/module"}]}