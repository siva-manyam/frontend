{"dependencies":[{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"],"imports":1}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":38,"index":89}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":8,"column":21,"index":179}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"DateParser\", {\n    enumerable: true,\n    get: function () {\n      return DateParser;\n    }\n  });\n  var _constantsJs = require(_dependencyMap[0], \"../constants.js\");\n  var _ParserJs = require(_dependencyMap[1], \"../Parser.js\");\n  var _utilsJs = require(_dependencyMap[2], \"../utils.js\");\n  const DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  // Day of the month\n  class DateParser extends _ParserJs.Parser {\n    priority = 90;\n    subPriority = 1;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"d\":\n          return (0, _utilsJs.parseNumericPattern)(_constantsJs.numericPatterns.date, dateString);\n        case \"do\":\n          return match.ordinalNumber(dateString, {\n            unit: \"date\"\n          });\n        default:\n          return (0, _utilsJs.parseNDigits)(token.length, dateString);\n      }\n    }\n    validate(date, value) {\n      const year = date.getFullYear();\n      const isLeapYear = (0, _utilsJs.isLeapYearIndex)(year);\n      const month = date.getMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    }\n    set(date, _flags, value) {\n      date.setDate(value);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"w\", \"I\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n  }\n});","lineCount":52,"map":[[7,2,16,0,"Object"],[7,8,16,0],[7,9,16,0,"defineProperty"],[7,23,16,0],[7,24,16,0,"exports"],[7,31,16,0],[8,4,16,0,"enumerable"],[8,14,16,0],[9,4,16,0,"get"],[9,7,16,0],[9,18,16,0,"get"],[9,19,16,0],[10,6,16,0],[10,13,16,0,"DateParser"],[10,23,16,0],[11,4,16,0],[12,2,16,0],[13,2,1,0],[13,6,1,0,"_constantsJs"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,2,0],[14,6,2,0,"_ParserJs"],[14,15,2,0],[14,18,2,0,"require"],[14,25,2,0],[14,26,2,0,"_dependencyMap"],[14,40,2,0],[15,2,4,0],[15,6,4,0,"_utilsJs"],[15,14,4,0],[15,17,4,0,"require"],[15,24,4,0],[15,25,4,0,"_dependencyMap"],[15,39,4,0],[16,2,10,0],[16,8,10,6,"DAYS_IN_MONTH"],[16,21,10,19],[16,24,10,22],[16,25,10,23],[16,27,10,25],[16,29,10,27],[16,31,10,29],[16,33,10,31],[16,35,10,33],[16,37,10,35],[16,39,10,37],[16,41,10,39],[16,43,10,41],[16,45,10,43],[16,47,10,45],[16,49,10,47],[16,51,10,49],[16,53,10,51],[16,55,10,53],[16,57,10,55],[16,59,10,57],[16,61,10,59],[16,63,10,61],[16,65,10,63],[16,67,10,65],[16,69,10,67],[16,71,10,69],[16,72,10,70],[17,2,11,0],[17,8,11,6,"DAYS_IN_MONTH_LEAP_YEAR"],[17,31,11,29],[17,34,11,32],[17,35,12,2],[17,37,12,4],[17,39,12,6],[17,41,12,8],[17,43,12,10],[17,45,12,12],[17,47,12,14],[17,49,12,16],[17,51,12,18],[17,53,12,20],[17,55,12,22],[17,57,12,24],[17,59,12,26],[17,61,12,28],[17,63,12,30],[17,65,12,32],[17,67,12,34],[17,69,12,36],[17,71,12,38],[17,73,12,40],[17,75,12,42],[17,77,12,44],[17,79,12,46],[17,81,12,48],[17,82,13,1],[19,2,15,0],[20,2,16,7],[20,8,16,13,"DateParser"],[20,18,16,23],[20,27,16,32,"Parser"],[20,36,16,38],[20,37,16,38,"Parser"],[20,43,16,38],[20,44,16,39],[21,4,17,2,"priority"],[21,12,17,10],[21,15,17,13],[21,17,17,15],[22,4,18,2,"subPriority"],[22,15,18,13],[22,18,18,16],[22,19,18,17],[23,4,20,2,"parse"],[23,9,20,7,"parse"],[23,10,20,8,"dateString"],[23,20,20,18],[23,22,20,20,"token"],[23,27,20,25],[23,29,20,27,"match"],[23,34,20,32],[23,36,20,34],[24,6,21,4],[24,14,21,12,"token"],[24,19,21,17],[25,8,22,6],[25,13,22,11],[25,16,22,14],[26,10,23,8],[26,17,23,15],[26,21,23,15,"parseNumericPattern"],[26,29,23,34],[26,30,23,34,"parseNumericPattern"],[26,49,23,34],[26,51,23,35,"numericPatterns"],[26,63,23,50],[26,64,23,50,"numericPatterns"],[26,79,23,50],[26,80,23,51,"date"],[26,84,23,55],[26,86,23,57,"dateString"],[26,96,23,67],[26,97,23,68],[27,8,24,6],[27,13,24,11],[27,17,24,15],[28,10,25,8],[28,17,25,15,"match"],[28,22,25,20],[28,23,25,21,"ordinalNumber"],[28,36,25,34],[28,37,25,35,"dateString"],[28,47,25,45],[28,49,25,47],[29,12,25,49,"unit"],[29,16,25,53],[29,18,25,55],[30,10,25,62],[30,11,25,63],[30,12,25,64],[31,8,26,6],[32,10,27,8],[32,17,27,15],[32,21,27,15,"parseNDigits"],[32,29,27,27],[32,30,27,27,"parseNDigits"],[32,42,27,27],[32,44,27,28,"token"],[32,49,27,33],[32,50,27,34,"length"],[32,56,27,40],[32,58,27,42,"dateString"],[32,68,27,52],[32,69,27,53],[33,6,28,4],[34,4,29,2],[35,4,31,2,"validate"],[35,12,31,10,"validate"],[35,13,31,11,"date"],[35,17,31,15],[35,19,31,17,"value"],[35,24,31,22],[35,26,31,24],[36,6,32,4],[36,12,32,10,"year"],[36,16,32,14],[36,19,32,17,"date"],[36,23,32,21],[36,24,32,22,"getFullYear"],[36,35,32,33],[36,36,32,34],[36,37,32,35],[37,6,33,4],[37,12,33,10,"isLeapYear"],[37,22,33,20],[37,25,33,23],[37,29,33,23,"isLeapYearIndex"],[37,37,33,38],[37,38,33,38,"isLeapYearIndex"],[37,53,33,38],[37,55,33,39,"year"],[37,59,33,43],[37,60,33,44],[38,6,34,4],[38,12,34,10,"month"],[38,17,34,15],[38,20,34,18,"date"],[38,24,34,22],[38,25,34,23,"getMonth"],[38,33,34,31],[38,34,34,32],[38,35,34,33],[39,6,35,4],[39,10,35,8,"isLeapYear"],[39,20,35,18],[39,22,35,20],[40,8,36,6],[40,15,36,13,"value"],[40,20,36,18],[40,24,36,22],[40,25,36,23],[40,29,36,27,"value"],[40,34,36,32],[40,38,36,36,"DAYS_IN_MONTH_LEAP_YEAR"],[40,61,36,59],[40,62,36,60,"month"],[40,67,36,65],[40,68,36,66],[41,6,37,4],[41,7,37,5],[41,13,37,11],[42,8,38,6],[42,15,38,13,"value"],[42,20,38,18],[42,24,38,22],[42,25,38,23],[42,29,38,27,"value"],[42,34,38,32],[42,38,38,36,"DAYS_IN_MONTH"],[42,51,38,49],[42,52,38,50,"month"],[42,57,38,55],[42,58,38,56],[43,6,39,4],[44,4,40,2],[45,4,42,2,"set"],[45,7,42,5,"set"],[45,8,42,6,"date"],[45,12,42,10],[45,14,42,12,"_flags"],[45,20,42,18],[45,22,42,20,"value"],[45,27,42,25],[45,29,42,27],[46,6,43,4,"date"],[46,10,43,8],[46,11,43,9,"setDate"],[46,18,43,16],[46,19,43,17,"value"],[46,24,43,22],[46,25,43,23],[47,6,44,4,"date"],[47,10,44,8],[47,11,44,9,"setHours"],[47,19,44,17],[47,20,44,18],[47,21,44,19],[47,23,44,21],[47,24,44,22],[47,26,44,24],[47,27,44,25],[47,29,44,27],[47,30,44,28],[47,31,44,29],[48,6,45,4],[48,13,45,11,"date"],[48,17,45,15],[49,4,46,2],[50,4,48,2,"incompatibleTokens"],[50,22,48,20],[50,25,48,23],[50,26,49,4],[50,29,49,7],[50,31,50,4],[50,34,50,7],[50,36,51,4],[50,39,51,7],[50,41,52,4],[50,44,52,7],[50,46,53,4],[50,49,53,7],[50,51,54,4],[50,54,54,7],[50,56,55,4],[50,59,55,7],[50,61,56,4],[50,64,56,7],[50,66,57,4],[50,69,57,7],[50,71,58,4],[50,74,58,7],[50,76,59,4],[50,79,59,7],[50,81,60,4],[50,84,60,7],[50,85,61,3],[51,2,62,0],[52,0,62,1],[52,3]],"functionMap":{"names":["<global>","DateParser","parse","validate","set"],"mappings":"AAA;OCe;ECI;GDS;EEE;GFS;EGE;GHI;CDgB"},"hasCjsExports":false},"type":"js/module"}]}