{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.setDate = setDate;\n  var _toDateJs = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link setDate} function options.\n   */\n\n  /**\n   * @name setDate\n   * @category Day Helpers\n   * @summary Set the day of the month to the given date.\n   *\n   * @description\n   * Set the day of the month to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows using extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param dayOfMonth - The day of the month of the new date\n   * @param options - The options\n   *\n   * @returns The new date with the day of the month set\n   *\n   * @example\n   * // Set the 30th day of the month to 1 September 2014:\n   * const result = setDate(new Date(2014, 8, 1), 30)\n   * //=> Tue Sep 30 2014 00:00:00\n   */\n  function setDate(date, dayOfMonth, options) {\n    const _date = (0, _toDateJs.toDate)(date, options?.in);\n    _date.setDate(dayOfMonth);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = setDate;\n});","lineCount":49,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"_default"],[10,21,36,0],[11,4,36,0],[12,2,36,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"setDate"],[13,17,29,0],[13,20,29,0,"setDate"],[13,27,29,0],[14,2,1,0],[14,6,1,0,"_toDateJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,2,29,7],[41,11,29,16,"setDate"],[41,18,29,23,"setDate"],[41,19,29,24,"date"],[41,23,29,28],[41,25,29,30,"dayOfMonth"],[41,35,29,40],[41,37,29,42,"options"],[41,44,29,49],[41,46,29,51],[42,4,30,2],[42,10,30,8,"_date"],[42,15,30,13],[42,18,30,16],[42,22,30,16,"toDate"],[42,31,30,22],[42,32,30,22,"toDate"],[42,38,30,22],[42,40,30,23,"date"],[42,44,30,27],[42,46,30,29,"options"],[42,53,30,36],[42,55,30,38,"in"],[42,57,30,40],[42,58,30,41],[43,4,31,2,"_date"],[43,9,31,7],[43,10,31,8,"setDate"],[43,17,31,15],[43,18,31,16,"dayOfMonth"],[43,28,31,26],[43,29,31,27],[44,4,32,2],[44,11,32,9,"_date"],[44,16,32,14],[45,2,33,0],[47,2,35,0],[48,2,36,0],[48,6,36,0,"_default"],[48,14,36,0],[48,17,36,15,"setDate"],[48,24,36,22],[49,0,36,23],[49,3]],"functionMap":{"names":["<global>","setDate"],"mappings":"AAA;OC4B;CDI"},"hasCjsExports":false},"type":"js/module"}]}