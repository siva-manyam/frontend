{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"],"imports":1}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.eachHourOfInterval = eachHourOfInterval;\n  var _libNormalizeIntervalJs = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFromJs = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachHourOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachHourOfInterval} function result type.\n   * Resolves to the appropriate date type based on inputs.\n   */\n\n  /**\n   * @name eachHourOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of hours within the specified time interval.\n   *\n   * @description\n   * Return the array of hours within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of hours from the hour of the interval start to the hour of the interval end\n   *\n   * @example\n   * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n   * const result = eachHourOfInterval({\n   *   start: new Date(2014, 9, 6, 12),\n   *   end: new Date(2014, 9, 6, 15)\n   * });\n   * //=> [\n   * //   Mon Oct 06 2014 12:00:00,\n   * //   Mon Oct 06 2014 13:00:00,\n   * //   Mon Oct 06 2014 14:00:00,\n   * //   Mon Oct 06 2014 15:00:00\n   * // ]\n   */\n  function eachHourOfInterval(interval, options) {\n    const {\n      start,\n      end\n    } = (0, _libNormalizeIntervalJs.normalizeInterval)(options?.in, interval);\n    let reversed = +start > +end;\n    const endTime = reversed ? +start : +end;\n    const date = reversed ? end : start;\n    date.setMinutes(0, 0, 0);\n    let step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    const dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFromJs.constructFrom)(start, date));\n      date.setHours(date.getHours() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = eachHourOfInterval;\n});","lineCount":79,"map":[[7,2,68,0,"Object"],[7,8,68,0],[7,9,68,0,"defineProperty"],[7,23,68,0],[7,24,68,0,"exports"],[7,31,68,0],[8,4,68,0,"enumerable"],[8,14,68,0],[9,4,68,0,"get"],[9,7,68,0],[9,18,68,0,"get"],[9,19,68,0],[10,6,68,0],[10,13,68,0,"_default"],[10,21,68,0],[11,4,68,0],[12,2,68,0],[13,2,42,0,"exports"],[13,9,42,0],[13,10,42,0,"eachHourOfInterval"],[13,28,42,0],[13,31,42,0,"eachHourOfInterval"],[13,49,42,0],[14,2,1,0],[14,6,1,0,"_libNormalizeIntervalJs"],[14,29,1,0],[14,32,1,0,"require"],[14,39,1,0],[14,40,1,0,"_dependencyMap"],[14,54,1,0],[15,2,2,0],[15,6,2,0,"_constructFromJs"],[15,22,2,0],[15,25,2,0,"require"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,4,0],[17,0,5,0],[18,0,6,0],[20,2,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[25,2,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,0,41,0],[54,2,42,7],[54,11,42,16,"eachHourOfInterval"],[54,29,42,34,"eachHourOfInterval"],[54,30,42,35,"interval"],[54,38,42,43],[54,40,42,45,"options"],[54,47,42,52],[54,49,42,54],[55,4,43,2],[55,10,43,8],[56,6,43,10,"start"],[56,11,43,15],[57,6,43,17,"end"],[58,4,43,21],[58,5,43,22],[58,8,43,25],[58,12,43,25,"normalizeInterval"],[58,35,43,42],[58,36,43,42,"normalizeInterval"],[58,53,43,42],[58,55,43,43,"options"],[58,62,43,50],[58,64,43,52,"in"],[58,66,43,54],[58,68,43,56,"interval"],[58,76,43,64],[58,77,43,65],[59,4,45,2],[59,8,45,6,"reversed"],[59,16,45,14],[59,19,45,17],[59,20,45,18,"start"],[59,25,45,23],[59,28,45,26],[59,29,45,27,"end"],[59,32,45,30],[60,4,46,2],[60,10,46,8,"endTime"],[60,17,46,15],[60,20,46,18,"reversed"],[60,28,46,26],[60,31,46,29],[60,32,46,30,"start"],[60,37,46,35],[60,40,46,38],[60,41,46,39,"end"],[60,44,46,42],[61,4,47,2],[61,10,47,8,"date"],[61,14,47,12],[61,17,47,15,"reversed"],[61,25,47,23],[61,28,47,26,"end"],[61,31,47,29],[61,34,47,32,"start"],[61,39,47,37],[62,4,48,2,"date"],[62,8,48,6],[62,9,48,7,"setMinutes"],[62,19,48,17],[62,20,48,18],[62,21,48,19],[62,23,48,21],[62,24,48,22],[62,26,48,24],[62,27,48,25],[62,28,48,26],[63,4,50,2],[63,8,50,6,"step"],[63,12,50,10],[63,15,50,13,"options"],[63,22,50,20],[63,24,50,22,"step"],[63,28,50,26],[63,32,50,30],[63,33,50,31],[64,4,51,2],[64,8,51,6],[64,9,51,7,"step"],[64,13,51,11],[64,15,51,13],[64,22,51,20],[64,24,51,22],[65,4,52,2],[65,8,52,6,"step"],[65,12,52,10],[65,15,52,13],[65,16,52,14],[65,18,52,16],[66,6,53,4,"step"],[66,10,53,8],[66,13,53,11],[66,14,53,12,"step"],[66,18,53,16],[67,6,54,4,"reversed"],[67,14,54,12],[67,17,54,15],[67,18,54,16,"reversed"],[67,26,54,24],[68,4,55,2],[69,4,57,2],[69,10,57,8,"dates"],[69,15,57,13],[69,18,57,16],[69,20,57,18],[70,4,59,2],[70,11,59,9],[70,12,59,10,"date"],[70,16,59,14],[70,20,59,18,"endTime"],[70,27,59,25],[70,29,59,27],[71,6,60,4,"dates"],[71,11,60,9],[71,12,60,10,"push"],[71,16,60,14],[71,17,60,15],[71,21,60,15,"constructFrom"],[71,37,60,28],[71,38,60,28,"constructFrom"],[71,51,60,28],[71,53,60,29,"start"],[71,58,60,34],[71,60,60,36,"date"],[71,64,60,40],[71,65,60,41],[71,66,60,42],[72,6,61,4,"date"],[72,10,61,8],[72,11,61,9,"setHours"],[72,19,61,17],[72,20,61,18,"date"],[72,24,61,22],[72,25,61,23,"getHours"],[72,33,61,31],[72,34,61,32],[72,35,61,33],[72,38,61,36,"step"],[72,42,61,40],[72,43,61,41],[73,4,62,2],[74,4,64,2],[74,11,64,9,"reversed"],[74,19,64,17],[74,22,64,20,"dates"],[74,27,64,25],[74,28,64,26,"reverse"],[74,35,64,33],[74,36,64,34],[74,37,64,35],[74,40,64,38,"dates"],[74,45,64,43],[75,2,65,0],[77,2,67,0],[78,2,68,0],[78,6,68,0,"_default"],[78,14,68,0],[78,17,68,15,"eachHourOfInterval"],[78,35,68,33],[79,0,68,34],[79,3]],"functionMap":{"names":["<global>","eachHourOfInterval"],"mappings":"AAA;OCyC;CDuB"},"hasCjsExports":false},"type":"js/module"}]}